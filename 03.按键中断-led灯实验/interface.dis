
interface.elf：     文件格式 elf32-littlearm


Disassembly of section .text:

c0008000 <_start>:
.text

	.global	_start
_start:
@ 异常向量表
	b reset
c0008000:	ea00000d 	b	c000803c <reset>
	ldr pc, _undefined_instruction
c0008004:	e59ff014 	ldr	pc, [pc, #20]	; c0008020 <_undefined_instruction>
	ldr pc, _software_interrupt
c0008008:	e59ff014 	ldr	pc, [pc, #20]	; c0008024 <_software_interrupt>
	ldr pc, _prefetch_abort
c000800c:	e59ff014 	ldr	pc, [pc, #20]	; c0008028 <_prefetch_abort>
	ldr pc, _data_abort
c0008010:	e59ff014 	ldr	pc, [pc, #20]	; c000802c <_data_abort>
	ldr pc, _not_used
c0008014:	e59ff014 	ldr	pc, [pc, #20]	; c0008030 <_not_used>
	ldr pc, _irq
c0008018:	e59ff014 	ldr	pc, [pc, #20]	; c0008034 <_irq>
	ldr pc, _fiq
c000801c:	e59ff014 	ldr	pc, [pc, #20]	; c0008038 <_fiq>

c0008020 <_undefined_instruction>:
c0008020:	c0008140 	andgt	r8, r0, r0, asr #2

c0008024 <_software_interrupt>:
c0008024:	c0008160 	andgt	r8, r0, r0, ror #2

c0008028 <_prefetch_abort>:
c0008028:	c0008180 	andgt	r8, r0, r0, lsl #3

c000802c <_data_abort>:
c000802c:	c00081a0 	andgt	r8, r0, r0, lsr #3

c0008030 <_not_used>:
c0008030:	c00081c0 	andgt	r8, r0, r0, asr #3

c0008034 <_irq>:
c0008034:	c00081e0 	andgt	r8, r0, r0, ror #3

c0008038 <_fiq>:
c0008038:	c0008200 	andgt	r8, r0, r0, lsl #4

c000803c <reset>:

 /* The actual reset code */
reset:
	@ 重新映射异常向量表的入口地址
	/* Set Vector Base Address Register */
	mrc p15, 0, r0, c1, c0, 0
c000803c:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
	bic r0, #(1<<13)
c0008040:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
	mcr p15, 0, r0, c1, c0, 0
c0008044:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}
	ldr	r0,=0xc0008000
c0008048:	e59f01b8 	ldr	r0, [pc, #440]	; c0008208 <stacktop+0x4>
	mcr	p15,0,r0,c12,c0,0		@ Vector Base Address Register
c000804c:	ee0c0f10 	mcr	15, 0, r0, cr12, cr0, {0}

	/* Set the cpu to svc32 mode */
	mrs r0, cpsr
c0008050:	e10f0000 	mrs	r0, CPSR
	bic r0, r0, #0x1f
c0008054:	e3c0001f 	bic	r0, r0, #31
	orr r0, r0, #0xd3
c0008058:	e38000d3 	orr	r0, r0, #211	; 0xd3
	msr cpsr, r0
c000805c:	e129f000 	msr	CPSR_fc, r0

	/* Enable NEON/VFP unit */
	mrc p15, #0, r1, c1, c0, #2
c0008060:	ee111f50 	mrc	15, 0, r1, cr1, cr0, {2}
	orr r1, r1, #(0xf << 20)
c0008064:	e381160f 	orr	r1, r1, #15728640	; 0xf00000
	mcr p15, #0, r1, c1, c0, #2
c0008068:	ee011f50 	mcr	15, 0, r1, cr1, cr0, {2}
	mov r1, #0
c000806c:	e3a01000 	mov	r1, #0
	mcr p15, #0, r1, c7, c5, #4
c0008070:	ee071f95 	mcr	15, 0, r1, cr7, cr5, {4}
	mov r0, #0x40000000
c0008074:	e3a00101 	mov	r0, #1073741824	; 0x40000000
	fmxr fpexc, r0
c0008078:	eee80a10 	vmsr	fpexc, r0

	/* Cache init */
	mrc	p15, 0, r0, c0, c0, 0
c000807c:	ee100f10 	mrc	15, 0, r0, cr0, cr0, {0}
	and	r1, r0, #0x00f00000
c0008080:	e200160f 	and	r1, r0, #15728640	; 0xf00000
	and	r2, r0, #0x0000000f
c0008084:	e200200f 	and	r2, r0, #15
	orr r2, r2, r1, lsr #20-4
c0008088:	e1822821 	orr	r2, r2, r1, lsr #16
	cmp r2, #0x30
c000808c:	e3520030 	cmp	r2, #48	; 0x30
	mrceq p15, 0, r0, c1, c0, 1
c0008090:	0e110f30 	mrceq	15, 0, r0, cr1, cr0, {1}
	orreq r0, r0, #0x6
c0008094:	03800006 	orreq	r0, r0, #6
	mcreq p15, 0, r0, c1, c0, 1
c0008098:	0e010f30 	mcreq	15, 0, r0, cr1, cr0, {1}

	/* Invalidate L1 I/D */
	mov r0, #0
c000809c:	e3a00000 	mov	r0, #0
	mcr	p15, 0, r0, c8, c7, 0
c00080a0:	ee080f17 	mcr	15, 0, r0, cr8, cr7, {0}
	mcr	p15, 0, r0, c7, c5, 0
c00080a4:	ee070f15 	mcr	15, 0, r0, cr7, cr5, {0}

	/* Disable mmu stuff and caches */
	mrc p15, 0, r0, c1, c0, 0
c00080a8:	ee110f10 	mrc	15, 0, r0, cr1, cr0, {0}
	bic r0, r0, #0x00002000
c00080ac:	e3c00a02 	bic	r0, r0, #8192	; 0x2000
	bic r0, r0, #0x00000007
c00080b0:	e3c00007 	bic	r0, r0, #7
	orr r0, r0, #0x00001000
c00080b4:	e3800a01 	orr	r0, r0, #4096	; 0x1000
	orr r0, r0, #0x00000002
c00080b8:	e3800002 	orr	r0, r0, #2
	orr r0, r0, #0x00000800
c00080bc:	e3800b02 	orr	r0, r0, #2048	; 0x800
	mcr p15, 0, r0, c1, c0, 0
c00080c0:	ee010f10 	mcr	15, 0, r0, cr1, cr0, {0}

c00080c4 <init_stack>:

	/* Initialize stacks */
	@ 初始化各种模式下的栈空间
init_stack:
	ldr	r0, stacktop        /*get stack top pointer*/
c00080c4:	e59f0138 	ldr	r0, [pc, #312]	; c0008204 <stacktop>

	/********svc mode stack********/
	mov	sp, r0
c00080c8:	e1a0d000 	mov	sp, r0
	sub	r0, #128*4          /*512 byte  for irq mode of stack*/
c00080cc:	e2400c02 	sub	r0, r0, #512	; 0x200
	/********irq mode stack********/
	msr	cpsr, #0xd2
c00080d0:	e329f0d2 	msr	CPSR_fc, #210	; 0xd2
	mov	sp, r0
c00080d4:	e1a0d000 	mov	sp, r0
	sub	r0, #128*4          /*512 byte  for fiq mode of stack*/
c00080d8:	e2400c02 	sub	r0, r0, #512	; 0x200
	/********fiq mode stack********/
	msr	cpsr, #0xd1
c00080dc:	e329f0d1 	msr	CPSR_fc, #209	; 0xd1
	mov	sp, r0
c00080e0:	e1a0d000 	mov	sp, r0
	sub	r0, #0
c00080e4:	e2400000 	sub	r0, r0, #0
	/********abort mode stack******/
	msr	cpsr, #0xd7
c00080e8:	e329f0d7 	msr	CPSR_fc, #215	; 0xd7
	mov	sp, r0
c00080ec:	e1a0d000 	mov	sp, r0
	sub	r0, #0
c00080f0:	e2400000 	sub	r0, r0, #0
	/********undefine mode stack**/
	msr	cpsr, #0xdb
c00080f4:	e329f0db 	msr	CPSR_fc, #219	; 0xdb
	mov	sp, r0
c00080f8:	e1a0d000 	mov	sp, r0
	sub	r0, #0
c00080fc:	e2400000 	sub	r0, r0, #0
    /***sys mode and usr mode stack***/
	msr	cpsr, #0x10
c0008100:	e329f010 	msr	CPSR_fc, #16
	mov	sp, r0             /*1024 byte  for user mode of stack*/
c0008104:	e1a0d000 	mov	sp, r0

    /******clear bss section********/
	@ 清除BSS段
	ldr	r0, =__bss_start	/* this is auto-relocated! */
c0008108:	e59f00fc 	ldr	r0, [pc, #252]	; c000820c <stacktop+0x8>
	ldr	r1, =__bss_end__	/* this is auto-relocated! */
c000810c:	e59f10fc 	ldr	r1, [pc, #252]	; c0008210 <stacktop+0xc>
	mov	r2, #0x00000000		/* prepare zero to clear BSS */
c0008110:	e3a02000 	mov	r2, #0

c0008114 <clbss_l>:

clbss_l: cmp r0, r1			/* while not at end of BSS */
c0008114:	e1500001 	cmp	r0, r1
	strlo r2, [r0]			/* clear 32-bit BSS word */
c0008118:	35802000 	strcc	r2, [r0]
	addlo r0, r0, #4		/* move to next */
c000811c:	32800004 	addcc	r0, r0, #4
	blo	clbss_l
c0008120:	3afffffb 	bcc	c0008114 <clbss_l>

	/* Call _main */
	ldr pc, =main     @ 汇编调用C  跳转到main.c文件的main函数中
c0008124:	e59ff0e8 	ldr	pc, [pc, #232]	; c0008214 <stacktop+0x10>
c0008128:	e320f000 	nop	{0}
c000812c:	e320f000 	nop	{0}
c0008130:	e320f000 	nop	{0}
c0008134:	e320f000 	nop	{0}
c0008138:	e320f000 	nop	{0}
c000813c:	e320f000 	nop	{0}

c0008140 <undefined_instruction>:
/*
 * Exception handlers
 */
	.align 5  // 2的5次方，=32bit 也就是4字节对其
undefined_instruction:
	b	.
c0008140:	eafffffe 	b	c0008140 <undefined_instruction>
c0008144:	e320f000 	nop	{0}
c0008148:	e320f000 	nop	{0}
c000814c:	e320f000 	nop	{0}
c0008150:	e320f000 	nop	{0}
c0008154:	e320f000 	nop	{0}
c0008158:	e320f000 	nop	{0}
c000815c:	e320f000 	nop	{0}

c0008160 <software_interrupt>:

	.align 5
software_interrupt:
	b	.
c0008160:	eafffffe 	b	c0008160 <software_interrupt>
c0008164:	e320f000 	nop	{0}
c0008168:	e320f000 	nop	{0}
c000816c:	e320f000 	nop	{0}
c0008170:	e320f000 	nop	{0}
c0008174:	e320f000 	nop	{0}
c0008178:	e320f000 	nop	{0}
c000817c:	e320f000 	nop	{0}

c0008180 <prefetch_abort>:

	.align 5
prefetch_abort:
	b	.
c0008180:	eafffffe 	b	c0008180 <prefetch_abort>
c0008184:	e320f000 	nop	{0}
c0008188:	e320f000 	nop	{0}
c000818c:	e320f000 	nop	{0}
c0008190:	e320f000 	nop	{0}
c0008194:	e320f000 	nop	{0}
c0008198:	e320f000 	nop	{0}
c000819c:	e320f000 	nop	{0}

c00081a0 <data_abort>:

	.align 5
data_abort:
	b	.
c00081a0:	eafffffe 	b	c00081a0 <data_abort>
c00081a4:	e320f000 	nop	{0}
c00081a8:	e320f000 	nop	{0}
c00081ac:	e320f000 	nop	{0}
c00081b0:	e320f000 	nop	{0}
c00081b4:	e320f000 	nop	{0}
c00081b8:	e320f000 	nop	{0}
c00081bc:	e320f000 	nop	{0}

c00081c0 <not_used>:

	.align 5
not_used:
	b	.
c00081c0:	eafffffe 	b	c00081c0 <not_used>
c00081c4:	e320f000 	nop	{0}
c00081c8:	e320f000 	nop	{0}
c00081cc:	e320f000 	nop	{0}
c00081d0:	e320f000 	nop	{0}
c00081d4:	e320f000 	nop	{0}
c00081d8:	e320f000 	nop	{0}
c00081dc:	e320f000 	nop	{0}

c00081e0 <irq>:

	.align 5
	.global irq
irq:
	sub  lr, lr, #4
c00081e0:	e24ee004 	sub	lr, lr, #4
	stmfd sp!, {r0-r12, lr}
c00081e4:	e92d5fff 	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, lr}
	bl do_irq   @中断处理函数
c00081e8:	eb000540 	bl	c00096f0 <do_irq>
	ldmfd sp!, {r0-r12, pc}^
c00081ec:	e8fd9fff 	ldm	sp!, {r0, r1, r2, r3, r4, r5, r6, r7, r8, r9, sl, fp, ip, pc}^
c00081f0:	e320f000 	nop	{0}
c00081f4:	e320f000 	nop	{0}
c00081f8:	e320f000 	nop	{0}
c00081fc:	e320f000 	nop	{0}

c0008200 <fiq>:

	.align 5
	.global fiq
fiq:
	b .
c0008200:	eafffffe 	b	c0008200 <fiq>

c0008204 <stacktop>:
c0008204:	c000a984 	andgt	sl, r0, r4, lsl #19
	ldr	r0,=0xc0008000
c0008208:	c0008000 	andgt	r8, r0, r0
	ldr	r0, =__bss_start	/* this is auto-relocated! */
c000820c:	c000aa84 	andgt	sl, r0, r4, lsl #21
	ldr	r1, =__bss_end__	/* this is auto-relocated! */
c0008210:	c000aa88 	andgt	sl, r0, r8, lsl #21
	ldr pc, =main     @ 汇编调用C  跳转到main.c文件的main函数中
c0008214:	c0009fe0 	andgt	r9, r0, r0, ror #31

c0008218 <__umodsi3>:
	.text
	.globl	 __umodsi3
	.type  __umodsi3       ,function
	.align 0
 __umodsi3      :
	cmp	divisor, #0
c0008218:	e3510000 	cmp	r1, #0
	beq	Ldiv0
c000821c:	0a000026 	beq	c00082bc <Ldiv0>
	mov	curbit, #1
c0008220:	e3a03001 	mov	r3, #1
	cmp	dividend, divisor
c0008224:	e1500001 	cmp	r0, r1
	movcc	pc, lr
c0008228:	31a0f00e 	movcc	pc, lr

c000822c <Loop1>:
Loop1:
	@ Unless the divisor is very big, shift it up in multiples of
	@ four bits, since this is the amount of unwinding in the main
	@ division loop.  Continue shifting until the divisor is
	@ larger than the dividend.
	cmp	divisor, #0x10000000
c000822c:	e3510201 	cmp	r1, #268435456	; 0x10000000
	cmpcc	divisor, dividend
c0008230:	31510000 	cmpcc	r1, r0
	movcc	divisor, divisor, lsl #4
c0008234:	31a01201 	lslcc	r1, r1, #4
	movcc	curbit, curbit, lsl #4
c0008238:	31a03203 	lslcc	r3, r3, #4
	bcc	Loop1
c000823c:	3afffffa 	bcc	c000822c <Loop1>

c0008240 <Lbignum>:
Lbignum:
	@ For very big divisors, we must shift it a bit at a time, or
	@ we will be in danger of overflowing.
	cmp	divisor, #0x80000000
c0008240:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
	cmpcc	divisor, dividend
c0008244:	31510000 	cmpcc	r1, r0
	movcc	divisor, divisor, lsl #1
c0008248:	31a01081 	lslcc	r1, r1, #1
	movcc	curbit, curbit, lsl #1
c000824c:	31a03083 	lslcc	r3, r3, #1
	bcc	Lbignum
c0008250:	3afffffa 	bcc	c0008240 <Lbignum>

c0008254 <Loop3>:
Loop3:
	@ Test for possible subtractions.  On the final pass, this may
	@ subtract too much from the dividend, so keep track of which
	@ subtractions are done, we can fix them up afterwards...
	mov	overdone, #0
c0008254:	e3a02000 	mov	r2, #0
	cmp	dividend, divisor
c0008258:	e1500001 	cmp	r0, r1
	subcs	dividend, dividend, divisor
c000825c:	20400001 	subcs	r0, r0, r1
	cmp	dividend, divisor, lsr #1
c0008260:	e15000a1 	cmp	r0, r1, lsr #1
	subcs	dividend, dividend, divisor, lsr #1
c0008264:	204000a1 	subcs	r0, r0, r1, lsr #1
	orrcs	overdone, overdone, curbit, ror #1
c0008268:	218220e3 	orrcs	r2, r2, r3, ror #1
	cmp	dividend, divisor, lsr #2
c000826c:	e1500121 	cmp	r0, r1, lsr #2
	subcs	dividend, dividend, divisor, lsr #2
c0008270:	20400121 	subcs	r0, r0, r1, lsr #2
	orrcs	overdone, overdone, curbit, ror #2
c0008274:	21822163 	orrcs	r2, r2, r3, ror #2
	cmp	dividend, divisor, lsr #3
c0008278:	e15001a1 	cmp	r0, r1, lsr #3
	subcs	dividend, dividend, divisor, lsr #3
c000827c:	204001a1 	subcs	r0, r0, r1, lsr #3
	orrcs	overdone, overdone, curbit, ror #3
c0008280:	218221e3 	orrcs	r2, r2, r3, ror #3
	mov	ip, curbit
c0008284:	e1a0c003 	mov	ip, r3
	cmp	dividend, #0			@ Early termination?
c0008288:	e3500000 	cmp	r0, #0
	movnes	curbit, curbit, lsr #4		@ No, any more bits to do?
c000828c:	11b03223 	lsrsne	r3, r3, #4
	movne	divisor, divisor, lsr #4
c0008290:	11a01221 	lsrne	r1, r1, #4
	bne	Loop3
c0008294:	1affffee 	bne	c0008254 <Loop3>
	@ the top three bits of "overdone".  Exactly which were not needed
	@ are governed by the position of the bit, stored in ip.
	@ If we terminated early, because dividend became zero,
	@ then none of the below will match, since the bit in ip will not be
	@ in the bottom nibble.
	ands	overdone, overdone, #0xe0000000
c0008298:	e212220e 	ands	r2, r2, #-536870912	; 0xe0000000
	moveq	pc, lr				@ No fixups needed
c000829c:	01a0f00e 	moveq	pc, lr
	tst	overdone, ip, ror #3
c00082a0:	e11201ec 	tst	r2, ip, ror #3
	addne	dividend, dividend, divisor, lsr #3
c00082a4:	108001a1 	addne	r0, r0, r1, lsr #3
	tst	overdone, ip, ror #2
c00082a8:	e112016c 	tst	r2, ip, ror #2
	addne	dividend, dividend, divisor, lsr #2
c00082ac:	10800121 	addne	r0, r0, r1, lsr #2
	tst	overdone, ip, ror #1
c00082b0:	e11200ec 	tst	r2, ip, ror #1
	addne	dividend, dividend, divisor, lsr #1
c00082b4:	108000a1 	addne	r0, r0, r1, lsr #1
	mov	pc, lr
c00082b8:	e1a0f00e 	mov	pc, lr

c00082bc <Ldiv0>:
Ldiv0:
	str	lr, [sp, #-4]!
c00082bc:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
@	bl	 __div0       (PLT)
	mov	r0, #0			@ about as wrong as it could be
c00082c0:	e3a00000 	mov	r0, #0
	ldmia	sp!, {pc}
c00082c4:	e8bd8000 	ldmfd	sp!, {pc}

c00082c8 <__udivsi3>:
	.text
	.globl	 __udivsi3
	.type  __udivsi3       ,function
	.align	0
 __udivsi3      :
	cmp	divisor, #0
c00082c8:	e3510000 	cmp	r1, #0
	beq	Ldiv0
c00082cc:	0a00001f 	beq	c0008350 <Ldiv0>
	mov	curbit, #1
c00082d0:	e3a03001 	mov	r3, #1
	mov	result, #0
c00082d4:	e3a02000 	mov	r2, #0
	cmp	dividend, divisor
c00082d8:	e1500001 	cmp	r0, r1
	bcc	Lgot_result
c00082dc:	3a000019 	bcc	c0008348 <Lgot_result>

c00082e0 <Loop1>:
Loop1:
	@ Unless the divisor is very big, shift it up in multiples of
	@ four bits, since this is the amount of unwinding in the main
	@ division loop.  Continue shifting until the divisor is
	@ larger than the dividend.
	cmp	divisor, #0x10000000
c00082e0:	e3510201 	cmp	r1, #268435456	; 0x10000000
	cmpcc	divisor, dividend
c00082e4:	31510000 	cmpcc	r1, r0
	movcc	divisor, divisor, lsl #4
c00082e8:	31a01201 	lslcc	r1, r1, #4
	movcc	curbit, curbit, lsl #4
c00082ec:	31a03203 	lslcc	r3, r3, #4
	bcc	Loop1
c00082f0:	3afffffa 	bcc	c00082e0 <Loop1>

c00082f4 <Lbignum>:
Lbignum:
	@ For very big divisors, we must shift it a bit at a time, or
	@ we will be in danger of overflowing.
	cmp	divisor, #0x80000000
c00082f4:	e3510102 	cmp	r1, #-2147483648	; 0x80000000
	cmpcc	divisor, dividend
c00082f8:	31510000 	cmpcc	r1, r0
	movcc	divisor, divisor, lsl #1
c00082fc:	31a01081 	lslcc	r1, r1, #1
	movcc	curbit, curbit, lsl #1
c0008300:	31a03083 	lslcc	r3, r3, #1
	bcc	Lbignum
c0008304:	3afffffa 	bcc	c00082f4 <Lbignum>

c0008308 <Loop3>:
Loop3:
	@ Test for possible subtractions, and note which bits
	@ are done in the result.  On the final pass, this may subtract
	@ too much from the dividend, but the result will be ok, since the
	@ "bit" will have been shifted out at the bottom.
	cmp	dividend, divisor
c0008308:	e1500001 	cmp	r0, r1
	subcs	dividend, dividend, divisor
c000830c:	20400001 	subcs	r0, r0, r1
	orrcs	result, result, curbit
c0008310:	21822003 	orrcs	r2, r2, r3
	cmp	dividend, divisor, lsr #1
c0008314:	e15000a1 	cmp	r0, r1, lsr #1
	subcs	dividend, dividend, divisor, lsr #1
c0008318:	204000a1 	subcs	r0, r0, r1, lsr #1
	orrcs	result, result, curbit, lsr #1
c000831c:	218220a3 	orrcs	r2, r2, r3, lsr #1
	cmp	dividend, divisor, lsr #2
c0008320:	e1500121 	cmp	r0, r1, lsr #2
	subcs	dividend, dividend, divisor, lsr #2
c0008324:	20400121 	subcs	r0, r0, r1, lsr #2
	orrcs	result, result, curbit, lsr #2
c0008328:	21822123 	orrcs	r2, r2, r3, lsr #2
	cmp	dividend, divisor, lsr #3
c000832c:	e15001a1 	cmp	r0, r1, lsr #3
	subcs	dividend, dividend, divisor, lsr #3
c0008330:	204001a1 	subcs	r0, r0, r1, lsr #3
	orrcs	result, result, curbit, lsr #3
c0008334:	218221a3 	orrcs	r2, r2, r3, lsr #3
	cmp	dividend, #0			@ Early termination?
c0008338:	e3500000 	cmp	r0, #0
	movnes	curbit, curbit, lsr #4		@ No, any more bits to do?
c000833c:	11b03223 	lsrsne	r3, r3, #4
	movne	divisor, divisor, lsr #4
c0008340:	11a01221 	lsrne	r1, r1, #4
	bne	Loop3
c0008344:	1affffef 	bne	c0008308 <Loop3>

c0008348 <Lgot_result>:
Lgot_result:
	mov	r0, result
c0008348:	e1a00002 	mov	r0, r2
	mov	pc, lr
c000834c:	e1a0f00e 	mov	pc, lr

c0008350 <Ldiv0>:
Ldiv0:
	str	lr, [sp, #-4]!
c0008350:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)
	@bl	 __div0       (PLT)
	mov	r0, #0			@ about as wrong as it could be
c0008354:	e3a00000 	mov	r0, #0
	ldmia	sp!, {pc}
c0008358:	e8bd8000 	ldmfd	sp!, {pc}

c000835c <__toupper>:
		c -= 'A'-'a';
	return c;
}

static inline unsigned char __toupper(unsigned char c)
{
c000835c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0008360:	e28db000 	add	fp, sp, #0
c0008364:	e24dd004 	sub	sp, sp, #4
c0008368:	e1a03000 	mov	r3, r0
c000836c:	e54b3004 	strb	r3, [fp, #-4]
	if (islower(c))
c0008370:	e55b2004 	ldrb	r2, [fp, #-4]
c0008374:	e30a3984 	movw	r3, #43396	; 0xa984
c0008378:	e34c3000 	movt	r3, #49152	; 0xc000
c000837c:	e7d33002 	ldrb	r3, [r3, r2]
c0008380:	e2033002 	and	r3, r3, #2
c0008384:	e3530000 	cmp	r3, #0
c0008388:	0a000002 	beq	c0008398 <__toupper+0x3c>
		c -= 'a'-'A';
c000838c:	e55b3004 	ldrb	r3, [fp, #-4]
c0008390:	e2433020 	sub	r3, r3, #32
c0008394:	e54b3004 	strb	r3, [fp, #-4]
	return c;
c0008398:	e55b3004 	ldrb	r3, [fp, #-4]
}
c000839c:	e1a00003 	mov	r0, r3
c00083a0:	e28bd000 	add	sp, fp, #0
c00083a4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c00083a8:	e12fff1e 	bx	lr

c00083ac <simple_strtoul>:
#include <ctype.h>
#include "uart.h"
#define size_t unsigned int

unsigned long simple_strtoul(const char *cp,char **endp,unsigned int base)
{
c00083ac:	e92d4800 	push	{fp, lr}
c00083b0:	e28db004 	add	fp, sp, #4
c00083b4:	e24dd014 	sub	sp, sp, #20
c00083b8:	e50b0010 	str	r0, [fp, #-16]
c00083bc:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
c00083c0:	e50b2018 	str	r2, [fp, #-24]	; 0xffffffe8
	unsigned long result = 0,value;
c00083c4:	e3a03000 	mov	r3, #0
c00083c8:	e50b3008 	str	r3, [fp, #-8]

	if (*cp == '0') {
c00083cc:	e51b3010 	ldr	r3, [fp, #-16]
c00083d0:	e5d33000 	ldrb	r3, [r3]
c00083d4:	e3530030 	cmp	r3, #48	; 0x30
c00083d8:	1a00001a 	bne	c0008448 <simple_strtoul+0x9c>
		cp++;
c00083dc:	e51b3010 	ldr	r3, [fp, #-16]
c00083e0:	e2833001 	add	r3, r3, #1
c00083e4:	e50b3010 	str	r3, [fp, #-16]
		if ((*cp == 'x') && isxdigit(cp[1])) {
c00083e8:	e51b3010 	ldr	r3, [fp, #-16]
c00083ec:	e5d33000 	ldrb	r3, [r3]
c00083f0:	e3530078 	cmp	r3, #120	; 0x78
c00083f4:	1a00000e 	bne	c0008434 <simple_strtoul+0x88>
c00083f8:	e51b3010 	ldr	r3, [fp, #-16]
c00083fc:	e2833001 	add	r3, r3, #1
c0008400:	e5d33000 	ldrb	r3, [r3]
c0008404:	e1a02003 	mov	r2, r3
c0008408:	e30a3984 	movw	r3, #43396	; 0xa984
c000840c:	e34c3000 	movt	r3, #49152	; 0xc000
c0008410:	e7d33002 	ldrb	r3, [r3, r2]
c0008414:	e2033044 	and	r3, r3, #68	; 0x44
c0008418:	e3530000 	cmp	r3, #0
c000841c:	0a000004 	beq	c0008434 <simple_strtoul+0x88>
			base = 16;
c0008420:	e3a03010 	mov	r3, #16
c0008424:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
			cp++;
c0008428:	e51b3010 	ldr	r3, [fp, #-16]
c000842c:	e2833001 	add	r3, r3, #1
c0008430:	e50b3010 	str	r3, [fp, #-16]
		}
		if (!base) {
c0008434:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
c0008438:	e3530000 	cmp	r3, #0
c000843c:	1a000001 	bne	c0008448 <simple_strtoul+0x9c>
			base = 8;
c0008440:	e3a03008 	mov	r3, #8
c0008444:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
		}
	}
	if (!base) {
c0008448:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
c000844c:	e3530000 	cmp	r3, #0
c0008450:	1a00000b 	bne	c0008484 <simple_strtoul+0xd8>
		base = 10;
c0008454:	e3a0300a 	mov	r3, #10
c0008458:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
	}
	while (isxdigit(*cp) && (value = isdigit(*cp) ? *cp-'0' : (islower(*cp)
c000845c:	ea000008 	b	c0008484 <simple_strtoul+0xd8>
	    ? toupper(*cp) : *cp)-'A'+10) < base) {
		result = result*base + value;
c0008460:	e51b3008 	ldr	r3, [fp, #-8]
c0008464:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
c0008468:	e0030392 	mul	r3, r2, r3
c000846c:	e51b200c 	ldr	r2, [fp, #-12]
c0008470:	e0823003 	add	r3, r2, r3
c0008474:	e50b3008 	str	r3, [fp, #-8]
		cp++;
c0008478:	e51b3010 	ldr	r3, [fp, #-16]
c000847c:	e2833001 	add	r3, r3, #1
c0008480:	e50b3010 	str	r3, [fp, #-16]
	while (isxdigit(*cp) && (value = isdigit(*cp) ? *cp-'0' : (islower(*cp)
c0008484:	e51b3010 	ldr	r3, [fp, #-16]
c0008488:	e5d33000 	ldrb	r3, [r3]
c000848c:	e1a02003 	mov	r2, r3
c0008490:	e30a3984 	movw	r3, #43396	; 0xa984
c0008494:	e34c3000 	movt	r3, #49152	; 0xc000
c0008498:	e7d33002 	ldrb	r3, [r3, r2]
c000849c:	e2033044 	and	r3, r3, #68	; 0x44
c00084a0:	e3530000 	cmp	r3, #0
c00084a4:	0a000024 	beq	c000853c <simple_strtoul+0x190>
c00084a8:	e51b3010 	ldr	r3, [fp, #-16]
c00084ac:	e5d33000 	ldrb	r3, [r3]
c00084b0:	e1a02003 	mov	r2, r3
c00084b4:	e30a3984 	movw	r3, #43396	; 0xa984
c00084b8:	e34c3000 	movt	r3, #49152	; 0xc000
c00084bc:	e7d33002 	ldrb	r3, [r3, r2]
c00084c0:	e2033004 	and	r3, r3, #4
c00084c4:	e3530000 	cmp	r3, #0
c00084c8:	0a000003 	beq	c00084dc <simple_strtoul+0x130>
c00084cc:	e51b3010 	ldr	r3, [fp, #-16]
c00084d0:	e5d33000 	ldrb	r3, [r3]
c00084d4:	e2433030 	sub	r3, r3, #48	; 0x30
c00084d8:	ea000012 	b	c0008528 <simple_strtoul+0x17c>
c00084dc:	e51b3010 	ldr	r3, [fp, #-16]
c00084e0:	e5d33000 	ldrb	r3, [r3]
c00084e4:	e1a02003 	mov	r2, r3
c00084e8:	e30a3984 	movw	r3, #43396	; 0xa984
c00084ec:	e34c3000 	movt	r3, #49152	; 0xc000
c00084f0:	e7d33002 	ldrb	r3, [r3, r2]
c00084f4:	e2033002 	and	r3, r3, #2
c00084f8:	e3530000 	cmp	r3, #0
c00084fc:	0a000006 	beq	c000851c <simple_strtoul+0x170>
	    ? toupper(*cp) : *cp)-'A'+10) < base) {
c0008500:	e51b3010 	ldr	r3, [fp, #-16]
c0008504:	e5d33000 	ldrb	r3, [r3]
c0008508:	e1a00003 	mov	r0, r3
c000850c:	ebffff92 	bl	c000835c <__toupper>
c0008510:	e1a03000 	mov	r3, r0
c0008514:	e2433037 	sub	r3, r3, #55	; 0x37
c0008518:	ea000002 	b	c0008528 <simple_strtoul+0x17c>
c000851c:	e51b3010 	ldr	r3, [fp, #-16]
c0008520:	e5d33000 	ldrb	r3, [r3]
c0008524:	e2433037 	sub	r3, r3, #55	; 0x37
	while (isxdigit(*cp) && (value = isdigit(*cp) ? *cp-'0' : (islower(*cp)
c0008528:	e50b300c 	str	r3, [fp, #-12]
c000852c:	e51b200c 	ldr	r2, [fp, #-12]
c0008530:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
c0008534:	e1520003 	cmp	r2, r3
c0008538:	3affffc8 	bcc	c0008460 <simple_strtoul+0xb4>
	}
	if (endp)
c000853c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0008540:	e3530000 	cmp	r3, #0
c0008544:	0a000002 	beq	c0008554 <simple_strtoul+0x1a8>
		*endp = (char *)cp;
c0008548:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c000854c:	e51b2010 	ldr	r2, [fp, #-16]
c0008550:	e5832000 	str	r2, [r3]
	return result;
c0008554:	e51b3008 	ldr	r3, [fp, #-8]
}
c0008558:	e1a00003 	mov	r0, r3
c000855c:	e24bd004 	sub	sp, fp, #4
c0008560:	e8bd8800 	pop	{fp, pc}

c0008564 <simple_strtol>:

long simple_strtol(const char *cp,char **endp,unsigned int base)
{
c0008564:	e92d4800 	push	{fp, lr}
c0008568:	e28db004 	add	fp, sp, #4
c000856c:	e24dd00c 	sub	sp, sp, #12
c0008570:	e50b0008 	str	r0, [fp, #-8]
c0008574:	e50b100c 	str	r1, [fp, #-12]
c0008578:	e50b2010 	str	r2, [fp, #-16]
	if(*cp=='-')
c000857c:	e51b3008 	ldr	r3, [fp, #-8]
c0008580:	e5d33000 	ldrb	r3, [r3]
c0008584:	e353002d 	cmp	r3, #45	; 0x2d
c0008588:	1a000008 	bne	c00085b0 <simple_strtol+0x4c>
		return -simple_strtoul(cp+1,endp,base);
c000858c:	e51b3008 	ldr	r3, [fp, #-8]
c0008590:	e2833001 	add	r3, r3, #1
c0008594:	e51b2010 	ldr	r2, [fp, #-16]
c0008598:	e51b100c 	ldr	r1, [fp, #-12]
c000859c:	e1a00003 	mov	r0, r3
c00085a0:	ebffff81 	bl	c00083ac <simple_strtoul>
c00085a4:	e1a03000 	mov	r3, r0
c00085a8:	e2633000 	rsb	r3, r3, #0
c00085ac:	ea000004 	b	c00085c4 <simple_strtol+0x60>
	return simple_strtoul(cp,endp,base);
c00085b0:	e51b2010 	ldr	r2, [fp, #-16]
c00085b4:	e51b100c 	ldr	r1, [fp, #-12]
c00085b8:	e51b0008 	ldr	r0, [fp, #-8]
c00085bc:	ebffff7a 	bl	c00083ac <simple_strtoul>
c00085c0:	e1a03000 	mov	r3, r0
}
c00085c4:	e1a00003 	mov	r0, r3
c00085c8:	e24bd004 	sub	sp, fp, #4
c00085cc:	e8bd8800 	pop	{fp, pc}

c00085d0 <skip_atoi>:

/* we use this so that we can do without the ctype library */
#define is_digit(c)	((c) >= '0' && (c) <= '9')

static int skip_atoi(const char **s)
{
c00085d0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c00085d4:	e28db000 	add	fp, sp, #0
c00085d8:	e24dd008 	sub	sp, sp, #8
c00085dc:	e50b0008 	str	r0, [fp, #-8]
	int i=0;
c00085e0:	e3a03000 	mov	r3, #0
c00085e4:	e50b3004 	str	r3, [fp, #-4]

	while (is_digit(**s))
c00085e8:	ea00000e 	b	c0008628 <skip_atoi+0x58>
		i = i*10 + *((*s)++) - '0';
c00085ec:	e51b2004 	ldr	r2, [fp, #-4]
c00085f0:	e1a03002 	mov	r3, r2
c00085f4:	e1a03103 	lsl	r3, r3, #2
c00085f8:	e0833002 	add	r3, r3, r2
c00085fc:	e1a03083 	lsl	r3, r3, #1
c0008600:	e1a00003 	mov	r0, r3
c0008604:	e51b3008 	ldr	r3, [fp, #-8]
c0008608:	e5933000 	ldr	r3, [r3]
c000860c:	e2831001 	add	r1, r3, #1
c0008610:	e51b2008 	ldr	r2, [fp, #-8]
c0008614:	e5821000 	str	r1, [r2]
c0008618:	e5d33000 	ldrb	r3, [r3]
c000861c:	e0803003 	add	r3, r0, r3
c0008620:	e2433030 	sub	r3, r3, #48	; 0x30
c0008624:	e50b3004 	str	r3, [fp, #-4]
	while (is_digit(**s))
c0008628:	e51b3008 	ldr	r3, [fp, #-8]
c000862c:	e5933000 	ldr	r3, [r3]
c0008630:	e5d33000 	ldrb	r3, [r3]
c0008634:	e353002f 	cmp	r3, #47	; 0x2f
c0008638:	9a000004 	bls	c0008650 <skip_atoi+0x80>
c000863c:	e51b3008 	ldr	r3, [fp, #-8]
c0008640:	e5933000 	ldr	r3, [r3]
c0008644:	e5d33000 	ldrb	r3, [r3]
c0008648:	e3530039 	cmp	r3, #57	; 0x39
c000864c:	9affffe6 	bls	c00085ec <skip_atoi+0x1c>
	return i;
c0008650:	e51b3004 	ldr	r3, [fp, #-4]
}
c0008654:	e1a00003 	mov	r0, r3
c0008658:	e28bd000 	add	sp, fp, #0
c000865c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0008660:	e12fff1e 	bx	lr

c0008664 <number>:
#ifdef CFG_64BIT_VSPRINTF
static char * number(char * str, long long num, unsigned int base, int size, int precision ,int type)
#else
static char * number(char * str, long num, unsigned int base, int size, int precision ,int type)
#endif
{
c0008664:	e92d4800 	push	{fp, lr}
c0008668:	e28db004 	add	fp, sp, #4
c000866c:	e24dd068 	sub	sp, sp, #104	; 0x68
c0008670:	e50b0060 	str	r0, [fp, #-96]	; 0xffffffa0
c0008674:	e50b1064 	str	r1, [fp, #-100]	; 0xffffff9c
c0008678:	e50b2068 	str	r2, [fp, #-104]	; 0xffffff98
c000867c:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
	char c,sign,tmp[66];
	const char *digits="0123456789abcdefghijklmnopqrstuvwxyz";
c0008680:	e30a3078 	movw	r3, #41080	; 0xa078
c0008684:	e34c3000 	movt	r3, #49152	; 0xc000
c0008688:	e50b300c 	str	r3, [fp, #-12]
	int i;

	if (type & LARGE)
c000868c:	e59b3008 	ldr	r3, [fp, #8]
c0008690:	e2033040 	and	r3, r3, #64	; 0x40
c0008694:	e3530000 	cmp	r3, #0
c0008698:	0a000002 	beq	c00086a8 <number+0x44>
		digits = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
c000869c:	e30a30a0 	movw	r3, #41120	; 0xa0a0
c00086a0:	e34c3000 	movt	r3, #49152	; 0xc000
c00086a4:	e50b300c 	str	r3, [fp, #-12]
	if (type & LEFT)
c00086a8:	e59b3008 	ldr	r3, [fp, #8]
c00086ac:	e2033010 	and	r3, r3, #16
c00086b0:	e3530000 	cmp	r3, #0
c00086b4:	0a000002 	beq	c00086c4 <number+0x60>
		type &= ~ZEROPAD;
c00086b8:	e59b3008 	ldr	r3, [fp, #8]
c00086bc:	e3c33001 	bic	r3, r3, #1
c00086c0:	e58b3008 	str	r3, [fp, #8]
	if (base < 2 || base > 36)
c00086c4:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c00086c8:	e3530001 	cmp	r3, #1
c00086cc:	9a000002 	bls	c00086dc <number+0x78>
c00086d0:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c00086d4:	e3530024 	cmp	r3, #36	; 0x24
c00086d8:	9a000001 	bls	c00086e4 <number+0x80>
		return 0;
c00086dc:	e3a03000 	mov	r3, #0
c00086e0:	ea0000d5 	b	c0008a3c <number+0x3d8>
	c = (type & ZEROPAD) ? '0' : ' ';
c00086e4:	e59b3008 	ldr	r3, [fp, #8]
c00086e8:	e2033001 	and	r3, r3, #1
c00086ec:	e3530000 	cmp	r3, #0
c00086f0:	0a000001 	beq	c00086fc <number+0x98>
c00086f4:	e3a03030 	mov	r3, #48	; 0x30
c00086f8:	ea000000 	b	c0008700 <number+0x9c>
c00086fc:	e3a03020 	mov	r3, #32
c0008700:	e54b3011 	strb	r3, [fp, #-17]	; 0xffffffef
	sign = 0;
c0008704:	e3a03000 	mov	r3, #0
c0008708:	e54b3005 	strb	r3, [fp, #-5]
	if (type & SIGN) {
c000870c:	e59b3008 	ldr	r3, [fp, #8]
c0008710:	e2033002 	and	r3, r3, #2
c0008714:	e3530000 	cmp	r3, #0
c0008718:	0a00001e 	beq	c0008798 <number+0x134>
		if (num < 0) {
c000871c:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c0008720:	e3530000 	cmp	r3, #0
c0008724:	aa000008 	bge	c000874c <number+0xe8>
			sign = '-';
c0008728:	e3a0302d 	mov	r3, #45	; 0x2d
c000872c:	e54b3005 	strb	r3, [fp, #-5]
			num = -num;
c0008730:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c0008734:	e2633000 	rsb	r3, r3, #0
c0008738:	e50b3064 	str	r3, [fp, #-100]	; 0xffffff9c
			size--;
c000873c:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c0008740:	e2433001 	sub	r3, r3, #1
c0008744:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
c0008748:	ea000012 	b	c0008798 <number+0x134>
		} else if (type & PLUS) {
c000874c:	e59b3008 	ldr	r3, [fp, #8]
c0008750:	e2033004 	and	r3, r3, #4
c0008754:	e3530000 	cmp	r3, #0
c0008758:	0a000005 	beq	c0008774 <number+0x110>
			sign = '+';
c000875c:	e3a0302b 	mov	r3, #43	; 0x2b
c0008760:	e54b3005 	strb	r3, [fp, #-5]
			size--;
c0008764:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c0008768:	e2433001 	sub	r3, r3, #1
c000876c:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
c0008770:	ea000008 	b	c0008798 <number+0x134>
		} else if (type & SPACE) {
c0008774:	e59b3008 	ldr	r3, [fp, #8]
c0008778:	e2033008 	and	r3, r3, #8
c000877c:	e3530000 	cmp	r3, #0
c0008780:	0a000004 	beq	c0008798 <number+0x134>
			sign = ' ';
c0008784:	e3a03020 	mov	r3, #32
c0008788:	e54b3005 	strb	r3, [fp, #-5]
			size--;
c000878c:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c0008790:	e2433001 	sub	r3, r3, #1
c0008794:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
		}
	}
	if (type & SPECIAL) {
c0008798:	e59b3008 	ldr	r3, [fp, #8]
c000879c:	e2033020 	and	r3, r3, #32
c00087a0:	e3530000 	cmp	r3, #0
c00087a4:	0a00000c 	beq	c00087dc <number+0x178>
		if (base == 16)
c00087a8:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c00087ac:	e3530010 	cmp	r3, #16
c00087b0:	1a000003 	bne	c00087c4 <number+0x160>
			size -= 2;
c00087b4:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c00087b8:	e2433002 	sub	r3, r3, #2
c00087bc:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
c00087c0:	ea000005 	b	c00087dc <number+0x178>
		else if (base == 8)
c00087c4:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c00087c8:	e3530008 	cmp	r3, #8
c00087cc:	1a000002 	bne	c00087dc <number+0x178>
			size--;
c00087d0:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c00087d4:	e2433001 	sub	r3, r3, #1
c00087d8:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
	}
	i = 0;
c00087dc:	e3a03000 	mov	r3, #0
c00087e0:	e50b3010 	str	r3, [fp, #-16]
	if (num == 0)
c00087e4:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c00087e8:	e3530000 	cmp	r3, #0
c00087ec:	1a000022 	bne	c000887c <number+0x218>
		tmp[i++]='0';
c00087f0:	e51b3010 	ldr	r3, [fp, #-16]
c00087f4:	e2832001 	add	r2, r3, #1
c00087f8:	e50b2010 	str	r2, [fp, #-16]
c00087fc:	e24b2004 	sub	r2, fp, #4
c0008800:	e0823003 	add	r3, r2, r3
c0008804:	e3a02030 	mov	r2, #48	; 0x30
c0008808:	e5432058 	strb	r2, [r3, #-88]	; 0xffffffa8
c000880c:	ea00001d 	b	c0008888 <number+0x224>
	else while (num != 0)
	if (i > precision)
c0008810:	e51b2010 	ldr	r2, [fp, #-16]
c0008814:	e59b3004 	ldr	r3, [fp, #4]
c0008818:	e1520003 	cmp	r2, r3
c000881c:	da000016 	ble	c000887c <number+0x218>
		tmp[i++] = digits[do_div(num,base)];
c0008820:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c0008824:	e51b1068 	ldr	r1, [fp, #-104]	; 0xffffff98
c0008828:	e1a00003 	mov	r0, r3
c000882c:	ebfffe79 	bl	c0008218 <__umodsi3>
c0008830:	e1a03000 	mov	r3, r0
c0008834:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
c0008838:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c000883c:	e51b1068 	ldr	r1, [fp, #-104]	; 0xffffff98
c0008840:	e1a00003 	mov	r0, r3
c0008844:	ebfffe9f 	bl	c00082c8 <__udivsi3>
c0008848:	e1a03000 	mov	r3, r0
c000884c:	e50b3064 	str	r3, [fp, #-100]	; 0xffffff9c
c0008850:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
c0008854:	e1a02003 	mov	r2, r3
c0008858:	e51b300c 	ldr	r3, [fp, #-12]
c000885c:	e0832002 	add	r2, r3, r2
c0008860:	e51b3010 	ldr	r3, [fp, #-16]
c0008864:	e2831001 	add	r1, r3, #1
c0008868:	e50b1010 	str	r1, [fp, #-16]
c000886c:	e5d22000 	ldrb	r2, [r2]
c0008870:	e24b1004 	sub	r1, fp, #4
c0008874:	e0813003 	add	r3, r1, r3
c0008878:	e5432058 	strb	r2, [r3, #-88]	; 0xffffffa8
	else while (num != 0)
c000887c:	e51b3064 	ldr	r3, [fp, #-100]	; 0xffffff9c
c0008880:	e3530000 	cmp	r3, #0
c0008884:	1affffe1 	bne	c0008810 <number+0x1ac>
	precision = i;
c0008888:	e51b3010 	ldr	r3, [fp, #-16]
c000888c:	e58b3004 	str	r3, [fp, #4]
	size -= precision;
c0008890:	e51b206c 	ldr	r2, [fp, #-108]	; 0xffffff94
c0008894:	e59b3004 	ldr	r3, [fp, #4]
c0008898:	e0423003 	sub	r3, r2, r3
c000889c:	e50b306c 	str	r3, [fp, #-108]	; 0xffffff94
	if (!(type&(ZEROPAD+LEFT)))
c00088a0:	e59b3008 	ldr	r3, [fp, #8]
c00088a4:	e2033011 	and	r3, r3, #17
c00088a8:	e3530000 	cmp	r3, #0
c00088ac:	1a00000a 	bne	c00088dc <number+0x278>
		while(size-->0)
c00088b0:	ea000004 	b	c00088c8 <number+0x264>
			*str++ = ' ';
c00088b4:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c00088b8:	e2832001 	add	r2, r3, #1
c00088bc:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c00088c0:	e3a02020 	mov	r2, #32
c00088c4:	e5c32000 	strb	r2, [r3]
		while(size-->0)
c00088c8:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c00088cc:	e2432001 	sub	r2, r3, #1
c00088d0:	e50b206c 	str	r2, [fp, #-108]	; 0xffffff94
c00088d4:	e3530000 	cmp	r3, #0
c00088d8:	cafffff5 	bgt	c00088b4 <number+0x250>
	if (sign)
c00088dc:	e55b3005 	ldrb	r3, [fp, #-5]
c00088e0:	e3530000 	cmp	r3, #0
c00088e4:	0a000004 	beq	c00088fc <number+0x298>
		*str++ = sign;
c00088e8:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c00088ec:	e2832001 	add	r2, r3, #1
c00088f0:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c00088f4:	e55b2005 	ldrb	r2, [fp, #-5]
c00088f8:	e5c32000 	strb	r2, [r3]
	if (type & SPECIAL) {
c00088fc:	e59b3008 	ldr	r3, [fp, #8]
c0008900:	e2033020 	and	r3, r3, #32
c0008904:	e3530000 	cmp	r3, #0
c0008908:	0a000016 	beq	c0008968 <number+0x304>
		if (base==8)
c000890c:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c0008910:	e3530008 	cmp	r3, #8
c0008914:	1a000005 	bne	c0008930 <number+0x2cc>
			*str++ = '0';
c0008918:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c000891c:	e2832001 	add	r2, r3, #1
c0008920:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c0008924:	e3a02030 	mov	r2, #48	; 0x30
c0008928:	e5c32000 	strb	r2, [r3]
c000892c:	ea00000d 	b	c0008968 <number+0x304>
		else if (base==16) {
c0008930:	e51b3068 	ldr	r3, [fp, #-104]	; 0xffffff98
c0008934:	e3530010 	cmp	r3, #16
c0008938:	1a00000a 	bne	c0008968 <number+0x304>
			*str++ = '0';
c000893c:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c0008940:	e2832001 	add	r2, r3, #1
c0008944:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c0008948:	e3a02030 	mov	r2, #48	; 0x30
c000894c:	e5c32000 	strb	r2, [r3]
			*str++ = digits[33];
c0008950:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c0008954:	e2832001 	add	r2, r3, #1
c0008958:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c000895c:	e51b200c 	ldr	r2, [fp, #-12]
c0008960:	e5d22021 	ldrb	r2, [r2, #33]	; 0x21
c0008964:	e5c32000 	strb	r2, [r3]
		}
	}
	if (!(type & LEFT))
c0008968:	e59b3008 	ldr	r3, [fp, #8]
c000896c:	e2033010 	and	r3, r3, #16
c0008970:	e3530000 	cmp	r3, #0
c0008974:	1a000010 	bne	c00089bc <number+0x358>
		while (size-- > 0)
c0008978:	ea000004 	b	c0008990 <number+0x32c>
			*str++ = c;
c000897c:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c0008980:	e2832001 	add	r2, r3, #1
c0008984:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c0008988:	e55b2011 	ldrb	r2, [fp, #-17]	; 0xffffffef
c000898c:	e5c32000 	strb	r2, [r3]
		while (size-- > 0)
c0008990:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c0008994:	e2432001 	sub	r2, r3, #1
c0008998:	e50b206c 	str	r2, [fp, #-108]	; 0xffffff94
c000899c:	e3530000 	cmp	r3, #0
c00089a0:	cafffff5 	bgt	c000897c <number+0x318>
	while (i < precision--)
c00089a4:	ea000004 	b	c00089bc <number+0x358>
		*str++ = '0';
c00089a8:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c00089ac:	e2832001 	add	r2, r3, #1
c00089b0:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c00089b4:	e3a02030 	mov	r2, #48	; 0x30
c00089b8:	e5c32000 	strb	r2, [r3]
	while (i < precision--)
c00089bc:	e59b3004 	ldr	r3, [fp, #4]
c00089c0:	e2432001 	sub	r2, r3, #1
c00089c4:	e58b2004 	str	r2, [fp, #4]
c00089c8:	e51b2010 	ldr	r2, [fp, #-16]
c00089cc:	e1520003 	cmp	r2, r3
c00089d0:	bafffff4 	blt	c00089a8 <number+0x344>
	while (i-- > 0)
c00089d4:	ea000007 	b	c00089f8 <number+0x394>
		*str++ = tmp[i];
c00089d8:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c00089dc:	e2832001 	add	r2, r3, #1
c00089e0:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c00089e4:	e24b105c 	sub	r1, fp, #92	; 0x5c
c00089e8:	e51b2010 	ldr	r2, [fp, #-16]
c00089ec:	e0812002 	add	r2, r1, r2
c00089f0:	e5d22000 	ldrb	r2, [r2]
c00089f4:	e5c32000 	strb	r2, [r3]
	while (i-- > 0)
c00089f8:	e51b3010 	ldr	r3, [fp, #-16]
c00089fc:	e2432001 	sub	r2, r3, #1
c0008a00:	e50b2010 	str	r2, [fp, #-16]
c0008a04:	e3530000 	cmp	r3, #0
c0008a08:	cafffff2 	bgt	c00089d8 <number+0x374>
	while (size-- > 0)
c0008a0c:	ea000004 	b	c0008a24 <number+0x3c0>
		*str++ = ' ';
c0008a10:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
c0008a14:	e2832001 	add	r2, r3, #1
c0008a18:	e50b2060 	str	r2, [fp, #-96]	; 0xffffffa0
c0008a1c:	e3a02020 	mov	r2, #32
c0008a20:	e5c32000 	strb	r2, [r3]
	while (size-- > 0)
c0008a24:	e51b306c 	ldr	r3, [fp, #-108]	; 0xffffff94
c0008a28:	e2432001 	sub	r2, r3, #1
c0008a2c:	e50b206c 	str	r2, [fp, #-108]	; 0xffffff94
c0008a30:	e3530000 	cmp	r3, #0
c0008a34:	cafffff5 	bgt	c0008a10 <number+0x3ac>
	return str;
c0008a38:	e51b3060 	ldr	r3, [fp, #-96]	; 0xffffffa0
}
c0008a3c:	e1a00003 	mov	r0, r3
c0008a40:	e24bd004 	sub	sp, fp, #4
c0008a44:	e8bd8800 	pop	{fp, pc}

c0008a48 <strnlen>:

/* Forward decl. needed for IP address printing stuff... */
int sprintf(char * buf, const char *fmt, ...);
size_t strnlen(const char * s, size_t count)
{
c0008a48:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0008a4c:	e28db000 	add	fp, sp, #0
c0008a50:	e24dd00c 	sub	sp, sp, #12
c0008a54:	e50b0008 	str	r0, [fp, #-8]
c0008a58:	e50b100c 	str	r1, [fp, #-12]
	const char *sc;

	for (sc = s; count-- && *sc != '\0'; ++sc)
c0008a5c:	e51b3008 	ldr	r3, [fp, #-8]
c0008a60:	e50b3004 	str	r3, [fp, #-4]
c0008a64:	ea000002 	b	c0008a74 <strnlen+0x2c>
c0008a68:	e51b3004 	ldr	r3, [fp, #-4]
c0008a6c:	e2833001 	add	r3, r3, #1
c0008a70:	e50b3004 	str	r3, [fp, #-4]
c0008a74:	e51b300c 	ldr	r3, [fp, #-12]
c0008a78:	e2432001 	sub	r2, r3, #1
c0008a7c:	e50b200c 	str	r2, [fp, #-12]
c0008a80:	e3530000 	cmp	r3, #0
c0008a84:	0a000003 	beq	c0008a98 <strnlen+0x50>
c0008a88:	e51b3004 	ldr	r3, [fp, #-4]
c0008a8c:	e5d33000 	ldrb	r3, [r3]
c0008a90:	e3530000 	cmp	r3, #0
c0008a94:	1afffff3 	bne	c0008a68 <strnlen+0x20>
		/* nothing */;
	return sc - s;
c0008a98:	e51b2004 	ldr	r2, [fp, #-4]
c0008a9c:	e51b3008 	ldr	r3, [fp, #-8]
c0008aa0:	e0423003 	sub	r3, r2, r3
}
c0008aa4:	e1a00003 	mov	r0, r3
c0008aa8:	e28bd000 	add	sp, fp, #0
c0008aac:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0008ab0:	e12fff1e 	bx	lr

c0008ab4 <vsprintf>:
int vsprintf(char *buf, const char *fmt, va_list args)
{
c0008ab4:	e92d4800 	push	{fp, lr}
c0008ab8:	e28db004 	add	fp, sp, #4
c0008abc:	e24dd044 	sub	sp, sp, #68	; 0x44
c0008ac0:	e50b0038 	str	r0, [fp, #-56]	; 0xffffffc8
c0008ac4:	e50b103c 	str	r1, [fp, #-60]	; 0xffffffc4
c0008ac8:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
	int field_width;	/* width of output field */
	int precision;		/* min. # of digits for integers; max
				   number of chars for from string */
	int qualifier;		/* 'h', 'l', or 'q' for integer fields */

	for (str=buf ; *fmt ; ++fmt) {
c0008acc:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
c0008ad0:	e50b3014 	str	r3, [fp, #-20]	; 0xffffffec
c0008ad4:	ea00021b 	b	c0009348 <vsprintf+0x894>
		if (*fmt != '%') {
c0008ad8:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008adc:	e5d33000 	ldrb	r3, [r3]
c0008ae0:	e3530025 	cmp	r3, #37	; 0x25
c0008ae4:	0a000006 	beq	c0008b04 <vsprintf+0x50>
			*str++ = *fmt;
c0008ae8:	e51b203c 	ldr	r2, [fp, #-60]	; 0xffffffc4
c0008aec:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0008af0:	e2831001 	add	r1, r3, #1
c0008af4:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
c0008af8:	e5d22000 	ldrb	r2, [r2]
c0008afc:	e5c32000 	strb	r2, [r3]
			continue;
c0008b00:	ea00020d 	b	c000933c <vsprintf+0x888>
		}

		/* process flags */
		flags = 0;
c0008b04:	e3a03000 	mov	r3, #0
c0008b08:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
		repeat:
			++fmt;		/* this also skips first '%' */
c0008b0c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008b10:	e2833001 	add	r3, r3, #1
c0008b14:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
			switch (*fmt) {
c0008b18:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008b1c:	e5d33000 	ldrb	r3, [r3]
c0008b20:	e2433020 	sub	r3, r3, #32
c0008b24:	e3530010 	cmp	r3, #16
c0008b28:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
c0008b2c:	ea000024 	b	c0008bc4 <vsprintf+0x110>
c0008b30:	c0008b94 	mulgt	r0, r4, fp
c0008b34:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b38:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b3c:	c0008ba4 	andgt	r8, r0, r4, lsr #23
c0008b40:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b44:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b48:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b4c:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b50:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b54:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b58:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b5c:	c0008b84 	andgt	r8, r0, r4, lsl #23
c0008b60:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b64:	c0008b74 	andgt	r8, r0, r4, ror fp
c0008b68:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b6c:	c0008bc4 	andgt	r8, r0, r4, asr #23
c0008b70:	c0008bb4 			; <UNDEFINED> instruction: 0xc0008bb4
				case '-': flags |= LEFT; goto repeat;
c0008b74:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008b78:	e3833010 	orr	r3, r3, #16
c0008b7c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
c0008b80:	eaffffe1 	b	c0008b0c <vsprintf+0x58>
				case '+': flags |= PLUS; goto repeat;
c0008b84:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008b88:	e3833004 	orr	r3, r3, #4
c0008b8c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
c0008b90:	eaffffdd 	b	c0008b0c <vsprintf+0x58>
				case ' ': flags |= SPACE; goto repeat;
c0008b94:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008b98:	e3833008 	orr	r3, r3, #8
c0008b9c:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
c0008ba0:	eaffffd9 	b	c0008b0c <vsprintf+0x58>
				case '#': flags |= SPECIAL; goto repeat;
c0008ba4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008ba8:	e3833020 	orr	r3, r3, #32
c0008bac:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
c0008bb0:	eaffffd5 	b	c0008b0c <vsprintf+0x58>
				case '0': flags |= ZEROPAD; goto repeat;
c0008bb4:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008bb8:	e3833001 	orr	r3, r3, #1
c0008bbc:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
c0008bc0:	eaffffd1 	b	c0008b0c <vsprintf+0x58>
				}

		/* get field width */
		field_width = -1;
c0008bc4:	e3e03000 	mvn	r3, #0
c0008bc8:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
		if (is_digit(*fmt))
c0008bcc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008bd0:	e5d33000 	ldrb	r3, [r3]
c0008bd4:	e353002f 	cmp	r3, #47	; 0x2f
c0008bd8:	9a000008 	bls	c0008c00 <vsprintf+0x14c>
c0008bdc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008be0:	e5d33000 	ldrb	r3, [r3]
c0008be4:	e3530039 	cmp	r3, #57	; 0x39
c0008be8:	8a000004 	bhi	c0008c00 <vsprintf+0x14c>
			field_width = skip_atoi(&fmt);
c0008bec:	e24b303c 	sub	r3, fp, #60	; 0x3c
c0008bf0:	e1a00003 	mov	r0, r3
c0008bf4:	ebfffe75 	bl	c00085d0 <skip_atoi>
c0008bf8:	e50b0020 	str	r0, [fp, #-32]	; 0xffffffe0
c0008bfc:	ea000014 	b	c0008c54 <vsprintf+0x1a0>
		else if (*fmt == '*') {
c0008c00:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c04:	e5d33000 	ldrb	r3, [r3]
c0008c08:	e353002a 	cmp	r3, #42	; 0x2a
c0008c0c:	1a000010 	bne	c0008c54 <vsprintf+0x1a0>
			++fmt;
c0008c10:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c14:	e2833001 	add	r3, r3, #1
c0008c18:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
			/* it's the next argument */
			field_width = va_arg(args, int);
c0008c1c:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0008c20:	e2832004 	add	r2, r3, #4
c0008c24:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0008c28:	e5933000 	ldr	r3, [r3]
c0008c2c:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
			if (field_width < 0) {
c0008c30:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008c34:	e3530000 	cmp	r3, #0
c0008c38:	aa000005 	bge	c0008c54 <vsprintf+0x1a0>
				field_width = -field_width;
c0008c3c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008c40:	e2633000 	rsb	r3, r3, #0
c0008c44:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
				flags |= LEFT;
c0008c48:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008c4c:	e3833010 	orr	r3, r3, #16
c0008c50:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
			}
		}

		/* get the precision */
		precision = -1;
c0008c54:	e3e03000 	mvn	r3, #0
c0008c58:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
		if (*fmt == '.') {
c0008c5c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c60:	e5d33000 	ldrb	r3, [r3]
c0008c64:	e353002e 	cmp	r3, #46	; 0x2e
c0008c68:	1a000020 	bne	c0008cf0 <vsprintf+0x23c>
			++fmt;
c0008c6c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c70:	e2833001 	add	r3, r3, #1
c0008c74:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
			if (is_digit(*fmt))
c0008c78:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c7c:	e5d33000 	ldrb	r3, [r3]
c0008c80:	e353002f 	cmp	r3, #47	; 0x2f
c0008c84:	9a000008 	bls	c0008cac <vsprintf+0x1f8>
c0008c88:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008c8c:	e5d33000 	ldrb	r3, [r3]
c0008c90:	e3530039 	cmp	r3, #57	; 0x39
c0008c94:	8a000004 	bhi	c0008cac <vsprintf+0x1f8>
				precision = skip_atoi(&fmt);
c0008c98:	e24b303c 	sub	r3, fp, #60	; 0x3c
c0008c9c:	e1a00003 	mov	r0, r3
c0008ca0:	ebfffe4a 	bl	c00085d0 <skip_atoi>
c0008ca4:	e50b0024 	str	r0, [fp, #-36]	; 0xffffffdc
c0008ca8:	ea00000b 	b	c0008cdc <vsprintf+0x228>
			else if (*fmt == '*') {
c0008cac:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008cb0:	e5d33000 	ldrb	r3, [r3]
c0008cb4:	e353002a 	cmp	r3, #42	; 0x2a
c0008cb8:	1a000007 	bne	c0008cdc <vsprintf+0x228>
				++fmt;
c0008cbc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008cc0:	e2833001 	add	r3, r3, #1
c0008cc4:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
				/* it's the next argument */
				precision = va_arg(args, int);
c0008cc8:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0008ccc:	e2832004 	add	r2, r3, #4
c0008cd0:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0008cd4:	e5933000 	ldr	r3, [r3]
c0008cd8:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
			}
			if (precision < 0)
c0008cdc:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
c0008ce0:	e3530000 	cmp	r3, #0
c0008ce4:	aa000001 	bge	c0008cf0 <vsprintf+0x23c>
				precision = 0;
c0008ce8:	e3a03000 	mov	r3, #0
c0008cec:	e50b3024 	str	r3, [fp, #-36]	; 0xffffffdc
		}

		/* get the conversion qualifier */
		qualifier = -1;
c0008cf0:	e3e03000 	mvn	r3, #0
c0008cf4:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
		if (*fmt == 'h' || *fmt == 'l' || *fmt == 'L' ||
c0008cf8:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008cfc:	e5d33000 	ldrb	r3, [r3]
c0008d00:	e3530068 	cmp	r3, #104	; 0x68
c0008d04:	0a000017 	beq	c0008d68 <vsprintf+0x2b4>
c0008d08:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d0c:	e5d33000 	ldrb	r3, [r3]
c0008d10:	e353006c 	cmp	r3, #108	; 0x6c
c0008d14:	0a000013 	beq	c0008d68 <vsprintf+0x2b4>
c0008d18:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d1c:	e5d33000 	ldrb	r3, [r3]
c0008d20:	e353004c 	cmp	r3, #76	; 0x4c
c0008d24:	0a00000f 	beq	c0008d68 <vsprintf+0x2b4>
		    *fmt == 'Z' || *fmt == 'z' || *fmt == 't' ||
c0008d28:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d2c:	e5d33000 	ldrb	r3, [r3]
		if (*fmt == 'h' || *fmt == 'l' || *fmt == 'L' ||
c0008d30:	e353005a 	cmp	r3, #90	; 0x5a
c0008d34:	0a00000b 	beq	c0008d68 <vsprintf+0x2b4>
		    *fmt == 'Z' || *fmt == 'z' || *fmt == 't' ||
c0008d38:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d3c:	e5d33000 	ldrb	r3, [r3]
c0008d40:	e353007a 	cmp	r3, #122	; 0x7a
c0008d44:	0a000007 	beq	c0008d68 <vsprintf+0x2b4>
c0008d48:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d4c:	e5d33000 	ldrb	r3, [r3]
c0008d50:	e3530074 	cmp	r3, #116	; 0x74
c0008d54:	0a000003 	beq	c0008d68 <vsprintf+0x2b4>
		    *fmt == 'q' ) {
c0008d58:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d5c:	e5d33000 	ldrb	r3, [r3]
		    *fmt == 'Z' || *fmt == 'z' || *fmt == 't' ||
c0008d60:	e3530071 	cmp	r3, #113	; 0x71
c0008d64:	1a000012 	bne	c0008db4 <vsprintf+0x300>
			qualifier = *fmt;
c0008d68:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d6c:	e5d33000 	ldrb	r3, [r3]
c0008d70:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
			if (qualifier == 'l' && *(fmt+1) == 'l') {
c0008d74:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0008d78:	e353006c 	cmp	r3, #108	; 0x6c
c0008d7c:	1a000009 	bne	c0008da8 <vsprintf+0x2f4>
c0008d80:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008d84:	e2833001 	add	r3, r3, #1
c0008d88:	e5d33000 	ldrb	r3, [r3]
c0008d8c:	e353006c 	cmp	r3, #108	; 0x6c
c0008d90:	1a000004 	bne	c0008da8 <vsprintf+0x2f4>
				qualifier = 'q';
c0008d94:	e3a03071 	mov	r3, #113	; 0x71
c0008d98:	e50b3028 	str	r3, [fp, #-40]	; 0xffffffd8
				++fmt;
c0008d9c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008da0:	e2833001 	add	r3, r3, #1
c0008da4:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
			}
			++fmt;
c0008da8:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008dac:	e2833001 	add	r3, r3, #1
c0008db0:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
		}

		/* default base */
		base = 10;
c0008db4:	e3a0300a 	mov	r3, #10
c0008db8:	e50b3010 	str	r3, [fp, #-16]

		switch (*fmt) {
c0008dbc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0008dc0:	e5d33000 	ldrb	r3, [r3]
c0008dc4:	e2433025 	sub	r3, r3, #37	; 0x25
c0008dc8:	e3530053 	cmp	r3, #83	; 0x53
c0008dcc:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
c0008dd0:	ea0000fc 	b	c00091c8 <vsprintf+0x714>
c0008dd4:	c000917c 	andgt	r9, r0, ip, ror r1
c0008dd8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ddc:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008de0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008de4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008de8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008dec:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008df0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008df4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008df8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008dfc:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e00:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e04:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e08:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e0c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e10:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e14:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e18:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e1c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e20:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e24:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e28:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e2c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e30:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e34:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e38:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e3c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e40:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e44:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e48:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e4c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e50:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e54:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e58:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e5c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e60:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e64:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e68:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e6c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e70:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e74:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e78:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e7c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e80:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e84:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e88:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e8c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e90:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e94:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e98:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008e9c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ea0:	c00091a0 	andgt	r9, r0, r0, lsr #3
c0008ea4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ea8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008eac:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008eb0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008eb4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008eb8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ebc:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ec0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ec4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ec8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ecc:	c0008f24 	andgt	r8, r0, r4, lsr #30
c0008ed0:	c00091b8 			; <UNDEFINED> instruction: 0xc00091b8
c0008ed4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ed8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008edc:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ee0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ee4:	c00091b8 			; <UNDEFINED> instruction: 0xc00091b8
c0008ee8:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008eec:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ef0:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ef4:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008ef8:	c0009118 	andgt	r9, r0, r8, lsl r1
c0008efc:	c0009194 	mulgt	r0, r4, r1
c0008f00:	c00090bc 	strhgt	r9, [r0], -ip
c0008f04:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008f08:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008f0c:	c0008fbc 			; <UNDEFINED> instruction: 0xc0008fbc
c0008f10:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008f14:	c0009218 	andgt	r9, r0, r8, lsl r2
c0008f18:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008f1c:	c00091c8 	andgt	r9, r0, r8, asr #3
c0008f20:	c00091ac 	andgt	r9, r0, ip, lsr #3
		case 'c':
			if (!(flags & LEFT))
c0008f24:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0008f28:	e2033010 	and	r3, r3, #16
c0008f2c:	e3530000 	cmp	r3, #0
c0008f30:	1a00000b 	bne	c0008f64 <vsprintf+0x4b0>
				while (--field_width > 0)
c0008f34:	ea000004 	b	c0008f4c <vsprintf+0x498>
					*str++ = ' ';
c0008f38:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0008f3c:	e2832001 	add	r2, r3, #1
c0008f40:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0008f44:	e3a02020 	mov	r2, #32
c0008f48:	e5c32000 	strb	r2, [r3]
				while (--field_width > 0)
c0008f4c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008f50:	e2433001 	sub	r3, r3, #1
c0008f54:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
c0008f58:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008f5c:	e3530000 	cmp	r3, #0
c0008f60:	cafffff4 	bgt	c0008f38 <vsprintf+0x484>
			*str++ = (unsigned char) va_arg(args, int);
c0008f64:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0008f68:	e2832004 	add	r2, r3, #4
c0008f6c:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0008f70:	e5931000 	ldr	r1, [r3]
c0008f74:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0008f78:	e2832001 	add	r2, r3, #1
c0008f7c:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0008f80:	e6ef2071 	uxtb	r2, r1
c0008f84:	e5c32000 	strb	r2, [r3]
			while (--field_width > 0)
c0008f88:	ea000004 	b	c0008fa0 <vsprintf+0x4ec>
				*str++ = ' ';
c0008f8c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0008f90:	e2832001 	add	r2, r3, #1
c0008f94:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0008f98:	e3a02020 	mov	r2, #32
c0008f9c:	e5c32000 	strb	r2, [r3]
			while (--field_width > 0)
c0008fa0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008fa4:	e2433001 	sub	r3, r3, #1
c0008fa8:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
c0008fac:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0008fb0:	e3530000 	cmp	r3, #0
c0008fb4:	cafffff4 	bgt	c0008f8c <vsprintf+0x4d8>
			continue;
c0008fb8:	ea0000df 	b	c000933c <vsprintf+0x888>

		case 's':
			s = va_arg(args, char *);
c0008fbc:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0008fc0:	e2832004 	add	r2, r3, #4
c0008fc4:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0008fc8:	e5933000 	ldr	r3, [r3]
c0008fcc:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
			if (!s)
c0008fd0:	e51b3018 	ldr	r3, [fp, #-24]	; 0xffffffe8
c0008fd4:	e3530000 	cmp	r3, #0
c0008fd8:	1a000002 	bne	c0008fe8 <vsprintf+0x534>
				s = "<NULL>";
c0008fdc:	e30a30c8 	movw	r3, #41160	; 0xa0c8
c0008fe0:	e34c3000 	movt	r3, #49152	; 0xc000
c0008fe4:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8

			len = strnlen(s, precision);
c0008fe8:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
c0008fec:	e1a01003 	mov	r1, r3
c0008ff0:	e51b0018 	ldr	r0, [fp, #-24]	; 0xffffffe8
c0008ff4:	ebfffe93 	bl	c0008a48 <strnlen>
c0008ff8:	e1a03000 	mov	r3, r0
c0008ffc:	e50b302c 	str	r3, [fp, #-44]	; 0xffffffd4

			if (!(flags & LEFT))
c0009000:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0009004:	e2033010 	and	r3, r3, #16
c0009008:	e3530000 	cmp	r3, #0
c000900c:	1a00000b 	bne	c0009040 <vsprintf+0x58c>
				while (len < field_width--)
c0009010:	ea000004 	b	c0009028 <vsprintf+0x574>
					*str++ = ' ';
c0009014:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0009018:	e2832001 	add	r2, r3, #1
c000901c:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0009020:	e3a02020 	mov	r2, #32
c0009024:	e5c32000 	strb	r2, [r3]
				while (len < field_width--)
c0009028:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c000902c:	e2432001 	sub	r2, r3, #1
c0009030:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
c0009034:	e51b202c 	ldr	r2, [fp, #-44]	; 0xffffffd4
c0009038:	e1520003 	cmp	r2, r3
c000903c:	bafffff4 	blt	c0009014 <vsprintf+0x560>
			for (i = 0; i < len; ++i)
c0009040:	e3a03000 	mov	r3, #0
c0009044:	e50b300c 	str	r3, [fp, #-12]
c0009048:	ea00000a 	b	c0009078 <vsprintf+0x5c4>
				*str++ = *s++;
c000904c:	e51b2018 	ldr	r2, [fp, #-24]	; 0xffffffe8
c0009050:	e2823001 	add	r3, r2, #1
c0009054:	e50b3018 	str	r3, [fp, #-24]	; 0xffffffe8
c0009058:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c000905c:	e2831001 	add	r1, r3, #1
c0009060:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
c0009064:	e5d22000 	ldrb	r2, [r2]
c0009068:	e5c32000 	strb	r2, [r3]
			for (i = 0; i < len; ++i)
c000906c:	e51b300c 	ldr	r3, [fp, #-12]
c0009070:	e2833001 	add	r3, r3, #1
c0009074:	e50b300c 	str	r3, [fp, #-12]
c0009078:	e51b200c 	ldr	r2, [fp, #-12]
c000907c:	e51b302c 	ldr	r3, [fp, #-44]	; 0xffffffd4
c0009080:	e1520003 	cmp	r2, r3
c0009084:	bafffff0 	blt	c000904c <vsprintf+0x598>
			while (len < field_width--)
c0009088:	ea000004 	b	c00090a0 <vsprintf+0x5ec>
				*str++ = ' ';
c000908c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0009090:	e2832001 	add	r2, r3, #1
c0009094:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0009098:	e3a02020 	mov	r2, #32
c000909c:	e5c32000 	strb	r2, [r3]
			while (len < field_width--)
c00090a0:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c00090a4:	e2432001 	sub	r2, r3, #1
c00090a8:	e50b2020 	str	r2, [fp, #-32]	; 0xffffffe0
c00090ac:	e51b202c 	ldr	r2, [fp, #-44]	; 0xffffffd4
c00090b0:	e1520003 	cmp	r2, r3
c00090b4:	bafffff4 	blt	c000908c <vsprintf+0x5d8>
			continue;
c00090b8:	ea00009f 	b	c000933c <vsprintf+0x888>

		case 'p':
			if (field_width == -1) {
c00090bc:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c00090c0:	e3730001 	cmn	r3, #1
c00090c4:	1a000004 	bne	c00090dc <vsprintf+0x628>
				field_width = 2*sizeof(void *);
c00090c8:	e3a03008 	mov	r3, #8
c00090cc:	e50b3020 	str	r3, [fp, #-32]	; 0xffffffe0
				flags |= ZEROPAD;
c00090d0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00090d4:	e3833001 	orr	r3, r3, #1
c00090d8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
			}
			str = number(str,
				(unsigned long) va_arg(args, void *), 16,
c00090dc:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c00090e0:	e2832004 	add	r2, r3, #4
c00090e4:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c00090e8:	e5933000 	ldr	r3, [r3]
			str = number(str,
c00090ec:	e1a01003 	mov	r1, r3
c00090f0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00090f4:	e58d3004 	str	r3, [sp, #4]
c00090f8:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
c00090fc:	e58d3000 	str	r3, [sp]
c0009100:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0009104:	e3a02010 	mov	r2, #16
c0009108:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
c000910c:	ebfffd54 	bl	c0008664 <number>
c0009110:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
				field_width, precision, flags);
			continue;
c0009114:	ea000088 	b	c000933c <vsprintf+0x888>


		case 'n':
			if (qualifier == 'l') {
c0009118:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c000911c:	e353006c 	cmp	r3, #108	; 0x6c
c0009120:	1a00000a 	bne	c0009150 <vsprintf+0x69c>
				long * ip = va_arg(args, long *);
c0009124:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0009128:	e2832004 	add	r2, r3, #4
c000912c:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0009130:	e5933000 	ldr	r3, [r3]
c0009134:	e50b3034 	str	r3, [fp, #-52]	; 0xffffffcc
				*ip = (str - buf);
c0009138:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
c000913c:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
c0009140:	e0422003 	sub	r2, r2, r3
c0009144:	e51b3034 	ldr	r3, [fp, #-52]	; 0xffffffcc
c0009148:	e5832000 	str	r2, [r3]
			} else {
				int * ip = va_arg(args, int *);
				*ip = (str - buf);
			}
			continue;
c000914c:	ea00007a 	b	c000933c <vsprintf+0x888>
				int * ip = va_arg(args, int *);
c0009150:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0009154:	e2832004 	add	r2, r3, #4
c0009158:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c000915c:	e5933000 	ldr	r3, [r3]
c0009160:	e50b3030 	str	r3, [fp, #-48]	; 0xffffffd0
				*ip = (str - buf);
c0009164:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
c0009168:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
c000916c:	e0422003 	sub	r2, r2, r3
c0009170:	e51b3030 	ldr	r3, [fp, #-48]	; 0xffffffd0
c0009174:	e5832000 	str	r2, [r3]
			continue;
c0009178:	ea00006f 	b	c000933c <vsprintf+0x888>

		case '%':
			*str++ = '%';
c000917c:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c0009180:	e2832001 	add	r2, r3, #1
c0009184:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c0009188:	e3a02025 	mov	r2, #37	; 0x25
c000918c:	e5c32000 	strb	r2, [r3]
			continue;
c0009190:	ea000069 	b	c000933c <vsprintf+0x888>

		/* integer number formats - set up the flags and "break" */
		case 'o':
			base = 8;
c0009194:	e3a03008 	mov	r3, #8
c0009198:	e50b3010 	str	r3, [fp, #-16]
			break;
c000919c:	ea00001e 	b	c000921c <vsprintf+0x768>

		case 'X':
			flags |= LARGE;
c00091a0:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00091a4:	e3833040 	orr	r3, r3, #64	; 0x40
c00091a8:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
		case 'x':
			base = 16;
c00091ac:	e3a03010 	mov	r3, #16
c00091b0:	e50b3010 	str	r3, [fp, #-16]
			break;
c00091b4:	ea000018 	b	c000921c <vsprintf+0x768>

		case 'd':
		case 'i':
			flags |= SIGN;
c00091b8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00091bc:	e3833002 	orr	r3, r3, #2
c00091c0:	e50b301c 	str	r3, [fp, #-28]	; 0xffffffe4
		case 'u':
			break;
c00091c4:	ea000013 	b	c0009218 <vsprintf+0x764>

		default:
			*str++ = '%';
c00091c8:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c00091cc:	e2832001 	add	r2, r3, #1
c00091d0:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
c00091d4:	e3a02025 	mov	r2, #37	; 0x25
c00091d8:	e5c32000 	strb	r2, [r3]
			if (*fmt)
c00091dc:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c00091e0:	e5d33000 	ldrb	r3, [r3]
c00091e4:	e3530000 	cmp	r3, #0
c00091e8:	0a000006 	beq	c0009208 <vsprintf+0x754>
				*str++ = *fmt;
c00091ec:	e51b203c 	ldr	r2, [fp, #-60]	; 0xffffffc4
c00091f0:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c00091f4:	e2831001 	add	r1, r3, #1
c00091f8:	e50b1014 	str	r1, [fp, #-20]	; 0xffffffec
c00091fc:	e5d22000 	ldrb	r2, [r2]
c0009200:	e5c32000 	strb	r2, [r3]
			else
				--fmt;
			continue;
c0009204:	ea00004c 	b	c000933c <vsprintf+0x888>
				--fmt;
c0009208:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c000920c:	e2433001 	sub	r3, r3, #1
c0009210:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
			continue;
c0009214:	ea000048 	b	c000933c <vsprintf+0x888>
			break;
c0009218:	e320f000 	nop	{0}
#ifdef CFG_64BIT_VSPRINTF
		if (qualifier == 'q')  /* "quad" for 64 bit variables */
			num = va_arg(args, unsigned long long);
		else
#endif
		if (qualifier == 'l') {
c000921c:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0009220:	e353006c 	cmp	r3, #108	; 0x6c
c0009224:	1a000005 	bne	c0009240 <vsprintf+0x78c>
			num = va_arg(args, unsigned long);
c0009228:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c000922c:	e2832004 	add	r2, r3, #4
c0009230:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0009234:	e5933000 	ldr	r3, [r3]
c0009238:	e50b3008 	str	r3, [fp, #-8]
c000923c:	ea000034 	b	c0009314 <vsprintf+0x860>
		} else if (qualifier == 'Z' || qualifier == 'z') {
c0009240:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0009244:	e353005a 	cmp	r3, #90	; 0x5a
c0009248:	0a000002 	beq	c0009258 <vsprintf+0x7a4>
c000924c:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0009250:	e353007a 	cmp	r3, #122	; 0x7a
c0009254:	1a000005 	bne	c0009270 <vsprintf+0x7bc>
			num = va_arg(args, size_t);
c0009258:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c000925c:	e2832004 	add	r2, r3, #4
c0009260:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0009264:	e5933000 	ldr	r3, [r3]
c0009268:	e50b3008 	str	r3, [fp, #-8]
c000926c:	ea000028 	b	c0009314 <vsprintf+0x860>
		} else if (qualifier == 't') {
c0009270:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0009274:	e3530074 	cmp	r3, #116	; 0x74
c0009278:	1a000005 	bne	c0009294 <vsprintf+0x7e0>
			num = va_arg(args, long);
c000927c:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0009280:	e2832004 	add	r2, r3, #4
c0009284:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c0009288:	e5933000 	ldr	r3, [r3]
c000928c:	e50b3008 	str	r3, [fp, #-8]
c0009290:	ea00001f 	b	c0009314 <vsprintf+0x860>
		} else if (qualifier == 'h') {
c0009294:	e51b3028 	ldr	r3, [fp, #-40]	; 0xffffffd8
c0009298:	e3530068 	cmp	r3, #104	; 0x68
c000929c:	1a00000d 	bne	c00092d8 <vsprintf+0x824>
			num = (unsigned short) va_arg(args, int);
c00092a0:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c00092a4:	e2832004 	add	r2, r3, #4
c00092a8:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c00092ac:	e5933000 	ldr	r3, [r3]
c00092b0:	e6ff3073 	uxth	r3, r3
c00092b4:	e50b3008 	str	r3, [fp, #-8]
			if (flags & SIGN)
c00092b8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00092bc:	e2033002 	and	r3, r3, #2
c00092c0:	e3530000 	cmp	r3, #0
c00092c4:	0a000012 	beq	c0009314 <vsprintf+0x860>
				num = (short) num;
c00092c8:	e51b3008 	ldr	r3, [fp, #-8]
c00092cc:	e6bf3073 	sxth	r3, r3
c00092d0:	e50b3008 	str	r3, [fp, #-8]
c00092d4:	ea00000e 	b	c0009314 <vsprintf+0x860>
		} else if (flags & SIGN)
c00092d8:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c00092dc:	e2033002 	and	r3, r3, #2
c00092e0:	e3530000 	cmp	r3, #0
c00092e4:	0a000005 	beq	c0009300 <vsprintf+0x84c>
			num = va_arg(args, int);
c00092e8:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c00092ec:	e2832004 	add	r2, r3, #4
c00092f0:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c00092f4:	e5933000 	ldr	r3, [r3]
c00092f8:	e50b3008 	str	r3, [fp, #-8]
c00092fc:	ea000004 	b	c0009314 <vsprintf+0x860>
		else
			num = va_arg(args, unsigned int);
c0009300:	e51b3040 	ldr	r3, [fp, #-64]	; 0xffffffc0
c0009304:	e2832004 	add	r2, r3, #4
c0009308:	e50b2040 	str	r2, [fp, #-64]	; 0xffffffc0
c000930c:	e5933000 	ldr	r3, [r3]
c0009310:	e50b3008 	str	r3, [fp, #-8]
		str = number(str, num, base, field_width, precision, flags);
c0009314:	e51b1008 	ldr	r1, [fp, #-8]
c0009318:	e51b2010 	ldr	r2, [fp, #-16]
c000931c:	e51b301c 	ldr	r3, [fp, #-28]	; 0xffffffe4
c0009320:	e58d3004 	str	r3, [sp, #4]
c0009324:	e51b3024 	ldr	r3, [fp, #-36]	; 0xffffffdc
c0009328:	e58d3000 	str	r3, [sp]
c000932c:	e51b3020 	ldr	r3, [fp, #-32]	; 0xffffffe0
c0009330:	e51b0014 	ldr	r0, [fp, #-20]	; 0xffffffec
c0009334:	ebfffcca 	bl	c0008664 <number>
c0009338:	e50b0014 	str	r0, [fp, #-20]	; 0xffffffec
	for (str=buf ; *fmt ; ++fmt) {
c000933c:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c0009340:	e2833001 	add	r3, r3, #1
c0009344:	e50b303c 	str	r3, [fp, #-60]	; 0xffffffc4
c0009348:	e51b303c 	ldr	r3, [fp, #-60]	; 0xffffffc4
c000934c:	e5d33000 	ldrb	r3, [r3]
c0009350:	e3530000 	cmp	r3, #0
c0009354:	1afffddf 	bne	c0008ad8 <vsprintf+0x24>
	}
	*str = '\0';
c0009358:	e51b3014 	ldr	r3, [fp, #-20]	; 0xffffffec
c000935c:	e3a02000 	mov	r2, #0
c0009360:	e5c32000 	strb	r2, [r3]
	return str-buf;
c0009364:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
c0009368:	e51b3038 	ldr	r3, [fp, #-56]	; 0xffffffc8
c000936c:	e0423003 	sub	r3, r2, r3
}
c0009370:	e1a00003 	mov	r0, r3
c0009374:	e24bd004 	sub	sp, fp, #4
c0009378:	e8bd8800 	pop	{fp, pc}

c000937c <sprintf>:

int sprintf(char * buf, const char *fmt, ...)
{
c000937c:	e92d000e 	push	{r1, r2, r3}
c0009380:	e92d4800 	push	{fp, lr}
c0009384:	e28db004 	add	fp, sp, #4
c0009388:	e24dd00c 	sub	sp, sp, #12
c000938c:	e50b0010 	str	r0, [fp, #-16]
	va_list args;
	int i;

	va_start(args, fmt);
c0009390:	e28b3008 	add	r3, fp, #8
c0009394:	e50b300c 	str	r3, [fp, #-12]
	i=vsprintf(buf,fmt,args);
c0009398:	e51b300c 	ldr	r3, [fp, #-12]
c000939c:	e1a02003 	mov	r2, r3
c00093a0:	e59b1004 	ldr	r1, [fp, #4]
c00093a4:	e51b0010 	ldr	r0, [fp, #-16]
c00093a8:	ebfffdc1 	bl	c0008ab4 <vsprintf>
c00093ac:	e50b0008 	str	r0, [fp, #-8]
	va_end(args);
	return i;
c00093b0:	e51b3008 	ldr	r3, [fp, #-8]
}
c00093b4:	e1a00003 	mov	r0, r3
c00093b8:	e24bd004 	sub	sp, fp, #4
c00093bc:	e8bd4800 	pop	{fp, lr}
c00093c0:	e28dd00c 	add	sp, sp, #12
c00093c4:	e12fff1e 	bx	lr

c00093c8 <printf>:

void printf (const char *fmt, ...)
{
c00093c8:	e92d000f 	push	{r0, r1, r2, r3}
c00093cc:	e92d4800 	push	{fp, lr}
c00093d0:	e28db004 	add	fp, sp, #4
c00093d4:	e24dd068 	sub	sp, sp, #104	; 0x68
	va_list args;
	char printbuffer[100];
	va_start (args, fmt);
c00093d8:	e28b3008 	add	r3, fp, #8
c00093dc:	e50b3008 	str	r3, [fp, #-8]

	/* For this to work, printbuffer must be larger than
	 * anything we ever want to print.
	 */
	vsprintf (printbuffer, fmt, args);
c00093e0:	e51b2008 	ldr	r2, [fp, #-8]
c00093e4:	e24b306c 	sub	r3, fp, #108	; 0x6c
c00093e8:	e59b1004 	ldr	r1, [fp, #4]
c00093ec:	e1a00003 	mov	r0, r3
c00093f0:	ebfffdaf 	bl	c0008ab4 <vsprintf>
	va_end (args);
	__uart_puts (printbuffer);
c00093f4:	e24b306c 	sub	r3, fp, #108	; 0x6c
c00093f8:	e1a00003 	mov	r0, r3
c00093fc:	eb000096 	bl	c000965c <__uart_puts>
}
c0009400:	e320f000 	nop	{0}
c0009404:	e24bd004 	sub	sp, fp, #4
c0009408:	e8bd4800 	pop	{fp, lr}
c000940c:	e28dd010 	add	sp, sp, #16
c0009410:	e12fff1e 	bx	lr

c0009414 <__uart_init>:
#include "stm32mp1xx_gpio.h"
#include "stm32mp1xx_uart.h"
// UART4_TX : PG11  AF6
// UART4_RX : PB2   AF8
void __uart_init()
{
c0009414:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009418:	e28db000 	add	fp, sp, #0
   	// GPIOB2 设置为复用功能
   	GPIOB->MODER &= (~(0x3 << 4));
c000941c:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009420:	e3453000 	movt	r3, #20480	; 0x5000
c0009424:	e5932000 	ldr	r2, [r3]
c0009428:	e3a03a03 	mov	r3, #12288	; 0x3000
c000942c:	e3453000 	movt	r3, #20480	; 0x5000
c0009430:	e3c22030 	bic	r2, r2, #48	; 0x30
c0009434:	e5832000 	str	r2, [r3]
   	GPIOB->MODER |= (0x2 << 4);
c0009438:	e3a03a03 	mov	r3, #12288	; 0x3000
c000943c:	e3453000 	movt	r3, #20480	; 0x5000
c0009440:	e5932000 	ldr	r2, [r3]
c0009444:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009448:	e3453000 	movt	r3, #20480	; 0x5000
c000944c:	e3822020 	orr	r2, r2, #32
c0009450:	e5832000 	str	r2, [r3]
	GPIOB->AFRL &= (~(0xF << 8));
c0009454:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009458:	e3453000 	movt	r3, #20480	; 0x5000
c000945c:	e5932020 	ldr	r2, [r3, #32]
c0009460:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009464:	e3453000 	movt	r3, #20480	; 0x5000
c0009468:	e3c22c0f 	bic	r2, r2, #3840	; 0xf00
c000946c:	e5832020 	str	r2, [r3, #32]
	GPIOB->AFRL |= (0x8 << 8);
c0009470:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009474:	e3453000 	movt	r3, #20480	; 0x5000
c0009478:	e5932020 	ldr	r2, [r3, #32]
c000947c:	e3a03a03 	mov	r3, #12288	; 0x3000
c0009480:	e3453000 	movt	r3, #20480	; 0x5000
c0009484:	e3822b02 	orr	r2, r2, #2048	; 0x800
c0009488:	e5832020 	str	r2, [r3, #32]
	// GPIOG11 设置为复用功能 
	GPIOG->MODER &= (~(0x3 << 22));
c000948c:	e3a03902 	mov	r3, #32768	; 0x8000
c0009490:	e3453000 	movt	r3, #20480	; 0x5000
c0009494:	e5932000 	ldr	r2, [r3]
c0009498:	e3a03902 	mov	r3, #32768	; 0x8000
c000949c:	e3453000 	movt	r3, #20480	; 0x5000
c00094a0:	e3c22503 	bic	r2, r2, #12582912	; 0xc00000
c00094a4:	e5832000 	str	r2, [r3]
	GPIOG->MODER |= (0x2 << 4);
c00094a8:	e3a03902 	mov	r3, #32768	; 0x8000
c00094ac:	e3453000 	movt	r3, #20480	; 0x5000
c00094b0:	e5932000 	ldr	r2, [r3]
c00094b4:	e3a03902 	mov	r3, #32768	; 0x8000
c00094b8:	e3453000 	movt	r3, #20480	; 0x5000
c00094bc:	e3822020 	orr	r2, r2, #32
c00094c0:	e5832000 	str	r2, [r3]
	GPIOG->AFRH &= (~(0xF << 12));
c00094c4:	e3a03902 	mov	r3, #32768	; 0x8000
c00094c8:	e3453000 	movt	r3, #20480	; 0x5000
c00094cc:	e5932024 	ldr	r2, [r3, #36]	; 0x24
c00094d0:	e3a03902 	mov	r3, #32768	; 0x8000
c00094d4:	e3453000 	movt	r3, #20480	; 0x5000
c00094d8:	e3c22a0f 	bic	r2, r2, #61440	; 0xf000
c00094dc:	e5832024 	str	r2, [r3, #36]	; 0x24
	GPIOG->AFRH |= (0x6 << 12);
c00094e0:	e3a03902 	mov	r3, #32768	; 0x8000
c00094e4:	e3453000 	movt	r3, #20480	; 0x5000
c00094e8:	e5932024 	ldr	r2, [r3, #36]	; 0x24
c00094ec:	e3a03902 	mov	r3, #32768	; 0x8000
c00094f0:	e3453000 	movt	r3, #20480	; 0x5000
c00094f4:	e3822a06 	orr	r2, r2, #24576	; 0x6000
c00094f8:	e5832024 	str	r2, [r3, #36]	; 0x24
	// 设置数据长度为8位   USART_CR1  
	USART4->CR1 &= (~(0x1 << 28));
c00094fc:	e3a03000 	mov	r3, #0
c0009500:	e3443001 	movt	r3, #16385	; 0x4001
c0009504:	e5932000 	ldr	r2, [r3]
c0009508:	e3a03000 	mov	r3, #0
c000950c:	e3443001 	movt	r3, #16385	; 0x4001
c0009510:	e3c22201 	bic	r2, r2, #268435456	; 0x10000000
c0009514:	e5832000 	str	r2, [r3]
	USART4->CR1 &= (~(0x1 << 12));
c0009518:	e3a03000 	mov	r3, #0
c000951c:	e3443001 	movt	r3, #16385	; 0x4001
c0009520:	e5932000 	ldr	r2, [r3]
c0009524:	e3a03000 	mov	r3, #0
c0009528:	e3443001 	movt	r3, #16385	; 0x4001
c000952c:	e3c22a01 	bic	r2, r2, #4096	; 0x1000
c0009530:	e5832000 	str	r2, [r3]
	// 采样率为16位 
	USART4->CR1 &= (~(0x1 << 15));
c0009534:	e3a03000 	mov	r3, #0
c0009538:	e3443001 	movt	r3, #16385	; 0x4001
c000953c:	e5932000 	ldr	r2, [r3]
c0009540:	e3a03000 	mov	r3, #0
c0009544:	e3443001 	movt	r3, #16385	; 0x4001
c0009548:	e3c22902 	bic	r2, r2, #32768	; 0x8000
c000954c:	e5832000 	str	r2, [r3]
	// 设置波特率为115200bps 
	USART4->PRESC &= (~(0xF << 0));
c0009550:	e3a03000 	mov	r3, #0
c0009554:	e3443001 	movt	r3, #16385	; 0x4001
c0009558:	e593202c 	ldr	r2, [r3, #44]	; 0x2c
c000955c:	e3a03000 	mov	r3, #0
c0009560:	e3443001 	movt	r3, #16385	; 0x4001
c0009564:	e3c2200f 	bic	r2, r2, #15
c0009568:	e583202c 	str	r2, [r3, #44]	; 0x2c
	USART4->BRR = 0xD0;
c000956c:	e3a03000 	mov	r3, #0
c0009570:	e3443001 	movt	r3, #16385	; 0x4001
c0009574:	e3a020d0 	mov	r2, #208	; 0xd0
c0009578:	e583200c 	str	r2, [r3, #12]
	// 停止位1位
	USART4->CR2 &= (~(0x3 << 12));
c000957c:	e3a03000 	mov	r3, #0
c0009580:	e3443001 	movt	r3, #16385	; 0x4001
c0009584:	e5932004 	ldr	r2, [r3, #4]
c0009588:	e3a03000 	mov	r3, #0
c000958c:	e3443001 	movt	r3, #16385	; 0x4001
c0009590:	e3c22a03 	bic	r2, r2, #12288	; 0x3000
c0009594:	e5832004 	str	r2, [r3, #4]
	// 使能USART串口 
	USART4->CR1 |= (0x1 << 0);
c0009598:	e3a03000 	mov	r3, #0
c000959c:	e3443001 	movt	r3, #16385	; 0x4001
c00095a0:	e5932000 	ldr	r2, [r3]
c00095a4:	e3a03000 	mov	r3, #0
c00095a8:	e3443001 	movt	r3, #16385	; 0x4001
c00095ac:	e3822001 	orr	r2, r2, #1
c00095b0:	e5832000 	str	r2, [r3]
	// 使能USART的发送或者接收功能 
	USART4->CR1 |= (0x1 << 3);
c00095b4:	e3a03000 	mov	r3, #0
c00095b8:	e3443001 	movt	r3, #16385	; 0x4001
c00095bc:	e5932000 	ldr	r2, [r3]
c00095c0:	e3a03000 	mov	r3, #0
c00095c4:	e3443001 	movt	r3, #16385	; 0x4001
c00095c8:	e3822008 	orr	r2, r2, #8
c00095cc:	e5832000 	str	r2, [r3]
	USART4->CR1 |= (0x1 << 2);
c00095d0:	e3a03000 	mov	r3, #0
c00095d4:	e3443001 	movt	r3, #16385	; 0x4001
c00095d8:	e5932000 	ldr	r2, [r3]
c00095dc:	e3a03000 	mov	r3, #0
c00095e0:	e3443001 	movt	r3, #16385	; 0x4001
c00095e4:	e3822004 	orr	r2, r2, #4
c00095e8:	e5832000 	str	r2, [r3]

}
c00095ec:	e320f000 	nop	{0}
c00095f0:	e28bd000 	add	sp, fp, #0
c00095f4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c00095f8:	e12fff1e 	bx	lr

c00095fc <__uart_putc>:

void __uart_putc(const char data)
{
c00095fc:	e92d4800 	push	{fp, lr}
c0009600:	e28db004 	add	fp, sp, #4
c0009604:	e24dd004 	sub	sp, sp, #4
c0009608:	e1a03000 	mov	r3, r0
c000960c:	e54b3008 	strb	r3, [fp, #-8]
	while (!(USART4->ISR & (0x1 << 7)));
c0009610:	e320f000 	nop	{0}
c0009614:	e3a03000 	mov	r3, #0
c0009618:	e3443001 	movt	r3, #16385	; 0x4001
c000961c:	e593301c 	ldr	r3, [r3, #28]
c0009620:	e2033080 	and	r3, r3, #128	; 0x80
c0009624:	e3530000 	cmp	r3, #0
c0009628:	0afffff9 	beq	c0009614 <__uart_putc+0x18>
	USART4->TDR = data;
c000962c:	e3a03000 	mov	r3, #0
c0009630:	e3443001 	movt	r3, #16385	; 0x4001
c0009634:	e55b2008 	ldrb	r2, [fp, #-8]
c0009638:	e5832028 	str	r2, [r3, #40]	; 0x28
	if (data == '\n')
c000963c:	e55b3008 	ldrb	r3, [fp, #-8]
c0009640:	e353000a 	cmp	r3, #10
c0009644:	1a000001 	bne	c0009650 <__uart_putc+0x54>
		__uart_putc('\r');
c0009648:	e3a0000d 	mov	r0, #13
c000964c:	ebffffea 	bl	c00095fc <__uart_putc>
}
c0009650:	e320f000 	nop	{0}
c0009654:	e24bd004 	sub	sp, fp, #4
c0009658:	e8bd8800 	pop	{fp, pc}

c000965c <__uart_puts>:
void __uart_puts(const  char  *pstr)
{
c000965c:	e92d4800 	push	{fp, lr}
c0009660:	e28db004 	add	fp, sp, #4
c0009664:	e24dd004 	sub	sp, sp, #4
c0009668:	e50b0008 	str	r0, [fp, #-8]
	while(*pstr != '\0')
c000966c:	ea000005 	b	c0009688 <__uart_puts+0x2c>
		__uart_putc(*pstr++);
c0009670:	e51b3008 	ldr	r3, [fp, #-8]
c0009674:	e2832001 	add	r2, r3, #1
c0009678:	e50b2008 	str	r2, [fp, #-8]
c000967c:	e5d33000 	ldrb	r3, [r3]
c0009680:	e1a00003 	mov	r0, r3
c0009684:	ebffffdc 	bl	c00095fc <__uart_putc>
	while(*pstr != '\0')
c0009688:	e51b3008 	ldr	r3, [fp, #-8]
c000968c:	e5d33000 	ldrb	r3, [r3]
c0009690:	e3530000 	cmp	r3, #0
c0009694:	1afffff5 	bne	c0009670 <__uart_puts+0x14>
}
c0009698:	e320f000 	nop	{0}
c000969c:	e24bd004 	sub	sp, fp, #4
c00096a0:	e8bd8800 	pop	{fp, pc}

c00096a4 <__uart_getc>:

char __uart_getc(void)
{
c00096a4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c00096a8:	e28db000 	add	fp, sp, #0
c00096ac:	e24dd004 	sub	sp, sp, #4
	char ch;
	while(!(USART4->ISR & (0x1 << 5)));
c00096b0:	e320f000 	nop	{0}
c00096b4:	e3a03000 	mov	r3, #0
c00096b8:	e3443001 	movt	r3, #16385	; 0x4001
c00096bc:	e593301c 	ldr	r3, [r3, #28]
c00096c0:	e2033020 	and	r3, r3, #32
c00096c4:	e3530000 	cmp	r3, #0
c00096c8:	0afffff9 	beq	c00096b4 <__uart_getc+0x10>
	ch = (char)USART4->RDR;
c00096cc:	e3a03000 	mov	r3, #0
c00096d0:	e3443001 	movt	r3, #16385	; 0x4001
c00096d4:	e5933024 	ldr	r3, [r3, #36]	; 0x24
c00096d8:	e54b3001 	strb	r3, [fp, #-1]
	return ch;
c00096dc:	e55b3001 	ldrb	r3, [fp, #-1]
}
c00096e0:	e1a00003 	mov	r0, r3
c00096e4:	e28bd000 	add	sp, fp, #0
c00096e8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c00096ec:	e12fff1e 	bx	lr

c00096f0 <do_irq>:
 * @param    无
 * @return   无
 * @note     irq触发后打印一句话
 */
void do_irq(void)
{
c00096f0:	e92d4800 	push	{fp, lr}
c00096f4:	e28db004 	add	fp, sp, #4
c00096f8:	e24dd004 	sub	sp, sp, #4
    // 1. 获取中断号
    unsigned int interrupt_id = GICC->IAR & 0x3FF;
c00096fc:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009700:	e34a3002 	movt	r3, #40962	; 0xa002
c0009704:	e593300c 	ldr	r3, [r3, #12]
c0009708:	e7e93053 	ubfx	r3, r3, #0, #10
c000970c:	e50b3008 	str	r3, [fp, #-8]

    // 2. 判断中断号
    switch (interrupt_id) {
c0009710:	e51b3008 	ldr	r3, [fp, #-8]
c0009714:	e3530062 	cmp	r3, #98	; 0x62
c0009718:	0a000032 	beq	c00097e8 <do_irq+0xf8>
c000971c:	e3530063 	cmp	r3, #99	; 0x63
c0009720:	0a000002 	beq	c0009730 <do_irq+0x40>
c0009724:	e3530061 	cmp	r3, #97	; 0x61
c0009728:	0a000017 	beq	c000978c <do_irq+0x9c>
        EXTI->FPR1 |= (0x1 << 8); // key3 clear bit
        GICD->ICPENDR[3] |= (0x1 << 2); // 288 / 9 = 32 => 98 / 32 = 3 ... 2
        break;

    default:
        break;
c000972c:	ea000044 	b	c0009844 <do_irq+0x154>
        delay_ms(500);
c0009730:	e3a00f7d 	mov	r0, #500	; 0x1f4
c0009734:	eb000233 	bl	c000a008 <delay_ms>
        printf("key1 onpressed  ##### interrupt_id = %d ############\n",interrupt_id);
c0009738:	e51b1008 	ldr	r1, [fp, #-8]
c000973c:	e30a00d0 	movw	r0, #41168	; 0xa0d0
c0009740:	e34c0000 	movt	r0, #49152	; 0xc000
c0009744:	ebffff1f 	bl	c00093c8 <printf>
        toggle_led(1);
c0009748:	e3a00001 	mov	r0, #1
c000974c:	eb0001fb 	bl	c0009f40 <toggle_led>
        EXTI->FPR1 |= (0x1 << 9); // key1 clear bit
c0009750:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009754:	e3453000 	movt	r3, #20480	; 0x5000
c0009758:	e5932010 	ldr	r2, [r3, #16]
c000975c:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009760:	e3453000 	movt	r3, #20480	; 0x5000
c0009764:	e3822c02 	orr	r2, r2, #512	; 0x200
c0009768:	e5832010 	str	r2, [r3, #16]
        GICD->ICPENDR[3] |= (0x1 << 3); // 288 / 9 = 32 => 99 / 32 = 3 ... 3
c000976c:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009770:	e34a3002 	movt	r3, #40962	; 0xa002
c0009774:	e593228c 	ldr	r2, [r3, #652]	; 0x28c
c0009778:	e3a03a01 	mov	r3, #4096	; 0x1000
c000977c:	e34a3002 	movt	r3, #40962	; 0xa002
c0009780:	e3822008 	orr	r2, r2, #8
c0009784:	e583228c 	str	r2, [r3, #652]	; 0x28c
        break;
c0009788:	ea00002d 	b	c0009844 <do_irq+0x154>
        delay_ms(500);
c000978c:	e3a00f7d 	mov	r0, #500	; 0x1f4
c0009790:	eb00021c 	bl	c000a008 <delay_ms>
        printf("key2 onpressed  ##### interrupt_id = %d ############\n",interrupt_id);
c0009794:	e51b1008 	ldr	r1, [fp, #-8]
c0009798:	e30a0108 	movw	r0, #41224	; 0xa108
c000979c:	e34c0000 	movt	r0, #49152	; 0xc000
c00097a0:	ebffff08 	bl	c00093c8 <printf>
        toggle_led(2);
c00097a4:	e3a00002 	mov	r0, #2
c00097a8:	eb0001e4 	bl	c0009f40 <toggle_led>
        EXTI->FPR1 |= (0x1 << 7); // key2 clear bit
c00097ac:	e3a03a0d 	mov	r3, #53248	; 0xd000
c00097b0:	e3453000 	movt	r3, #20480	; 0x5000
c00097b4:	e5932010 	ldr	r2, [r3, #16]
c00097b8:	e3a03a0d 	mov	r3, #53248	; 0xd000
c00097bc:	e3453000 	movt	r3, #20480	; 0x5000
c00097c0:	e3822080 	orr	r2, r2, #128	; 0x80
c00097c4:	e5832010 	str	r2, [r3, #16]
        GICD->ICPENDR[3] |= (0x1 << 1); // 288 / 9 = 32 => 97 / 32 = 3 ... 1
c00097c8:	e3a03a01 	mov	r3, #4096	; 0x1000
c00097cc:	e34a3002 	movt	r3, #40962	; 0xa002
c00097d0:	e593228c 	ldr	r2, [r3, #652]	; 0x28c
c00097d4:	e3a03a01 	mov	r3, #4096	; 0x1000
c00097d8:	e34a3002 	movt	r3, #40962	; 0xa002
c00097dc:	e3822002 	orr	r2, r2, #2
c00097e0:	e583228c 	str	r2, [r3, #652]	; 0x28c
        break;
c00097e4:	ea000016 	b	c0009844 <do_irq+0x154>
        delay_ms(500);
c00097e8:	e3a00f7d 	mov	r0, #500	; 0x1f4
c00097ec:	eb000205 	bl	c000a008 <delay_ms>
        printf("key3 onpressed  ##### interrupt_id = %d ############\n",interrupt_id);
c00097f0:	e51b1008 	ldr	r1, [fp, #-8]
c00097f4:	e30a0140 	movw	r0, #41280	; 0xa140
c00097f8:	e34c0000 	movt	r0, #49152	; 0xc000
c00097fc:	ebfffef1 	bl	c00093c8 <printf>
        toggle_led(3);
c0009800:	e3a00003 	mov	r0, #3
c0009804:	eb0001cd 	bl	c0009f40 <toggle_led>
        EXTI->FPR1 |= (0x1 << 8); // key3 clear bit
c0009808:	e3a03a0d 	mov	r3, #53248	; 0xd000
c000980c:	e3453000 	movt	r3, #20480	; 0x5000
c0009810:	e5932010 	ldr	r2, [r3, #16]
c0009814:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009818:	e3453000 	movt	r3, #20480	; 0x5000
c000981c:	e3822c01 	orr	r2, r2, #256	; 0x100
c0009820:	e5832010 	str	r2, [r3, #16]
        GICD->ICPENDR[3] |= (0x1 << 2); // 288 / 9 = 32 => 98 / 32 = 3 ... 2
c0009824:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009828:	e34a3002 	movt	r3, #40962	; 0xa002
c000982c:	e593228c 	ldr	r2, [r3, #652]	; 0x28c
c0009830:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009834:	e34a3002 	movt	r3, #40962	; 0xa002
c0009838:	e3822004 	orr	r2, r2, #4
c000983c:	e583228c 	str	r2, [r3, #652]	; 0x28c
        break;
c0009840:	e320f000 	nop	{0}
    }

    // 4. 清除中断号（GICC）
    GICC->EOIR = interrupt_id;
c0009844:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009848:	e34a3002 	movt	r3, #40962	; 0xa002
c000984c:	e51b2008 	ldr	r2, [fp, #-8]
c0009850:	e5832010 	str	r2, [r3, #16]
}
c0009854:	e320f000 	nop	{0}
c0009858:	e24bd004 	sub	sp, fp, #4
c000985c:	e8bd8800 	pop	{fp, pc}

c0009860 <key_init>:
 * @brief    按键初始化
 * @param    无
 * @return   无
 */
void key_init()
{
c0009860:	e92d4800 	push	{fp, lr}
c0009864:	e28db004 	add	fp, sp, #4
    RCC->MP_AHB4ENSETR |= (0x1 << 5); // RCC使能
c0009868:	e3a03205 	mov	r3, #1342177280	; 0x50000000
c000986c:	e5933a28 	ldr	r3, [r3, #2600]	; 0xa28
c0009870:	e3a02205 	mov	r2, #1342177280	; 0x50000000
c0009874:	e3833020 	orr	r3, r3, #32
c0009878:	e5823a28 	str	r3, [r2, #2600]	; 0xa28

    // key1 --> PF9
    GPIOF->MODER &= (~(0x3 << 18)); // 00 输入模式
c000987c:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009880:	e3453000 	movt	r3, #20480	; 0x5000
c0009884:	e5932000 	ldr	r2, [r3]
c0009888:	e3a03a07 	mov	r3, #28672	; 0x7000
c000988c:	e3453000 	movt	r3, #20480	; 0x5000
c0009890:	e3c22703 	bic	r2, r2, #786432	; 0xc0000
c0009894:	e5832000 	str	r2, [r3]
    hal_exti_init(EXTI9_INPUT_EVENT, GPIOF_GROUP, ENABLED);
c0009898:	e3a02001 	mov	r2, #1
c000989c:	e3a01005 	mov	r1, #5
c00098a0:	e3a00009 	mov	r0, #9
c00098a4:	eb000020 	bl	c000992c <hal_exti_init>
    hal_gic_init(99, PRIORITY_EXTI9);
c00098a8:	e3a01003 	mov	r1, #3
c00098ac:	e3a00063 	mov	r0, #99	; 0x63
c00098b0:	eb0000a8 	bl	c0009b58 <hal_gic_init>

    // key2 --> PF7
    GPIOF->MODER &= (~(0x3 << 14)); // 00 输入模式
c00098b4:	e3a03a07 	mov	r3, #28672	; 0x7000
c00098b8:	e3453000 	movt	r3, #20480	; 0x5000
c00098bc:	e5932000 	ldr	r2, [r3]
c00098c0:	e3a03a07 	mov	r3, #28672	; 0x7000
c00098c4:	e3453000 	movt	r3, #20480	; 0x5000
c00098c8:	e3c22903 	bic	r2, r2, #49152	; 0xc000
c00098cc:	e5832000 	str	r2, [r3]
    hal_exti_init(EXTI7_INPUT_EVENT, GPIOF_GROUP, ENABLED);
c00098d0:	e3a02001 	mov	r2, #1
c00098d4:	e3a01005 	mov	r1, #5
c00098d8:	e3a00007 	mov	r0, #7
c00098dc:	eb000012 	bl	c000992c <hal_exti_init>
    hal_gic_init(97, PRIORITY_EXTI7);
c00098e0:	e3a01001 	mov	r1, #1
c00098e4:	e3a00061 	mov	r0, #97	; 0x61
c00098e8:	eb00009a 	bl	c0009b58 <hal_gic_init>

    // key3 --> PF8
    GPIOF->MODER &= (~(0x3 << 16)); // 00 输入模式
c00098ec:	e3a03a07 	mov	r3, #28672	; 0x7000
c00098f0:	e3453000 	movt	r3, #20480	; 0x5000
c00098f4:	e5932000 	ldr	r2, [r3]
c00098f8:	e3a03a07 	mov	r3, #28672	; 0x7000
c00098fc:	e3453000 	movt	r3, #20480	; 0x5000
c0009900:	e3c22803 	bic	r2, r2, #196608	; 0x30000
c0009904:	e5832000 	str	r2, [r3]
    hal_exti_init(EXTI8_INPUT_EVENT, GPIOF_GROUP, ENABLED);
c0009908:	e3a02001 	mov	r2, #1
c000990c:	e3a01005 	mov	r1, #5
c0009910:	e3a00008 	mov	r0, #8
c0009914:	eb000004 	bl	c000992c <hal_exti_init>
    hal_gic_init(98, PRIORITY_EXTI7);
c0009918:	e3a01001 	mov	r1, #1
c000991c:	e3a00062 	mov	r0, #98	; 0x62
c0009920:	eb00008c 	bl	c0009b58 <hal_gic_init>
}
c0009924:	e320f000 	nop	{0}
c0009928:	e8bd8800 	pop	{fp, pc}

c000992c <hal_exti_init>:
 * @param    gpio_group GPIOF组的编号
 * @param    mode    触发方式
 * @return   无
 */
static void hal_exti_init(uint32_t event_id, uint32_t gpio_group, desedge_t desedge_mode)
{
c000992c:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009930:	e28db000 	add	fp, sp, #0
c0009934:	e24dd014 	sub	sp, sp, #20
c0009938:	e50b000c 	str	r0, [fp, #-12]
c000993c:	e50b1010 	str	r1, [fp, #-16]
c0009940:	e50b2014 	str	r2, [fp, #-20]	; 0xffffffec
    // 1. IRC外部中断选择寄存器
    uint32_t nn = event_id / 4 + 1;
c0009944:	e51b300c 	ldr	r3, [fp, #-12]
c0009948:	e1a03123 	lsr	r3, r3, #2
c000994c:	e2833001 	add	r3, r3, #1
c0009950:	e50b3004 	str	r3, [fp, #-4]
    uint32_t offset = event_id % 4 * 8;
c0009954:	e51b300c 	ldr	r3, [fp, #-12]
c0009958:	e2033003 	and	r3, r3, #3
c000995c:	e1a03183 	lsl	r3, r3, #3
c0009960:	e50b3008 	str	r3, [fp, #-8]

    switch (nn) {
c0009964:	e51b3004 	ldr	r3, [fp, #-4]
c0009968:	e2433001 	sub	r3, r3, #1
c000996c:	e3530003 	cmp	r3, #3
c0009970:	979ff103 	ldrls	pc, [pc, r3, lsl #2]
c0009974:	ea00005f 	b	c0009af8 <hal_exti_init+0x1cc>
c0009978:	c0009a9c 	mulgt	r0, ip, sl
c000997c:	c0009a40 	andgt	r9, r0, r0, asr #20
c0009980:	c00099e4 	andgt	r9, r0, r4, ror #19
c0009984:	c0009988 	andgt	r9, r0, r8, lsl #19
    case 4:
        EXTI->EXTICR4 &= (~(0xff << offset));
c0009988:	e3a03a0d 	mov	r3, #53248	; 0xd000
c000998c:	e3453000 	movt	r3, #20480	; 0x5000
c0009990:	e593206c 	ldr	r2, [r3, #108]	; 0x6c
c0009994:	e3a010ff 	mov	r1, #255	; 0xff
c0009998:	e51b3008 	ldr	r3, [fp, #-8]
c000999c:	e1a03311 	lsl	r3, r1, r3
c00099a0:	e1e03003 	mvn	r3, r3
c00099a4:	e1a01003 	mov	r1, r3
c00099a8:	e3a03a0d 	mov	r3, #53248	; 0xd000
c00099ac:	e3453000 	movt	r3, #20480	; 0x5000
c00099b0:	e0022001 	and	r2, r2, r1
c00099b4:	e583206c 	str	r2, [r3, #108]	; 0x6c
        EXTI->EXTICR4 |= (gpio_group << offset);
c00099b8:	e3a03a0d 	mov	r3, #53248	; 0xd000
c00099bc:	e3453000 	movt	r3, #20480	; 0x5000
c00099c0:	e593106c 	ldr	r1, [r3, #108]	; 0x6c
c00099c4:	e51b2010 	ldr	r2, [fp, #-16]
c00099c8:	e51b3008 	ldr	r3, [fp, #-8]
c00099cc:	e1a02312 	lsl	r2, r2, r3
c00099d0:	e3a03a0d 	mov	r3, #53248	; 0xd000
c00099d4:	e3453000 	movt	r3, #20480	; 0x5000
c00099d8:	e1812002 	orr	r2, r1, r2
c00099dc:	e583206c 	str	r2, [r3, #108]	; 0x6c
        break;
c00099e0:	ea000044 	b	c0009af8 <hal_exti_init+0x1cc>
    case 3:
        EXTI->EXTICR3 &= (~(0xff << offset));
c00099e4:	e3a03a0d 	mov	r3, #53248	; 0xd000
c00099e8:	e3453000 	movt	r3, #20480	; 0x5000
c00099ec:	e5932068 	ldr	r2, [r3, #104]	; 0x68
c00099f0:	e3a010ff 	mov	r1, #255	; 0xff
c00099f4:	e51b3008 	ldr	r3, [fp, #-8]
c00099f8:	e1a03311 	lsl	r3, r1, r3
c00099fc:	e1e03003 	mvn	r3, r3
c0009a00:	e1a01003 	mov	r1, r3
c0009a04:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009a08:	e3453000 	movt	r3, #20480	; 0x5000
c0009a0c:	e0022001 	and	r2, r2, r1
c0009a10:	e5832068 	str	r2, [r3, #104]	; 0x68
        EXTI->EXTICR3 |= (gpio_group << offset);
c0009a14:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009a18:	e3453000 	movt	r3, #20480	; 0x5000
c0009a1c:	e5931068 	ldr	r1, [r3, #104]	; 0x68
c0009a20:	e51b2010 	ldr	r2, [fp, #-16]
c0009a24:	e51b3008 	ldr	r3, [fp, #-8]
c0009a28:	e1a02312 	lsl	r2, r2, r3
c0009a2c:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009a30:	e3453000 	movt	r3, #20480	; 0x5000
c0009a34:	e1812002 	orr	r2, r1, r2
c0009a38:	e5832068 	str	r2, [r3, #104]	; 0x68
        break;
c0009a3c:	ea00002d 	b	c0009af8 <hal_exti_init+0x1cc>
    case 2:
        EXTI->EXTICR2 &= (~(0xff << offset));
c0009a40:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009a44:	e3453000 	movt	r3, #20480	; 0x5000
c0009a48:	e5932064 	ldr	r2, [r3, #100]	; 0x64
c0009a4c:	e3a010ff 	mov	r1, #255	; 0xff
c0009a50:	e51b3008 	ldr	r3, [fp, #-8]
c0009a54:	e1a03311 	lsl	r3, r1, r3
c0009a58:	e1e03003 	mvn	r3, r3
c0009a5c:	e1a01003 	mov	r1, r3
c0009a60:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009a64:	e3453000 	movt	r3, #20480	; 0x5000
c0009a68:	e0022001 	and	r2, r2, r1
c0009a6c:	e5832064 	str	r2, [r3, #100]	; 0x64
        EXTI->EXTICR2 |= (gpio_group << offset);
c0009a70:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009a74:	e3453000 	movt	r3, #20480	; 0x5000
c0009a78:	e5931064 	ldr	r1, [r3, #100]	; 0x64
c0009a7c:	e51b2010 	ldr	r2, [fp, #-16]
c0009a80:	e51b3008 	ldr	r3, [fp, #-8]
c0009a84:	e1a02312 	lsl	r2, r2, r3
c0009a88:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009a8c:	e3453000 	movt	r3, #20480	; 0x5000
c0009a90:	e1812002 	orr	r2, r1, r2
c0009a94:	e5832064 	str	r2, [r3, #100]	; 0x64
        break;
c0009a98:	ea000016 	b	c0009af8 <hal_exti_init+0x1cc>
    case 1:
        EXTI->EXTICR1 &= (~(0xff << offset));
c0009a9c:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009aa0:	e3453000 	movt	r3, #20480	; 0x5000
c0009aa4:	e5932060 	ldr	r2, [r3, #96]	; 0x60
c0009aa8:	e3a010ff 	mov	r1, #255	; 0xff
c0009aac:	e51b3008 	ldr	r3, [fp, #-8]
c0009ab0:	e1a03311 	lsl	r3, r1, r3
c0009ab4:	e1e03003 	mvn	r3, r3
c0009ab8:	e1a01003 	mov	r1, r3
c0009abc:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009ac0:	e3453000 	movt	r3, #20480	; 0x5000
c0009ac4:	e0022001 	and	r2, r2, r1
c0009ac8:	e5832060 	str	r2, [r3, #96]	; 0x60
        EXTI->EXTICR1 |= (gpio_group << offset);
c0009acc:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009ad0:	e3453000 	movt	r3, #20480	; 0x5000
c0009ad4:	e5931060 	ldr	r1, [r3, #96]	; 0x60
c0009ad8:	e51b2010 	ldr	r2, [fp, #-16]
c0009adc:	e51b3008 	ldr	r3, [fp, #-8]
c0009ae0:	e1a02312 	lsl	r2, r2, r3
c0009ae4:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009ae8:	e3453000 	movt	r3, #20480	; 0x5000
c0009aec:	e1812002 	orr	r2, r1, r2
c0009af0:	e5832060 	str	r2, [r3, #96]	; 0x60
        break;
c0009af4:	e320f000 	nop	{0}
    }

    //  2. 下降沿选择寄存器
    EXTI->FTSR1 |= (desedge_mode << event_id); // key enabled
c0009af8:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009afc:	e3453000 	movt	r3, #20480	; 0x5000
c0009b00:	e5931004 	ldr	r1, [r3, #4]
c0009b04:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
c0009b08:	e51b300c 	ldr	r3, [fp, #-12]
c0009b0c:	e1a02312 	lsl	r2, r2, r3
c0009b10:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009b14:	e3453000 	movt	r3, #20480	; 0x5000
c0009b18:	e1812002 	orr	r2, r1, r2
c0009b1c:	e5832004 	str	r2, [r3, #4]

    //  3. 中断屏蔽寄存器
    EXTI->C1IMR1 |= (desedge_mode << event_id); // key unmasked
c0009b20:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009b24:	e3453000 	movt	r3, #20480	; 0x5000
c0009b28:	e5931080 	ldr	r1, [r3, #128]	; 0x80
c0009b2c:	e51b2014 	ldr	r2, [fp, #-20]	; 0xffffffec
c0009b30:	e51b300c 	ldr	r3, [fp, #-12]
c0009b34:	e1a02312 	lsl	r2, r2, r3
c0009b38:	e3a03a0d 	mov	r3, #53248	; 0xd000
c0009b3c:	e3453000 	movt	r3, #20480	; 0x5000
c0009b40:	e1812002 	orr	r2, r1, r2
c0009b44:	e5832080 	str	r2, [r3, #128]	; 0x80
}
c0009b48:	e320f000 	nop	{0}
c0009b4c:	e28bd000 	add	sp, fp, #0
c0009b50:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0009b54:	e12fff1e 	bx	lr

c0009b58 <hal_gic_init>:
 * @param    interrupt_id 中断号
 * @param    gicd_pritoity 优先级
 * @return   无
 */
static void hal_gic_init(uint32_t interrupt_id, uint32_t gicd_pritoity)
{
c0009b58:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009b5c:	e28db000 	add	fp, sp, #0
c0009b60:	e24dd010 	sub	sp, sp, #16
c0009b64:	e50b000c 	str	r0, [fp, #-12]
c0009b68:	e50b1010 	str	r1, [fp, #-16]
    /* GICD */
    uint32_t nn;        // 寄存器编号
    uint32_t offset;    // 寄存器的位偏移量

    // 1. 全局控制寄存器
    GICD->CTRL |= (0x1 << 0); // cpu0 enabled
c0009b6c:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009b70:	e34a3002 	movt	r3, #40962	; 0xa002
c0009b74:	e5932000 	ldr	r2, [r3]
c0009b78:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009b7c:	e34a3002 	movt	r3, #40962	; 0xa002
c0009b80:	e3822001 	orr	r2, r2, #1
c0009b84:	e5832000 	str	r2, [r3]

    // 2. 中断使能控制器 9个
    nn = interrupt_id / 32;
c0009b88:	e51b300c 	ldr	r3, [fp, #-12]
c0009b8c:	e1a032a3 	lsr	r3, r3, #5
c0009b90:	e50b3004 	str	r3, [fp, #-4]
    offset = interrupt_id % 32;
c0009b94:	e51b300c 	ldr	r3, [fp, #-12]
c0009b98:	e203301f 	and	r3, r3, #31
c0009b9c:	e50b3008 	str	r3, [fp, #-8]
    GICD->ISENABLER[nn] |= (0x1 << offset); // key1
c0009ba0:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009ba4:	e34a3002 	movt	r3, #40962	; 0xa002
c0009ba8:	e51b2004 	ldr	r2, [fp, #-4]
c0009bac:	e2822040 	add	r2, r2, #64	; 0x40
c0009bb0:	e7932102 	ldr	r2, [r3, r2, lsl #2]
c0009bb4:	e3a01001 	mov	r1, #1
c0009bb8:	e51b3008 	ldr	r3, [fp, #-8]
c0009bbc:	e1a03311 	lsl	r3, r1, r3
c0009bc0:	e1a01003 	mov	r1, r3
c0009bc4:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009bc8:	e34a3002 	movt	r3, #40962	; 0xa002
c0009bcc:	e1821001 	orr	r1, r2, r1
c0009bd0:	e51b2004 	ldr	r2, [fp, #-4]
c0009bd4:	e2822040 	add	r2, r2, #64	; 0x40
c0009bd8:	e7831102 	str	r1, [r3, r2, lsl #2]

    // 3. 优先级寄存器  72个
    nn = interrupt_id / 4;
c0009bdc:	e51b300c 	ldr	r3, [fp, #-12]
c0009be0:	e1a03123 	lsr	r3, r3, #2
c0009be4:	e50b3004 	str	r3, [fp, #-4]
    offset = interrupt_id % 4 * 8 + 3;
c0009be8:	e51b300c 	ldr	r3, [fp, #-12]
c0009bec:	e2033003 	and	r3, r3, #3
c0009bf0:	e1a03183 	lsl	r3, r3, #3
c0009bf4:	e2833003 	add	r3, r3, #3
c0009bf8:	e50b3008 	str	r3, [fp, #-8]
    // GICD->IPRIORITYR[nn] &= (~(0x1f << offset)); // key1 288 / 72 = 4 ==> 99 / 4 = 24 ... 3
    // GICD->IPRIORITYR[nn] &= (~(0x1f << offset)); // key1 288 / 72 = 4 ==> 99 / 4 = 24 ... 3
    GICD->IPRIORITYR[nn] &= (~(0x1f << offset)); 
c0009bfc:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009c00:	e34a3002 	movt	r3, #40962	; 0xa002
c0009c04:	e51b2004 	ldr	r2, [fp, #-4]
c0009c08:	e2822c01 	add	r2, r2, #256	; 0x100
c0009c0c:	e7932102 	ldr	r2, [r3, r2, lsl #2]
c0009c10:	e3a0101f 	mov	r1, #31
c0009c14:	e51b3008 	ldr	r3, [fp, #-8]
c0009c18:	e1a03311 	lsl	r3, r1, r3
c0009c1c:	e1e03003 	mvn	r3, r3
c0009c20:	e1a01003 	mov	r1, r3
c0009c24:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009c28:	e34a3002 	movt	r3, #40962	; 0xa002
c0009c2c:	e0011002 	and	r1, r1, r2
c0009c30:	e51b2004 	ldr	r2, [fp, #-4]
c0009c34:	e2822c01 	add	r2, r2, #256	; 0x100
c0009c38:	e7831102 	str	r1, [r3, r2, lsl #2]
    GICD->IPRIORITYR[nn] |= (gicd_pritoity << offset); // key1 288 / 72 = 4 ==> 99 / 4 = 24 ... 3
c0009c3c:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009c40:	e34a3002 	movt	r3, #40962	; 0xa002
c0009c44:	e51b2004 	ldr	r2, [fp, #-4]
c0009c48:	e2822c01 	add	r2, r2, #256	; 0x100
c0009c4c:	e7931102 	ldr	r1, [r3, r2, lsl #2]
c0009c50:	e51b2010 	ldr	r2, [fp, #-16]
c0009c54:	e51b3008 	ldr	r3, [fp, #-8]
c0009c58:	e1a02312 	lsl	r2, r2, r3
c0009c5c:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009c60:	e34a3002 	movt	r3, #40962	; 0xa002
c0009c64:	e1811002 	orr	r1, r1, r2
c0009c68:	e51b2004 	ldr	r2, [fp, #-4]
c0009c6c:	e2822c01 	add	r2, r2, #256	; 0x100
c0009c70:	e7831102 	str	r1, [r3, r2, lsl #2]

    // 4. 目标分配寄存器 72个
    nn = interrupt_id / 4;
c0009c74:	e51b300c 	ldr	r3, [fp, #-12]
c0009c78:	e1a03123 	lsr	r3, r3, #2
c0009c7c:	e50b3004 	str	r3, [fp, #-4]
    offset = interrupt_id % 4 * 8;
c0009c80:	e51b300c 	ldr	r3, [fp, #-12]
c0009c84:	e2033003 	and	r3, r3, #3
c0009c88:	e1a03183 	lsl	r3, r3, #3
c0009c8c:	e50b3008 	str	r3, [fp, #-8]
    GICD->ITARGETSR[nn] &= (~(0x3 << offset));
c0009c90:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009c94:	e34a3002 	movt	r3, #40962	; 0xa002
c0009c98:	e51b2004 	ldr	r2, [fp, #-4]
c0009c9c:	e2822c02 	add	r2, r2, #512	; 0x200
c0009ca0:	e7932102 	ldr	r2, [r3, r2, lsl #2]
c0009ca4:	e3a01003 	mov	r1, #3
c0009ca8:	e51b3008 	ldr	r3, [fp, #-8]
c0009cac:	e1a03311 	lsl	r3, r1, r3
c0009cb0:	e1e03003 	mvn	r3, r3
c0009cb4:	e1a01003 	mov	r1, r3
c0009cb8:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009cbc:	e34a3002 	movt	r3, #40962	; 0xa002
c0009cc0:	e0011002 	and	r1, r1, r2
c0009cc4:	e51b2004 	ldr	r2, [fp, #-4]
c0009cc8:	e2822c02 	add	r2, r2, #512	; 0x200
c0009ccc:	e7831102 	str	r1, [r3, r2, lsl #2]
    GICD->ITARGETSR[nn] |= (0x1 << offset);
c0009cd0:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009cd4:	e34a3002 	movt	r3, #40962	; 0xa002
c0009cd8:	e51b2004 	ldr	r2, [fp, #-4]
c0009cdc:	e2822c02 	add	r2, r2, #512	; 0x200
c0009ce0:	e7932102 	ldr	r2, [r3, r2, lsl #2]
c0009ce4:	e3a01001 	mov	r1, #1
c0009ce8:	e51b3008 	ldr	r3, [fp, #-8]
c0009cec:	e1a03311 	lsl	r3, r1, r3
c0009cf0:	e1a01003 	mov	r1, r3
c0009cf4:	e3a03a01 	mov	r3, #4096	; 0x1000
c0009cf8:	e34a3002 	movt	r3, #40962	; 0xa002
c0009cfc:	e1821001 	orr	r1, r2, r1
c0009d00:	e51b2004 	ldr	r2, [fp, #-4]
c0009d04:	e2822c02 	add	r2, r2, #512	; 0x200
c0009d08:	e7831102 	str	r1, [r3, r2, lsl #2]

    /* GICC */

    // 1. 全局控制寄存器
    GICC->CTRL |= (0x1 << 0); // cpu0
c0009d0c:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009d10:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d14:	e5932000 	ldr	r2, [r3]
c0009d18:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009d1c:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d20:	e3822001 	orr	r2, r2, #1
c0009d24:	e5832000 	str	r2, [r3]

    // 2. 优先级寄存器 (优先级低于GICD)
    GICC->PMR &= (~(0x1f << 3));
c0009d28:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009d2c:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d30:	e5932004 	ldr	r2, [r3, #4]
c0009d34:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009d38:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d3c:	e3c220f8 	bic	r2, r2, #248	; 0xf8
c0009d40:	e5832004 	str	r2, [r3, #4]
    GICC->PMR |= (0x1f << 3);
c0009d44:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009d48:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d4c:	e5932004 	ldr	r2, [r3, #4]
c0009d50:	e3a03a02 	mov	r3, #8192	; 0x2000
c0009d54:	e34a3002 	movt	r3, #40962	; 0xa002
c0009d58:	e38220f8 	orr	r2, r2, #248	; 0xf8
c0009d5c:	e5832004 	str	r2, [r3, #4]
c0009d60:	e320f000 	nop	{0}
c0009d64:	e28bd000 	add	sp, fp, #0
c0009d68:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0009d6c:	e12fff1e 	bx	lr

c0009d70 <led_init>:
* @brief    led1、led2、led3初始化
* @param    无
* @return   无
*/
void led_init()
{
c0009d70:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009d74:	e28db000 	add	fp, sp, #0
    RCC->MP_AHB4ENSETR |= (0x3 << 4); // GPIOE和GPIOF RCC使能
c0009d78:	e3a03205 	mov	r3, #1342177280	; 0x50000000
c0009d7c:	e5933a28 	ldr	r3, [r3, #2600]	; 0xa28
c0009d80:	e3a02205 	mov	r2, #1342177280	; 0x50000000
c0009d84:	e3833030 	orr	r3, r3, #48	; 0x30
c0009d88:	e5823a28 	str	r3, [r2, #2600]	; 0xa28

    // LED1 --> PE10
    GPIOE->MODER &= (~(0X3 << 20));
c0009d8c:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009d90:	e3453000 	movt	r3, #20480	; 0x5000
c0009d94:	e5932000 	ldr	r2, [r3]
c0009d98:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009d9c:	e3453000 	movt	r3, #20480	; 0x5000
c0009da0:	e3c22603 	bic	r2, r2, #3145728	; 0x300000
c0009da4:	e5832000 	str	r2, [r3]
    GPIOE->MODER |= (0X1 << 20); // 输出模式
c0009da8:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009dac:	e3453000 	movt	r3, #20480	; 0x5000
c0009db0:	e5932000 	ldr	r2, [r3]
c0009db4:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009db8:	e3453000 	movt	r3, #20480	; 0x5000
c0009dbc:	e3822601 	orr	r2, r2, #1048576	; 0x100000
c0009dc0:	e5832000 	str	r2, [r3]
    GPIOE->OTYPER &= (~(0X1 << 10)); // 推挽输出
c0009dc4:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009dc8:	e3453000 	movt	r3, #20480	; 0x5000
c0009dcc:	e5932004 	ldr	r2, [r3, #4]
c0009dd0:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009dd4:	e3453000 	movt	r3, #20480	; 0x5000
c0009dd8:	e3c22b01 	bic	r2, r2, #1024	; 0x400
c0009ddc:	e5832004 	str	r2, [r3, #4]
    GPIOE->OSPEEDR &= (~(0X3 << 20)); // 低速
c0009de0:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009de4:	e3453000 	movt	r3, #20480	; 0x5000
c0009de8:	e5932008 	ldr	r2, [r3, #8]
c0009dec:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009df0:	e3453000 	movt	r3, #20480	; 0x5000
c0009df4:	e3c22603 	bic	r2, r2, #3145728	; 0x300000
c0009df8:	e5832008 	str	r2, [r3, #8]
    GPIOE->PUPDR &= (~(0X3 << 20)); // 不设置上/下拉电阻
c0009dfc:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009e00:	e3453000 	movt	r3, #20480	; 0x5000
c0009e04:	e593200c 	ldr	r2, [r3, #12]
c0009e08:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009e0c:	e3453000 	movt	r3, #20480	; 0x5000
c0009e10:	e3c22603 	bic	r2, r2, #3145728	; 0x300000
c0009e14:	e583200c 	str	r2, [r3, #12]

    // LED2 --> PF10
    GPIOF->MODER &= (~(0X3 << 20));
c0009e18:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009e1c:	e3453000 	movt	r3, #20480	; 0x5000
c0009e20:	e5932000 	ldr	r2, [r3]
c0009e24:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009e28:	e3453000 	movt	r3, #20480	; 0x5000
c0009e2c:	e3c22603 	bic	r2, r2, #3145728	; 0x300000
c0009e30:	e5832000 	str	r2, [r3]
    GPIOF->MODER |= (0X1 << 20); // 输出模式
c0009e34:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009e38:	e3453000 	movt	r3, #20480	; 0x5000
c0009e3c:	e5932000 	ldr	r2, [r3]
c0009e40:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009e44:	e3453000 	movt	r3, #20480	; 0x5000
c0009e48:	e3822601 	orr	r2, r2, #1048576	; 0x100000
c0009e4c:	e5832000 	str	r2, [r3]
    GPIOF->OTYPER &= (~(0X1 << 10)); // 推挽输出
c0009e50:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009e54:	e3453000 	movt	r3, #20480	; 0x5000
c0009e58:	e5932004 	ldr	r2, [r3, #4]
c0009e5c:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009e60:	e3453000 	movt	r3, #20480	; 0x5000
c0009e64:	e3c22b01 	bic	r2, r2, #1024	; 0x400
c0009e68:	e5832004 	str	r2, [r3, #4]
    GPIOF->OSPEEDR &= (~(0X3 << 20)); // 低速
c0009e6c:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009e70:	e3453000 	movt	r3, #20480	; 0x5000
c0009e74:	e5932008 	ldr	r2, [r3, #8]
c0009e78:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009e7c:	e3453000 	movt	r3, #20480	; 0x5000
c0009e80:	e3c22603 	bic	r2, r2, #3145728	; 0x300000
c0009e84:	e5832008 	str	r2, [r3, #8]
    GPIOF->PUPDR &= (~(0X3 << 20)); // 不设置上/下拉电阻
c0009e88:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009e8c:	e3453000 	movt	r3, #20480	; 0x5000
c0009e90:	e593200c 	ldr	r2, [r3, #12]
c0009e94:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009e98:	e3453000 	movt	r3, #20480	; 0x5000
c0009e9c:	e3c22603 	bic	r2, r2, #3145728	; 0x300000
c0009ea0:	e583200c 	str	r2, [r3, #12]

    // LED3 --> PE8
    GPIOE->MODER &= (~(0X3 << 16));
c0009ea4:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009ea8:	e3453000 	movt	r3, #20480	; 0x5000
c0009eac:	e5932000 	ldr	r2, [r3]
c0009eb0:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009eb4:	e3453000 	movt	r3, #20480	; 0x5000
c0009eb8:	e3c22803 	bic	r2, r2, #196608	; 0x30000
c0009ebc:	e5832000 	str	r2, [r3]
    GPIOE->MODER |= (0X1 << 16); // 输出模式
c0009ec0:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009ec4:	e3453000 	movt	r3, #20480	; 0x5000
c0009ec8:	e5932000 	ldr	r2, [r3]
c0009ecc:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009ed0:	e3453000 	movt	r3, #20480	; 0x5000
c0009ed4:	e3822801 	orr	r2, r2, #65536	; 0x10000
c0009ed8:	e5832000 	str	r2, [r3]
    GPIOE->OTYPER &= (~(0X1 << 8)); // 推挽输出
c0009edc:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009ee0:	e3453000 	movt	r3, #20480	; 0x5000
c0009ee4:	e5932004 	ldr	r2, [r3, #4]
c0009ee8:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009eec:	e3453000 	movt	r3, #20480	; 0x5000
c0009ef0:	e3c22c01 	bic	r2, r2, #256	; 0x100
c0009ef4:	e5832004 	str	r2, [r3, #4]
    GPIOE->OSPEEDR &= (~(0X3 << 16)); // 低速
c0009ef8:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009efc:	e3453000 	movt	r3, #20480	; 0x5000
c0009f00:	e5932008 	ldr	r2, [r3, #8]
c0009f04:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009f08:	e3453000 	movt	r3, #20480	; 0x5000
c0009f0c:	e3c22803 	bic	r2, r2, #196608	; 0x30000
c0009f10:	e5832008 	str	r2, [r3, #8]
    GPIOE->PUPDR &= (~(0X3 << 16)); // 不设置上/下拉电阻
c0009f14:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009f18:	e3453000 	movt	r3, #20480	; 0x5000
c0009f1c:	e593200c 	ldr	r2, [r3, #12]
c0009f20:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009f24:	e3453000 	movt	r3, #20480	; 0x5000
c0009f28:	e3c22803 	bic	r2, r2, #196608	; 0x30000
c0009f2c:	e583200c 	str	r2, [r3, #12]
}
c0009f30:	e320f000 	nop	{0}
c0009f34:	e28bd000 	add	sp, fp, #0
c0009f38:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0009f3c:	e12fff1e 	bx	lr

c0009f40 <toggle_led>:
* @brief    切换led状态
* @param    led_id LED灯的id号
* @return   无
*/
void toggle_led(int led_id)
{
c0009f40:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c0009f44:	e28db000 	add	fp, sp, #0
c0009f48:	e24dd004 	sub	sp, sp, #4
c0009f4c:	e50b0004 	str	r0, [fp, #-4]
    switch (led_id) {
c0009f50:	e51b3004 	ldr	r3, [fp, #-4]
c0009f54:	e3530002 	cmp	r3, #2
c0009f58:	0a00000c 	beq	c0009f90 <toggle_led+0x50>
c0009f5c:	e3530003 	cmp	r3, #3
c0009f60:	0a000012 	beq	c0009fb0 <toggle_led+0x70>
c0009f64:	e3530001 	cmp	r3, #1
c0009f68:	0a000000 	beq	c0009f70 <toggle_led+0x30>
        break;
    case 3:
        GPIOE->ODR ^= (0x1 << 8); // LED3 状态取反
        break;
    }
}
c0009f6c:	ea000017 	b	c0009fd0 <toggle_led+0x90>
        GPIOE->ODR ^= (0x1 << 10); // LED1 状态取反
c0009f70:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009f74:	e3453000 	movt	r3, #20480	; 0x5000
c0009f78:	e5932014 	ldr	r2, [r3, #20]
c0009f7c:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009f80:	e3453000 	movt	r3, #20480	; 0x5000
c0009f84:	e2222b01 	eor	r2, r2, #1024	; 0x400
c0009f88:	e5832014 	str	r2, [r3, #20]
        break;
c0009f8c:	ea00000f 	b	c0009fd0 <toggle_led+0x90>
        GPIOF->ODR ^= (0x1 << 10); // LED2 状态取反
c0009f90:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009f94:	e3453000 	movt	r3, #20480	; 0x5000
c0009f98:	e5932014 	ldr	r2, [r3, #20]
c0009f9c:	e3a03a07 	mov	r3, #28672	; 0x7000
c0009fa0:	e3453000 	movt	r3, #20480	; 0x5000
c0009fa4:	e2222b01 	eor	r2, r2, #1024	; 0x400
c0009fa8:	e5832014 	str	r2, [r3, #20]
        break;
c0009fac:	ea000007 	b	c0009fd0 <toggle_led+0x90>
        GPIOE->ODR ^= (0x1 << 8); // LED3 状态取反
c0009fb0:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009fb4:	e3453000 	movt	r3, #20480	; 0x5000
c0009fb8:	e5932014 	ldr	r2, [r3, #20]
c0009fbc:	e3a03a06 	mov	r3, #24576	; 0x6000
c0009fc0:	e3453000 	movt	r3, #20480	; 0x5000
c0009fc4:	e2222c01 	eor	r2, r2, #256	; 0x100
c0009fc8:	e5832014 	str	r2, [r3, #20]
        break;
c0009fcc:	e320f000 	nop	{0}
}
c0009fd0:	e320f000 	nop	{0}
c0009fd4:	e28bd000 	add	sp, fp, #0
c0009fd8:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c0009fdc:	e12fff1e 	bx	lr

c0009fe0 <main>:
* @brief    入口函数
* @param    无
* @return   无
*/
int main()
{
c0009fe0:	e92d4800 	push	{fp, lr}
c0009fe4:	e28db004 	add	fp, sp, #4
    led_init();
c0009fe8:	ebffff60 	bl	c0009d70 <led_init>
    key_init();
c0009fec:	ebfffe1b 	bl	c0009860 <key_init>

    while (1){
        printf("running...\n");
c0009ff0:	e30a0178 	movw	r0, #41336	; 0xa178
c0009ff4:	e34c0000 	movt	r0, #49152	; 0xc000
c0009ff8:	ebfffcf2 	bl	c00093c8 <printf>
        delay_ms(2000);
c0009ffc:	e3a00e7d 	mov	r0, #2000	; 0x7d0
c000a000:	eb000000 	bl	c000a008 <delay_ms>
        printf("running...\n");
c000a004:	eafffff9 	b	c0009ff0 <main+0x10>

c000a008 <delay_ms>:
* @brief    延时函数
* @param    ms  毫秒
* @return   无
*/
void delay_ms(int ms)
{
c000a008:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
c000a00c:	e28db000 	add	fp, sp, #0
c000a010:	e24dd00c 	sub	sp, sp, #12
c000a014:	e50b000c 	str	r0, [fp, #-12]
    int i, j;
    for (i = 0; i < ms; i++)
c000a018:	e3a03000 	mov	r3, #0
c000a01c:	e50b3004 	str	r3, [fp, #-4]
c000a020:	ea00000c 	b	c000a058 <delay_ms+0x50>
        for (j = 0; j < 1800; j++)
c000a024:	e3a03000 	mov	r3, #0
c000a028:	e50b3008 	str	r3, [fp, #-8]
c000a02c:	ea000002 	b	c000a03c <delay_ms+0x34>
c000a030:	e51b3008 	ldr	r3, [fp, #-8]
c000a034:	e2833001 	add	r3, r3, #1
c000a038:	e50b3008 	str	r3, [fp, #-8]
c000a03c:	e51b3008 	ldr	r3, [fp, #-8]
c000a040:	e3002707 	movw	r2, #1799	; 0x707
c000a044:	e1530002 	cmp	r3, r2
c000a048:	dafffff8 	ble	c000a030 <delay_ms+0x28>
    for (i = 0; i < ms; i++)
c000a04c:	e51b3004 	ldr	r3, [fp, #-4]
c000a050:	e2833001 	add	r3, r3, #1
c000a054:	e50b3004 	str	r3, [fp, #-4]
c000a058:	e51b2004 	ldr	r2, [fp, #-4]
c000a05c:	e51b300c 	ldr	r3, [fp, #-12]
c000a060:	e1520003 	cmp	r2, r3
c000a064:	baffffee 	blt	c000a024 <delay_ms+0x1c>
            ;
c000a068:	e320f000 	nop	{0}
c000a06c:	e28bd000 	add	sp, fp, #0
c000a070:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
c000a074:	e12fff1e 	bx	lr

Disassembly of section .rodata:

c000a078 <.LC0>:
c000a078:	33323130 	teqcc	r2, #48, 2
c000a07c:	37363534 			; <UNDEFINED> instruction: 0x37363534
c000a080:	62613938 	rsbvs	r3, r1, #56, 18	; 0xe0000
c000a084:	66656463 	strbtvs	r6, [r5], -r3, ror #8
c000a088:	6a696867 	bvs	c1a6422c <__bss_end__+0x1a597a4>
c000a08c:	6e6d6c6b 	cdpvs	12, 6, cr6, cr13, cr11, {3}
c000a090:	7271706f 	rsbsvc	r7, r1, #111	; 0x6f
c000a094:	76757473 			; <UNDEFINED> instruction: 0x76757473
c000a098:	7a797877 	bvc	c1e6827c <__bss_end__+0x1e5d7f4>
c000a09c:	00000000 	andeq	r0, r0, r0

c000a0a0 <.LC1>:
c000a0a0:	33323130 	teqcc	r2, #48, 2
c000a0a4:	37363534 			; <UNDEFINED> instruction: 0x37363534
c000a0a8:	42413938 	submi	r3, r1, #56, 18	; 0xe0000
c000a0ac:	46454443 	strbmi	r4, [r5], -r3, asr #8
c000a0b0:	4a494847 	bmi	c125c1d4 <__bss_end__+0x125174c>
c000a0b4:	4e4d4c4b 	cdpmi	12, 4, cr4, cr13, cr11, {2}
c000a0b8:	5251504f 	subspl	r5, r1, #79	; 0x4f
c000a0bc:	56555453 			; <UNDEFINED> instruction: 0x56555453
c000a0c0:	5a595857 	bpl	c1660224 <__bss_end__+0x165579c>
c000a0c4:	00000000 	andeq	r0, r0, r0

c000a0c8 <.LC2>:
c000a0c8:	4c554e3c 	mrrcmi	14, 3, r4, r5, cr12
c000a0cc:	00003e4c 	andeq	r3, r0, ip, asr #28

c000a0d0 <.LC0>:
c000a0d0:	3179656b 	cmncc	r9, fp, ror #10
c000a0d4:	706e6f20 	rsbvc	r6, lr, r0, lsr #30
c000a0d8:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
c000a0dc:	20206465 	eorcs	r6, r0, r5, ror #8
c000a0e0:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a0e4:	6e692023 	cdpvs	0, 6, cr2, cr9, cr3, {1}
c000a0e8:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
c000a0ec:	5f747075 	svcpl	0x00747075
c000a0f0:	3d206469 	cfstrscc	mvf6, [r0, #-420]!	; 0xfffffe5c
c000a0f4:	20642520 	rsbcs	r2, r4, r0, lsr #10
c000a0f8:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a0fc:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a100:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a104:	0000000a 	andeq	r0, r0, sl

c000a108 <.LC1>:
c000a108:	3279656b 	rsbscc	r6, r9, #448790528	; 0x1ac00000
c000a10c:	706e6f20 	rsbvc	r6, lr, r0, lsr #30
c000a110:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
c000a114:	20206465 	eorcs	r6, r0, r5, ror #8
c000a118:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a11c:	6e692023 	cdpvs	0, 6, cr2, cr9, cr3, {1}
c000a120:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
c000a124:	5f747075 	svcpl	0x00747075
c000a128:	3d206469 	cfstrscc	mvf6, [r0, #-420]!	; 0xfffffe5c
c000a12c:	20642520 	rsbcs	r2, r4, r0, lsr #10
c000a130:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a134:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a138:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a13c:	0000000a 	andeq	r0, r0, sl

c000a140 <.LC2>:
c000a140:	3379656b 	cmncc	r9, #448790528	; 0x1ac00000
c000a144:	706e6f20 	rsbvc	r6, lr, r0, lsr #30
c000a148:	73736572 	cmnvc	r3, #478150656	; 0x1c800000
c000a14c:	20206465 	eorcs	r6, r0, r5, ror #8
c000a150:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a154:	6e692023 	cdpvs	0, 6, cr2, cr9, cr3, {1}
c000a158:	72726574 	rsbsvc	r6, r2, #116, 10	; 0x1d000000
c000a15c:	5f747075 	svcpl	0x00747075
c000a160:	3d206469 	cfstrscc	mvf6, [r0, #-420]!	; 0xfffffe5c
c000a164:	20642520 	rsbcs	r2, r4, r0, lsr #10
c000a168:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a16c:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a170:	23232323 			; <UNDEFINED> instruction: 0x23232323
c000a174:	0000000a 	andeq	r0, r0, sl

c000a178 <.LC0>:
c000a178:	6e6e7572 	mcrvs	5, 3, r7, cr14, cr2, {3}
c000a17c:	2e676e69 	cdpcs	14, 6, cr6, cr7, cr9, {3}
c000a180:	000a2e2e 	andeq	r2, sl, lr, lsr #28

Disassembly of section .data:

c000a184 <stack>:
	...

c000a984 <_ctype>:
c000a984:	08080808 	stmdaeq	r8, {r3, fp}
c000a988:	08080808 	stmdaeq	r8, {r3, fp}
c000a98c:	28282808 	stmdacs	r8!, {r3, fp, sp}
c000a990:	08082828 	stmdaeq	r8, {r3, r5, fp, sp}
c000a994:	08080808 	stmdaeq	r8, {r3, fp}
c000a998:	08080808 	stmdaeq	r8, {r3, fp}
c000a99c:	08080808 	stmdaeq	r8, {r3, fp}
c000a9a0:	08080808 	stmdaeq	r8, {r3, fp}
c000a9a4:	101010a0 	andsne	r1, r0, r0, lsr #1
c000a9a8:	10101010 	andsne	r1, r0, r0, lsl r0
c000a9ac:	10101010 	andsne	r1, r0, r0, lsl r0
c000a9b0:	10101010 	andsne	r1, r0, r0, lsl r0
c000a9b4:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
c000a9b8:	04040404 	streq	r0, [r4], #-1028	; 0xfffffbfc
c000a9bc:	10100404 	andsne	r0, r0, r4, lsl #8
c000a9c0:	10101010 	andsne	r1, r0, r0, lsl r0
c000a9c4:	41414110 	cmpmi	r1, r0, lsl r1
c000a9c8:	01414141 	cmpeq	r1, r1, asr #2
c000a9cc:	01010101 	tsteq	r1, r1, lsl #2
c000a9d0:	01010101 	tsteq	r1, r1, lsl #2
c000a9d4:	01010101 	tsteq	r1, r1, lsl #2
c000a9d8:	01010101 	tsteq	r1, r1, lsl #2
c000a9dc:	10010101 	andne	r0, r1, r1, lsl #2
c000a9e0:	10101010 	andsne	r1, r0, r0, lsl r0
c000a9e4:	42424210 	submi	r4, r2, #16, 4
c000a9e8:	02424242 	subeq	r4, r2, #536870916	; 0x20000004
c000a9ec:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000a9f0:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000a9f4:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000a9f8:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000a9fc:	10020202 	andne	r0, r2, r2, lsl #4
c000aa00:	08101010 	ldmdaeq	r0, {r4, ip}
	...
c000aa24:	101010a0 	andsne	r1, r0, r0, lsr #1
c000aa28:	10101010 	andsne	r1, r0, r0, lsl r0
c000aa2c:	10101010 	andsne	r1, r0, r0, lsl r0
c000aa30:	10101010 	andsne	r1, r0, r0, lsl r0
c000aa34:	10101010 	andsne	r1, r0, r0, lsl r0
c000aa38:	10101010 	andsne	r1, r0, r0, lsl r0
c000aa3c:	10101010 	andsne	r1, r0, r0, lsl r0
c000aa40:	10101010 	andsne	r1, r0, r0, lsl r0
c000aa44:	01010101 	tsteq	r1, r1, lsl #2
c000aa48:	01010101 	tsteq	r1, r1, lsl #2
c000aa4c:	01010101 	tsteq	r1, r1, lsl #2
c000aa50:	01010101 	tsteq	r1, r1, lsl #2
c000aa54:	01010101 	tsteq	r1, r1, lsl #2
c000aa58:	10010101 	andne	r0, r1, r1, lsl #2
c000aa5c:	01010101 	tsteq	r1, r1, lsl #2
c000aa60:	02010101 	andeq	r0, r1, #1073741824	; 0x40000000
c000aa64:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000aa68:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000aa6c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000aa70:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000aa74:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000aa78:	10020202 	andne	r0, r2, r2, lsl #4
c000aa7c:	02020202 	andeq	r0, r2, #536870912	; 0x20000000
c000aa80:	02020202 	andeq	r0, r2, #536870912	; 0x20000000

Disassembly of section .bss:

c000aa84 <i>:
c000aa84:	00000000 	andeq	r0, r0, r0

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002041 	andeq	r2, r0, r1, asr #32
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000016 	andeq	r0, r0, r6, lsl r0
  10:	412d3705 			; <UNDEFINED> instruction: 0x412d3705
  14:	070a0600 	streq	r0, [sl, -r0, lsl #12]
  18:	09010841 	stmdbeq	r1, {r0, r6, fp}
  1c:	0c030a02 			; <UNDEFINED> instruction: 0x0c030a02
  20:	地址 0x00000020 越界。


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <_start-0xbef372dc>
   4:	694c2820 	stmdbvs	ip, {r5, fp, sp}^
   8:	6f72616e 	svcvs	0x0072616e
   c:	43434720 	movtmi	r4, #14112	; 0x3720
  10:	352e3720 	strcc	r3, [lr, #-1824]!	; 0xfffff8e0
  14:	3130322d 	teqcc	r0, sp, lsr #4
  18:	32312e39 	eorscc	r2, r1, #912	; 0x390
  1c:	2e372029 	cdpcs	0, 3, cr2, cr7, cr9, {1}
  20:	00302e35 	eorseq	r2, r0, r5, lsr lr

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000093 	muleq	r0, r3, r0
   4:	00240002 	eoreq	r0, r4, r2
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	73010000 	movwvc	r0, #4096	; 0x1000
  1c:	74726174 	ldrbtvc	r6, [r2], #-372	; 0xfffffe8c
  20:	74730000 	ldrbtvc	r0, [r3], #-0
  24:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
  28:	00010053 	andeq	r0, r1, r3, asr r0
  2c:	05000000 	streq	r0, [r0, #-0]
  30:	00800002 	addeq	r0, r0, r2
  34:	011b03c0 	tsteq	fp, r0, asr #7
  38:	2f2f2f2f 	svccs	0x002f2f2f
  3c:	032f2f2f 			; <UNDEFINED> instruction: 0x032f2f2f
  40:	2f2ff215 	svccs	0x002ff215
  44:	2f312f2f 	svccs	0x00312f2f
  48:	2f312f2f 	svccs	0x00312f2f
  4c:	2f2f2f2f 	svccs	0x002f2f2f
  50:	2f2f312f 	svccs	0x002f312f
  54:	2f2f2f2f 	svccs	0x002f2f2f
  58:	2f2f312f 	svccs	0x002f312f
  5c:	2f2f2f31 	svccs	0x002f2f31
  60:	332f2f2f 			; <UNDEFINED> instruction: 0x332f2f2f
  64:	2f302f31 	svccs	0x00302f31
  68:	2f2f302f 	svccs	0x002f302f
  6c:	302f2f30 	eorcc	r2, pc, r0, lsr pc	; <UNPREDICTABLE>
  70:	2f302f2f 	svccs	0x00302f2f
  74:	302f2f32 	eorcc	r2, pc, r2, lsr pc	; <UNPREDICTABLE>
  78:	312f2f2f 			; <UNDEFINED> instruction: 0x312f2f2f
  7c:	f6f6f6de 			; <UNDEFINED> instruction: 0xf6f6f6de
  80:	2f2ff7f6 	svccs	0x002ff7f6
  84:	8903a32f 	stmdbhi	r3, {r0, r1, r2, r3, r5, r8, r9, sp, pc}
  88:	c8034a7f 	stmdagt	r3, {r0, r1, r2, r3, r4, r5, r6, r9, fp, lr}
  8c:	032f2e00 			; <UNDEFINED> instruction: 0x032f2e00
  90:	02022e09 	andeq	r2, r2, #9, 28	; 0x90
  94:	6c010100 	stfvss	f0, [r1], {-0}
  98:	02000000 	andeq	r0, r0, #0
  9c:	00002c00 	andeq	r2, r0, r0, lsl #24
  a0:	fb010200 	blx	408aa <_start-0xbffc7756>
  a4:	01000d0e 	tsteq	r0, lr, lsl #26
  a8:	00010101 	andeq	r0, r1, r1, lsl #2
  ac:	00010000 	andeq	r0, r1, r0
  b0:	6f630100 	svcvs	0x00630100
  b4:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
  b8:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
  bc:	755f0000 	ldrbvc	r0, [pc, #-0]	; c4 <_start-0xc0007f3c>
  c0:	73646f6d 	cmnvc	r4, #436	; 0x1b4
  c4:	532e3369 			; <UNDEFINED> instruction: 0x532e3369
  c8:	00000100 	andeq	r0, r0, r0, lsl #2
  cc:	02050000 	andeq	r0, r5, #0
  d0:	c0008218 	andgt	r8, r0, r8, lsl r2
  d4:	2f011203 	svccs	0x00011203
  d8:	342f2f2f 	strtcc	r2, [pc], #-3887	; e0 <_start-0xc0007f20>
  dc:	2f2f2f2f 	svccs	0x002f2f2f
  e0:	2f2f2f32 	svccs	0x002f2f32
  e4:	2f2f332f 	svccs	0x002f332f
  e8:	2f2f2f2f 	svccs	0x002f2f2f
  ec:	2f2f2f2f 	svccs	0x002f2f2f
  f0:	2f2f2f2f 	svccs	0x002f2f2f
  f4:	2f352f2f 	svccs	0x00352f2f
  f8:	2f2f2f2f 	svccs	0x002f2f2f
  fc:	302f2f2f 	eorcc	r2, pc, pc, lsr #30
 100:	02022f30 	andeq	r2, r2, #48, 30	; 0xc0
 104:	65010100 	strvs	r0, [r1, #-256]	; 0xffffff00
 108:	02000000 	andeq	r0, r0, #0
 10c:	00002c00 	andeq	r2, r0, r0, lsl #24
 110:	fb010200 	blx	4091a <_start-0xbffc76e6>
 114:	01000d0e 	tsteq	r0, lr, lsl #26
 118:	00010101 	andeq	r0, r1, r1, lsl #2
 11c:	00010000 	andeq	r0, r1, r0
 120:	6f630100 	svcvs	0x00630100
 124:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
 128:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
 12c:	755f0000 	ldrbvc	r0, [pc, #-0]	; 134 <_start-0xc0007ecc>
 130:	73766964 	cmnvc	r6, #100, 18	; 0x190000
 134:	532e3369 			; <UNDEFINED> instruction: 0x532e3369
 138:	00000100 	andeq	r0, r0, r0, lsl #2
 13c:	02050000 	andeq	r0, r5, #0
 140:	c00082c8 	andgt	r8, r0, r8, asr #5
 144:	2f011103 	svccs	0x00011103
 148:	2f2f2f2f 	svccs	0x002f2f2f
 14c:	2f2f2f34 	svccs	0x002f2f34
 150:	2f2f322f 	svccs	0x002f322f
 154:	2f342f2f 	svccs	0x00342f2f
 158:	2f2f2f2f 	svccs	0x002f2f2f
 15c:	2f2f2f2f 	svccs	0x002f2f2f
 160:	2f2f2f2f 	svccs	0x002f2f2f
 164:	2f302f2f 	svccs	0x00302f2f
 168:	022f3030 	eoreq	r3, pc, #48	; 0x30
 16c:	01010002 	tsteq	r1, r2
 170:	0000022e 	andeq	r0, r0, lr, lsr #4
 174:	00520002 	subseq	r0, r2, r2
 178:	01020000 	mrseq	r0, (UNDEF: 2)
 17c:	000d0efb 	strdeq	r0, [sp], -fp
 180:	01010101 	tsteq	r1, r1, lsl #2
 184:	01000000 	mrseq	r0, (UNDEF: 0)
 188:	2e010000 	cdpcs	0, 0, cr0, cr1, cr0, {0}
 18c:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; d8 <_start-0xc0007f28>
 190:	2f6e6f6d 	svccs	0x006e6f6d
 194:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 198:	00656475 	rsbeq	r6, r5, r5, ror r4
 19c:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
 1a0:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
 1a4:	00006372 	andeq	r6, r0, r2, ror r3
 1a8:	70797463 	rsbsvc	r7, r9, r3, ror #8
 1ac:	00682e65 	rsbeq	r2, r8, r5, ror #28
 1b0:	70000001 	andvc	r0, r0, r1
 1b4:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
 1b8:	00632e66 	rsbeq	r2, r3, r6, ror #28
 1bc:	73000002 	movwvc	r0, #2
 1c0:	72616474 	rsbvc	r6, r1, #116, 8	; 0x74000000
 1c4:	00682e67 	rsbeq	r2, r8, r7, ror #28
 1c8:	00000001 	andeq	r0, r0, r1
 1cc:	5c020500 	cfstr32pl	mvfx0, [r2], {-0}
 1d0:	03c00083 	biceq	r0, r0, #131	; 0x83
 1d4:	9f0100c4 	svcls	0x000100c4
 1d8:	042f67d7 	strteq	r6, [pc], #-2007	; 1e0 <_start-0xc0007e20>
 1dc:	7fbe0302 	svcvc	0x00be0302
 1e0:	834cbb82 	movthi	fp, #52098	; 0xcb82
 1e4:	04020067 	streq	r0, [r2], #-103	; 0xffffff99
 1e8:	06820601 	streq	r0, [r2], r1, lsl #12
 1ec:	684b3d08 	stmdavs	fp, {r3, r8, sl, fp, ip, sp}^
 1f0:	4c674d67 	stclmi	13, cr4, [r7], #-412	; 0xfffffe64
 1f4:	0063bb30 	rsbeq	fp, r3, r0, lsr fp
 1f8:	06010402 	streq	r0, [r1], -r2, lsl #8
 1fc:	02002008 	andeq	r2, r0, #8
 200:	20080204 	andcs	r0, r8, r4, lsl #4
 204:	03040200 	movweq	r0, #16896	; 0x4200
 208:	04020082 	streq	r0, [r2], #-130	; 0xffffff7e
 20c:	21080605 	tstcs	r8, r5, lsl #12
 210:	06040200 	streq	r0, [r4], -r0, lsl #4
 214:	0200d606 	andeq	sp, r0, #6291456	; 0x600000
 218:	65060904 	strvs	r0, [r6, #-2308]	; 0xfffff6fc
 21c:	2f6767a3 	svccs	0x006767a3
 220:	0883bb69 	stmeq	r3, {r0, r3, r5, r6, r8, r9, fp, ip, sp, pc}
 224:	24039f21 	strcs	r9, [r3], #-3873	; 0xfffff0df
 228:	2f4c8366 	svccs	0x004c8366
 22c:	0200c708 	andeq	ip, r0, #8, 14	; 0x200000
 230:	9e060104 	adflss	f0, f6, f4
 234:	032fa006 			; <UNDEFINED> instruction: 0x032fa006
 238:	69d88220 	ldmibvs	r8, {r5, r9, pc}^
 23c:	67836783 	strvs	r6, [r3, r3, lsl #15]
 240:	01040200 	mrseq	r0, R12_usr
 244:	67066606 	strvs	r6, [r6, -r6, lsl #12]
 248:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
 24c:	00820601 	addeq	r0, r2, r1, lsl #12
 250:	4a020402 	bmi	81260 <_start-0xbff86da0>
 254:	04040200 	streq	r0, [r4], #-512	; 0xfffffe00
 258:	0402002e 	streq	r0, [r2], #-46	; 0xffffffd2
 25c:	002f0604 	eoreq	r0, pc, r4, lsl #12
 260:	4b040402 	blmi	101270 <_start-0xbff06d90>
 264:	674b6783 	strbvs	r6, [fp, -r3, lsl #15]
 268:	834b8383 	movthi	r8, #45955	; 0xb383
 26c:	83694b83 	cmnhi	r9, #134144	; 0x20c00
 270:	68678367 	stmdavs	r7!, {r0, r1, r2, r5, r6, r8, r9, pc}^
 274:	83f4674b 	mvnshi	r6, #19660800	; 0x12c0000
 278:	69102e02 	ldmdbvs	r0, {r1, r9, sl, fp, sp}
 27c:	2f83834b 	svccs	0x0083834b
 280:	9f67a09d 	svcls	0x0067a09d
 284:	67bb6783 	ldrvs	r6, [fp, r3, lsl #15]!
 288:	2f83bd9f 	svccs	0x0083bd9f
 28c:	9d2fa09d 	stcls	0, cr10, [pc, #-628]!	; 20 <_start-0xc0007fe0>
 290:	a0f12fbc 	ldrhtge	r2, [r1], #252	; 0xfc
 294:	00a09d2f 	adceq	r9, r0, pc, lsr #26
 298:	2f010402 	svccs	0x00010402
 29c:	0200a16b 	andeq	sl, r0, #-1073741798	; 0xc000001a
 2a0:	66060404 	strvs	r0, [r6], -r4, lsl #8
 2a4:	01040200 	mrseq	r0, R12_usr
 2a8:	04020066 	streq	r0, [r2], #-102	; 0xffffff9a
 2ac:	84069e03 	strhi	r9, [r6], #-3587	; 0xfffff1fd
 2b0:	12038467 	andne	r8, r3, #1728053248	; 0x67000000
 2b4:	bb8367ba 	bllt	fe0da1a4 <__bss_end__+0x3e0cf71c>
 2b8:	02674c32 	rsbeq	r4, r7, #12800	; 0x3200
 2bc:	8383132e 	orrhi	r1, r3, #-1207959552	; 0xb8000000
 2c0:	4b868383 	blmi	fe1a10d4 <__bss_end__+0x3e19664c>
 2c4:	01040200 	mrseq	r0, R12_usr
 2c8:	83068206 	movwhi	r8, #25094	; 0x6206
 2cc:	9f68839f 	svcls	0x0068839f
 2d0:	4b6b6767 	blmi	1ada074 <_start-0xbe52df8c>
 2d4:	02006783 	andeq	r6, r0, #34340864	; 0x20c0000
 2d8:	82060104 	andhi	r0, r6, #4, 2
 2dc:	839f8306 	orrshi	r8, pc, #402653184	; 0x18000000
 2e0:	4e67a068 	cdpmi	0, 6, cr10, cr7, cr8, {3}
 2e4:	0402004b 	streq	r0, [r2], #-75	; 0xffffffb5
 2e8:	00820601 	addeq	r0, r2, r1, lsl #12
 2ec:	82020402 	andhi	r0, r2, #33554432	; 0x2000000
 2f0:	03040200 	movweq	r0, #16896	; 0x4200
 2f4:	02008306 	andeq	r8, r0, #402653184	; 0x18000000
 2f8:	4b490304 	blmi	1240f10 <_start-0xbedc70f0>
 2fc:	01040200 	mrseq	r0, R12_usr
 300:	02008206 	andeq	r8, r0, #1610612736	; 0x60000000
 304:	83060204 	movwhi	r0, #25092	; 0x6204
 308:	02040200 	andeq	r0, r4, #0, 4
 30c:	00674c49 	rsbeq	r4, r7, r9, asr #24
 310:	06010402 	streq	r0, [r1], -r2, lsl #8
 314:	4b9f0666 	blmi	fe7c1cb4 <__bss_end__+0x3e7b722c>
 318:	024c6a68 	subeq	r6, ip, #104, 20	; 0x68000
 31c:	831401b4 	tsthi	r4, #180, 2	; 0x2d
 320:	08bc9d2f 	ldmeq	ip!, {r0, r1, r2, r3, r5, r8, sl, fp, ip, pc}
 324:	bc9d2f21 	ldclt	15, cr2, [sp], {33}	; 0x21
 328:	68679f31 	stmdavs	r7!, {r0, r4, r5, r8, r9, sl, fp, ip, pc}^
 32c:	9d2f83bc 	stcls	3, cr8, [pc, #-752]!	; 44 <_start-0xc0007fbc>
 330:	040200bc 	streq	r0, [r2], #-188	; 0xffffff44
 334:	02006703 	andeq	r6, r0, #786432	; 0xc0000
 338:	00f10304 	rscseq	r0, r1, r4, lsl #6
 33c:	06010402 	streq	r0, [r1], -r2, lsl #8
 340:	2f840666 	svccs	0x00840666
 344:	6731bc9d 			; <UNDEFINED> instruction: 0x6731bc9d
 348:	0881694b 	stmeq	r1, {r0, r1, r3, r6, r8, fp, sp, lr}
 34c:	9f67323f 	svcls	0x0067323f
 350:	a09f2ba3 	addsge	r2, pc, r3, lsr #23
 354:	4b329f31 	blmi	ca8020 <_start-0xbf35ffe0>
 358:	324b6831 	subcc	r6, fp, #3211264	; 0x310000
 35c:	839f3168 	orrshi	r3, pc, #104, 2
 360:	03672dbd 	cmneq	r7, #12096	; 0x2f40
 364:	0f032e78 	svceq	0x00032e78
 368:	00bb672e 	adcseq	r6, fp, lr, lsr #14
 36c:	06010402 	streq	r0, [r1], -r2, lsl #8
 370:	bb670666 	bllt	19c1d10 <_start-0xbe6462f0>
 374:	bb67bb67 	bllt	19ef118 <_start-0xbe618ee8>
 378:	bc838383 	stclt	3, cr8, [r3], {131}	; 0x83
 37c:	0402009f 	streq	r0, [r2], #-159	; 0xffffff61
 380:	7ee20302 	cdpvc	3, 14, cr0, cr2, cr2, {0}
 384:	02003c08 	andeq	r3, r0, #8, 24	; 0x800
 388:	66060104 	strvs	r0, [r6], -r4, lsl #2
 38c:	01a00306 	lsleq	r0, r6, #6
 390:	69676782 	stmdbvs	r7!, {r1, r7, r8, r9, sl, sp, lr}^
 394:	2fbc4ba2 	svccs	0x00bc4ba2
 398:	a04f85a1 	subge	r8, pc, r1, lsr #11
 39c:	000a0267 	andeq	r0, sl, r7, ror #4
 3a0:	00a60101 	adceq	r0, r6, r1, lsl #2
 3a4:	00020000 	andeq	r0, r2, r0
 3a8:	00000063 	andeq	r0, r0, r3, rrx
 3ac:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
 3b0:	0101000d 	tsteq	r1, sp
 3b4:	00000101 	andeq	r0, r0, r1, lsl #2
 3b8:	00000100 	andeq	r0, r0, r0, lsl #2
 3bc:	6d6f6301 	stclvs	3, cr6, [pc, #-4]!	; 3c0 <_start-0xc0007c40>
 3c0:	2f6e6f6d 	svccs	0x006e6f6d
 3c4:	00637273 	rsbeq	r7, r3, r3, ror r2
 3c8:	6f632f2e 	svcvs	0x00632f2e
 3cc:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
 3d0:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 3d4:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 3d8:	61750000 	cmnvs	r5, r0
 3dc:	632e7472 			; <UNDEFINED> instruction: 0x632e7472
 3e0:	00000100 	andeq	r0, r0, r0, lsl #2
 3e4:	336d7473 	cmncc	sp, #1929379840	; 0x73000000
 3e8:	31706d32 	cmncc	r0, r2, lsr sp
 3ec:	675f7878 			; <UNDEFINED> instruction: 0x675f7878
 3f0:	2e6f6970 			; <UNDEFINED> instruction: 0x2e6f6970
 3f4:	00020068 	andeq	r0, r2, r8, rrx
 3f8:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 3fc:	706d3233 	rsbvc	r3, sp, r3, lsr r2
 400:	5f787831 	svcpl	0x00787831
 404:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
 408:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 40c:	00000000 	andeq	r0, r0, r0
 410:	94140205 	ldrls	r0, [r4], #-517	; 0xfffffdfb
 414:	4c17c000 	ldcmi	0, cr12, [r7], {-0}
 418:	d8d7d7d7 	ldmle	r7, {r0, r1, r2, r4, r6, r7, r8, r9, sl, ip, lr, pc}^
 41c:	d8d7d7d7 	ldmle	r7, {r0, r1, r2, r4, r6, r7, r8, r9, sl, ip, lr, pc}^
 420:	d7d8d8d7 			; <UNDEFINED> instruction: 0xd7d8d8d7
 424:	d7d8d884 	ldrble	sp, [r8, r4, lsl #17]
 428:	009f85d8 			; <UNDEFINED> instruction: 0x009f85d8
 42c:	06010402 	streq	r0, [r1], -r2, lsl #8
 430:	83bb062e 			; <UNDEFINED> instruction: 0x83bb062e
 434:	83684b67 	cmnhi	r8, #105472	; 0x19c00
 438:	6984b92f 	stmibvs	r4, {r0, r1, r2, r3, r5, r8, fp, ip, sp, pc}
 43c:	04020068 	streq	r0, [r2], #-104	; 0xffffff98
 440:	062e0601 	strteq	r0, [lr], -r1, lsl #12
 444:	022f83bb 	eoreq	r8, pc, #-335544318	; 0xec000002
 448:	01010008 	tsteq	r1, r8
 44c:	0000008d 	andeq	r0, r0, sp, lsl #1
 450:	005d0002 	subseq	r0, sp, r2
 454:	01020000 	mrseq	r0, (UNDEF: 2)
 458:	000d0efb 	strdeq	r0, [sp], -fp
 45c:	01010101 	tsteq	r1, r1, lsl #2
 460:	01000000 	mrseq	r0, (UNDEF: 0)
 464:	73010000 	movwvc	r0, #4096	; 0x1000
 468:	2e006372 	mcrcs	3, 0, r6, cr0, cr2, {3}
 46c:	6d6f632f 	stclvs	3, cr6, [pc, #-188]!	; 3b8 <_start-0xc0007c48>
 470:	2f6e6f6d 	svccs	0x006e6f6d
 474:	6c636e69 	stclvs	14, cr6, [r3], #-420	; 0xfffffe5c
 478:	00656475 	rsbeq	r6, r5, r5, ror r4
 47c:	5f6f6400 	svcpl	0x006f6400
 480:	2e717269 	cdpcs	2, 7, cr7, cr1, cr9, {3}
 484:	00010063 	andeq	r0, r1, r3, rrx
 488:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 48c:	706d3233 	rsbvc	r3, sp, r3, lsr r2
 490:	5f787831 	svcpl	0x00787831
 494:	69747865 	ldmdbvs	r4!, {r0, r2, r5, r6, fp, ip, sp, lr}^
 498:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 49c:	74730000 	ldrbtvc	r0, [r3], #-0
 4a0:	6d32336d 	ldcvs	3, cr3, [r2, #-436]!	; 0xfffffe4c
 4a4:	78783170 	ldmdavc	r8!, {r4, r5, r6, r8, ip, sp}^
 4a8:	6369675f 	cmnvs	r9, #24903680	; 0x17c0000
 4ac:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 4b0:	00000000 	andeq	r0, r0, r0
 4b4:	96f00205 	ldrbtls	r0, [r0], r5, lsl #4
 4b8:	0e03c000 	cdpeq	0, 0, cr12, cr3, cr0, {0}
 4bc:	03a16801 			; <UNDEFINED> instruction: 0x03a16801
 4c0:	6703d61b 	smladvs	r3, fp, r6, sp
 4c4:	4c834b2e 	vstmiami	r3, {d4-d26}
 4c8:	4b30d7d7 	blmi	c3642c <_start-0xbf3d1bd4>
 4cc:	d7d74c83 	ldrble	r4, [r7, r3, lsl #25]
 4d0:	4c834b30 	vstmiami	r3, {d4-d27}
 4d4:	8335d7d7 	teqhi	r5, #56360960	; 0x35c0000
 4d8:	01000602 	tsteq	r0, r2, lsl #12
 4dc:	0000ee01 	andeq	lr, r0, r1, lsl #28
 4e0:	96000200 	strls	r0, [r0], -r0, lsl #4
 4e4:	02000000 	andeq	r0, r0, #0
 4e8:	0d0efb01 	vstreq	d15, [lr, #-4]
 4ec:	01010100 	mrseq	r0, (UNDEF: 17)
 4f0:	00000001 	andeq	r0, r0, r1
 4f4:	01000001 	tsteq	r0, r1
 4f8:	00637273 	rsbeq	r7, r3, r3, ror r2
 4fc:	6f632f2e 	svcvs	0x00632f2e
 500:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
 504:	636e692f 	cmnvs	lr, #770048	; 0xbc000
 508:	6564756c 	strbvs	r7, [r4, #-1388]!	; 0xfffffa94
 50c:	692f2e00 	stmdbvs	pc!, {r9, sl, fp, sp}	; <UNPREDICTABLE>
 510:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 514:	00006564 	andeq	r6, r0, r4, ror #10
 518:	2e79656b 	cdpcs	5, 7, cr6, cr9, cr11, {3}
 51c:	00010063 	andeq	r0, r1, r3, rrx
 520:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 524:	706d3233 	rsbvc	r3, sp, r3, lsr r2
 528:	5f787831 	svcpl	0x00787831
 52c:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
 530:	00020068 	andeq	r0, r2, r8, rrx
 534:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 538:	706d3233 	rsbvc	r3, sp, r3, lsr r2
 53c:	5f787831 	svcpl	0x00787831
 540:	6f697067 	svcvs	0x00697067
 544:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 548:	74730000 	ldrbtvc	r0, [r3], #-0
 54c:	6d32336d 	ldcvs	3, cr3, [r2, #-436]!	; 0xfffffe4c
 550:	78783170 	ldmdavc	r8!, {r4, r5, r6, r8, ip, sp}^
 554:	7478655f 	ldrbtvc	r6, [r8], #-1375	; 0xfffffaa1
 558:	00682e69 	rsbeq	r2, r8, r9, ror #28
 55c:	73000002 	movwvc	r0, #2
 560:	32336d74 	eorscc	r6, r3, #116, 26	; 0x1d00
 564:	7831706d 	ldmdavc	r1!, {r0, r2, r3, r5, r6, ip, sp, lr}
 568:	69675f78 	stmdbvs	r7!, {r3, r4, r5, r6, r8, r9, sl, fp, ip, lr}^
 56c:	00682e63 	rsbeq	r2, r8, r3, ror #28
 570:	6b000002 	blvs	580 <_start-0xc0007a80>
 574:	682e7965 	stmdavs	lr!, {r0, r2, r5, r6, r8, fp, ip, sp, lr}
 578:	00000300 	andeq	r0, r0, r0, lsl #6
 57c:	02050000 	andeq	r0, r5, #0
 580:	c0009860 	andgt	r9, r0, r0, ror #16
 584:	4b011603 	blmi	45d98 <_start-0xbffc2268>
 588:	6983d7a1 	stmibvs	r3, {r0, r5, r7, r8, r9, sl, ip, lr, pc}
 58c:	d76983d7 			; <UNDEFINED> instruction: 0xd76983d7
 590:	0b036783 	bleq	da3a4 <_start-0xbff2dc5c>
 594:	8483bc4a 	strhi	fp, [r3], #3146	; 0xc4a
 598:	75082208 	strvc	r2, [r8, #-520]	; 0xfffffdf8
 59c:	08303d08 	ldmdaeq	r0!, {r3, r8, sl, fp, ip, sp}
 5a0:	303d0875 	eorscc	r0, sp, r5, ror r8
 5a4:	3d087508 	cfstr32cc	mvfx7, [r8, #-32]	; 0xffffffe0
 5a8:	08750830 	ldmdaeq	r5!, {r4, r5, fp}^
 5ac:	3f08323d 	svccc	0x0008323d
 5b0:	09033d08 	stmdbeq	r3, {r3, r8, sl, fp, ip, sp}
 5b4:	67d9a482 	ldrbvs	sl, [r9, r2, lsl #9]
 5b8:	67cb0867 	strbvs	r0, [fp, r7, ror #16]
 5bc:	08e508a1 	stmiaeq	r5!, {r0, r5, r7, fp}^
 5c0:	088367af 	stmeq	r3, {r0, r1, r2, r3, r5, r7, r8, r9, sl, sp, lr}
 5c4:	d9cd08e5 	stmible	sp, {r0, r2, r5, r6, r7, fp}^
 5c8:	0802d7d7 	stmdaeq	r2, {r0, r1, r2, r4, r6, r7, r8, r9, sl, ip, lr, pc}
 5cc:	8e010100 	adfhis	f0, f1, f0
 5d0:	02000000 	andeq	r0, r0, #0
 5d4:	00005a00 	andeq	r5, r0, r0, lsl #20
 5d8:	fb010200 	blx	40de2 <_start-0xbffc721e>
 5dc:	01000d0e 	tsteq	r0, lr, lsl #26
 5e0:	00010101 	andeq	r0, r1, r1, lsl #2
 5e4:	00010000 	andeq	r0, r1, r0
 5e8:	72730100 	rsbsvc	r0, r3, #0, 2
 5ec:	2f2e0063 	svccs	0x002e0063
 5f0:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
 5f4:	692f6e6f 	stmdbvs	pc!, {r0, r1, r2, r3, r5, r6, r9, sl, fp, sp, lr}	; <UNPREDICTABLE>
 5f8:	756c636e 	strbvc	r6, [ip, #-878]!	; 0xfffffc92
 5fc:	00006564 	andeq	r6, r0, r4, ror #10
 600:	2e64656c 	cdpcs	5, 6, cr6, cr4, cr12, {3}
 604:	00010063 	andeq	r0, r1, r3, rrx
 608:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 60c:	706d3233 	rsbvc	r3, sp, r3, lsr r2
 610:	5f787831 	svcpl	0x00787831
 614:	2e636372 	mcrcs	3, 3, r6, cr3, cr2, {3}
 618:	00020068 	andeq	r0, r2, r8, rrx
 61c:	6d747300 	ldclvs	3, cr7, [r4, #-0]
 620:	706d3233 	rsbvc	r3, sp, r3, lsr r2
 624:	5f787831 	svcpl	0x00787831
 628:	6f697067 	svcvs	0x00697067
 62c:	0200682e 	andeq	r6, r0, #3014656	; 0x2e0000
 630:	00000000 	andeq	r0, r0, r0
 634:	9d700205 	lfmls	f0, 2, [r0, #-20]!	; 0xffffffec
 638:	4b1ac000 	blmi	6b0640 <_start-0xbf9579c0>
 63c:	d7d7d7a1 	ldrble	sp, [r7, r1, lsr #15]
 640:	d7d7d9d7 			; <UNDEFINED> instruction: 0xd7d7d9d7
 644:	d7d9d7d7 			; <UNDEFINED> instruction: 0xd7d9d7d7
 648:	d7d7d7d7 			; <UNDEFINED> instruction: 0xd7d7d7d7
 64c:	83820903 	orrhi	r0, r2, #49152	; 0xc000
 650:	03d60b03 	bicseq	r0, r6, #3072	; 0xc00
 654:	30d72e77 	sbcscc	r2, r7, r7, ror lr
 658:	30d730d7 	ldrsbcc	r3, [r7], #7
 65c:	01000802 	tsteq	r0, r2, lsl #16
 660:	00006101 	andeq	r6, r0, r1, lsl #2
 664:	1d000200 	sfmne	f0, 4, [r0, #-0]
 668:	02000000 	andeq	r0, r0, #0
 66c:	0d0efb01 	vstreq	d15, [lr, #-4]
 670:	01010100 	mrseq	r0, (UNDEF: 17)
 674:	00000001 	andeq	r0, r0, r1
 678:	01000001 	tsteq	r0, r1
 67c:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
 680:	00632e6e 	rsbeq	r2, r3, lr, ror #28
 684:	00000000 	andeq	r0, r0, r0
 688:	e0020500 	and	r0, r2, r0, lsl #10
 68c:	03c0009f 	biceq	r0, r0, #159	; 0x9f
 690:	2f4b010c 	svccs	0x004b010c
 694:	01040200 	mrseq	r0, R12_usr
 698:	04020031 	streq	r0, [r2], #-49	; 0xffffffcf
 69c:	02006701 	andeq	r6, r0, #262144	; 0x40000
 6a0:	03490104 	movteq	r0, #37124	; 0x9104
 6a4:	67842e0d 	strvs	r2, [r4, sp, lsl #28]
 6a8:	03040200 	movweq	r0, #16896	; 0x4200
 6ac:	02006606 	andeq	r6, r0, #6291456	; 0x600000
 6b0:	00660104 	rsbeq	r0, r6, r4, lsl #2
 6b4:	06020402 	streq	r0, [r2], -r2, lsl #8
 6b8:	04020081 	streq	r0, [r2], #-129	; 0xffffff7f
 6bc:	06660601 	strbteq	r0, [r6], -r1, lsl #12
 6c0:	00080285 	andeq	r0, r8, r5, lsl #5
 6c4:	地址 0x000006c4 越界。


Disassembly of section .debug_info:

00000000 <.debug_info>:
       0:	0000005e 	andeq	r0, r0, lr, asr r0
       4:	00000002 	andeq	r0, r0, r2
       8:	01040000 	mrseq	r0, (UNDEF: 4)
       c:	00000000 	andeq	r0, r0, r0
      10:	c0008000 	andgt	r8, r0, r0
      14:	c0008218 	andgt	r8, r0, r8, lsl r2
      18:	72617473 	rsbvc	r7, r1, #1929379840	; 0x73000000
      1c:	74732f74 	ldrbtvc	r2, [r3], #-3956	; 0xfffff08c
      20:	2e747261 	cdpcs	2, 7, cr7, cr4, cr1, {3}
      24:	682f0053 	stmdavs	pc!, {r0, r1, r4, r6}	; <UNPREDICTABLE>
      28:	2f656d6f 	svccs	0x00656d6f
      2c:	6c656873 	stclvs	8, cr6, [r5], #-460	; 0xfffffe34
      30:	2f6e6f74 	svccs	0x006e6f74
      34:	6b736544 	blvs	1cd954c <_start-0xbe32eab4>
      38:	2f706f74 	svccs	0x00706f74
      3c:	6a797168 	bvs	1e5c5e4 <_start-0xbe1aba1c>
      40:	37304c2f 	ldrcc	r4, [r0, -pc, lsr #24]!
      44:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
      48:	7961642f 	stmdbvc	r1!, {r0, r1, r2, r3, r5, sl, sp, lr}^
      4c:	312d3630 			; <UNDEFINED> instruction: 0x312d3630
      50:	4e470033 	mcrmi	0, 2, r0, cr7, cr3, {1}
      54:	53412055 	movtpl	r2, #4181	; 0x1055
      58:	322e3220 	eorcc	r3, lr, #32, 4
      5c:	00322e38 	eorseq	r2, r2, r8, lsr lr
      60:	00668001 	rsbeq	r8, r6, r1
      64:	00020000 	andeq	r0, r2, r0
      68:	00000014 	andeq	r0, r0, r4, lsl r0
      6c:	00970104 	addseq	r0, r7, r4, lsl #2
      70:	82180000 	andshi	r0, r8, #0
      74:	82c8c000 	sbchi	ip, r8, #0
      78:	6f63c000 	svcvs	0x0063c000
      7c:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
      80:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
      84:	6d755f2f 	ldclvs	15, cr5, [r5, #-188]!	; 0xffffff44
      88:	6973646f 	ldmdbvs	r3!, {r0, r1, r2, r3, r5, r6, sl, sp, lr}^
      8c:	00532e33 	subseq	r2, r3, r3, lsr lr
      90:	6d6f682f 	stclvs	8, cr6, [pc, #-188]!	; ffffffdc <__bss_end__+0x3fff5554>
      94:	68732f65 	ldmdavs	r3!, {r0, r2, r5, r6, r8, r9, sl, fp, sp}^
      98:	6f746c65 	svcvs	0x00746c65
      9c:	65442f6e 	strbvs	r2, [r4, #-3950]	; 0xfffff092
      a0:	6f746b73 	svcvs	0x00746b73
      a4:	71682f70 	smcvc	33520	; 0x82f0
      a8:	4c2f6a79 			; <UNDEFINED> instruction: 0x4c2f6a79
      ac:	615f3730 	cmpvs	pc, r0, lsr r7	; <UNPREDICTABLE>
      b0:	642f6d72 	strtvs	r6, [pc], #-3442	; b8 <_start-0xc0007f48>
      b4:	36307961 	ldrtcc	r7, [r0], -r1, ror #18
      b8:	0033312d 	eorseq	r3, r3, sp, lsr #2
      bc:	20554e47 	subscs	r4, r5, r7, asr #28
      c0:	32205341 	eorcc	r5, r0, #67108865	; 0x4000001
      c4:	2e38322e 	cdpcs	2, 3, cr3, cr8, cr14, {1}
      c8:	80010032 	andhi	r0, r1, r2, lsr r0
      cc:	00000066 	andeq	r0, r0, r6, rrx
      d0:	00280002 	eoreq	r0, r8, r2
      d4:	01040000 	mrseq	r0, (UNDEF: 4)
      d8:	00000107 	andeq	r0, r0, r7, lsl #2
      dc:	c00082c8 	andgt	r8, r0, r8, asr #5
      e0:	c000835c 	andgt	r8, r0, ip, asr r3
      e4:	6d6d6f63 	stclvs	15, cr6, [sp, #-396]!	; 0xfffffe74
      e8:	732f6e6f 			; <UNDEFINED> instruction: 0x732f6e6f
      ec:	5f2f6372 	svcpl	0x002f6372
      f0:	76696475 			; <UNDEFINED> instruction: 0x76696475
      f4:	2e336973 			; <UNDEFINED> instruction: 0x2e336973
      f8:	682f0053 	stmdavs	pc!, {r0, r1, r4, r6}	; <UNPREDICTABLE>
      fc:	2f656d6f 	svccs	0x00656d6f
     100:	6c656873 	stclvs	8, cr6, [r5], #-460	; 0xfffffe34
     104:	2f6e6f74 	svccs	0x006e6f74
     108:	6b736544 	blvs	1cd9620 <_start-0xbe32e9e0>
     10c:	2f706f74 	svccs	0x00706f74
     110:	6a797168 	bvs	1e5c6b8 <_start-0xbe1ab948>
     114:	37304c2f 	ldrcc	r4, [r0, -pc, lsr #24]!
     118:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
     11c:	7961642f 	stmdbvc	r1!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     120:	312d3630 			; <UNDEFINED> instruction: 0x312d3630
     124:	4e470033 	mcrmi	0, 2, r0, cr7, cr3, {1}
     128:	53412055 	movtpl	r2, #4181	; 0x1055
     12c:	322e3220 	eorcc	r3, lr, #32, 4
     130:	00322e38 	eorseq	r2, r2, r8, lsr lr
     134:	047e8001 	ldrbteq	r8, [lr], #-1
     138:	00040000 	andeq	r0, r4, r0
     13c:	0000003c 	andeq	r0, r0, ip, lsr r0
     140:	00570104 	subseq	r0, r7, r4, lsl #2
     144:	160c0000 	strne	r0, [ip], -r0
     148:	8a000001 	bhi	154 <_start-0xc0007eac>
     14c:	5c000001 	stcpl	0, cr0, [r0], {1}
     150:	b8c00083 	stmialt	r0, {r0, r1, r7}^
     154:	70000010 	andvc	r0, r0, r0, lsl r0
     158:	02000001 	andeq	r0, r0, #1
     15c:	0000003e 	andeq	r0, r0, lr, lsr r0
     160:	00302803 	eorseq	r2, r0, r3, lsl #16
     164:	04030000 	streq	r0, [r3], #-0
     168:	00000007 	andeq	r0, r0, r7
     16c:	00004502 	andeq	r4, r0, r2, lsl #10
     170:	25660300 	strbcs	r0, [r6, #-768]!	; 0xfffffd00
     174:	04000000 	streq	r0, [r0], #-0
     178:	00000058 	andeq	r0, r0, r8, asr r0
     17c:	00000051 	andeq	r0, r0, r1, asr r0
     180:	00005105 	andeq	r5, r0, r5, lsl #2
     184:	0600ff00 	streq	pc, [r0], -r0, lsl #30
     188:	00f60704 	rscseq	r0, r6, r4, lsl #14
     18c:	01060000 	mrseq	r0, (UNDEF: 6)
     190:	0000e308 	andeq	lr, r0, r8, lsl #6
     194:	016b0700 	cmneq	fp, r0, lsl #14
     198:	11010000 	mrsne	r0, (UNDEF: 1)
     19c:	00000041 	andeq	r0, r0, r1, asr #32
     1a0:	a9840305 	stmibge	r4, {r0, r2, r8, r9}
     1a4:	cc08c000 	stcgt	0, cr12, [r8], {-0}
     1a8:	02000001 	andeq	r0, r0, #1
     1ac:	93c8017d 	bicls	r0, r8, #1073741855	; 0x4000001f
     1b0:	004cc000 	subeq	ip, ip, r0
     1b4:	9c010000 	stcls	0, cr0, [r1], {-0}
     1b8:	000000b6 	strheq	r0, [r0], -r6
     1bc:	746d6609 	strbtvc	r6, [sp], #-1545	; 0xfffff9f7
     1c0:	017d0200 	cmneq	sp, r0, lsl #4
     1c4:	000000b6 	strheq	r0, [r0], -r6
     1c8:	0a709102 	beq	1c245d8 <_start-0xbe3e3a28>
     1cc:	0000230b 	andeq	r2, r0, fp, lsl #6
     1d0:	017f0200 	cmneq	pc, r0, lsl #4
     1d4:	00000036 	andeq	r0, r0, r6, lsr r0
     1d8:	0b649102 	bleq	19245e8 <_start-0xbe6e3a18>
     1dc:	00000172 	andeq	r0, r0, r2, ror r1
     1e0:	c8018002 	stmdagt	r1, {r1, pc}
     1e4:	03000000 	movweq	r0, #0
     1e8:	007f8091 			; <UNDEFINED> instruction: 0x007f8091
     1ec:	00c3040c 	sbceq	r0, r3, ip, lsl #8
     1f0:	01060000 	mrseq	r0, (UNDEF: 6)
     1f4:	0000ec08 	andeq	lr, r0, r8, lsl #24
     1f8:	00bc0d00 	adcseq	r0, ip, r0, lsl #26
     1fc:	bc040000 	stclt	0, cr0, [r4], {-0}
     200:	d8000000 	stmdale	r0, {}	; <UNPREDICTABLE>
     204:	05000000 	streq	r0, [r0, #-0]
     208:	00000051 	andeq	r0, r0, r1, asr r0
     20c:	cb0e0063 	blgt	3803a0 <_start-0xbfc87c60>
     210:	02000001 	andeq	r0, r0, #1
     214:	012e0172 			; <UNDEFINED> instruction: 0x012e0172
     218:	937c0000 	cmnls	ip, #0
     21c:	004cc000 	subeq	ip, ip, r0
     220:	9c010000 	stcls	0, cr0, [r1], {-0}
     224:	0000012e 	andeq	r0, r0, lr, lsr #2
     228:	66756209 	ldrbtvs	r6, [r5], -r9, lsl #4
     22c:	01720200 	cmneq	r2, r0, lsl #4
     230:	00000135 	andeq	r0, r0, r5, lsr r1
     234:	09609102 	stmdbeq	r0!, {r1, r8, ip, pc}^
     238:	00746d66 	rsbseq	r6, r4, r6, ror #26
     23c:	b6017202 	strlt	r7, [r1], -r2, lsl #4
     240:	02000000 	andeq	r0, r0, #0
     244:	0b0a7491 	bleq	29d490 <_start-0xbfd6ab70>
     248:	00000023 	andeq	r0, r0, r3, lsr #32
     24c:	36017402 	strcc	r7, [r1], -r2, lsl #8
     250:	02000000 	andeq	r0, r0, #0
     254:	690f6491 	stmdbvs	pc, {r0, r4, r7, sl, sp, lr}	; <UNPREDICTABLE>
     258:	01750200 	cmneq	r5, r0, lsl #4
     25c:	0000012e 	andeq	r0, r0, lr, lsr #2
     260:	00689102 	rsbeq	r9, r8, r2, lsl #2
     264:	69050410 	stmdbvs	r5, {r4, sl}
     268:	0c00746e 	cfstrseq	mvf7, [r0], {110}	; 0x6e
     26c:	0000bc04 	andeq	fp, r0, r4, lsl #24
     270:	01ca1100 	biceq	r1, sl, r0, lsl #2
     274:	bb020000 	bllt	8027c <_start-0xbff87d84>
     278:	0000012e 	andeq	r0, r0, lr, lsr #2
     27c:	c0008ab4 			; <UNDEFINED> instruction: 0xc0008ab4
     280:	000008c8 	andeq	r0, r0, r8, asr #17
     284:	02479c01 	subeq	r9, r7, #256	; 0x100
     288:	62120000 	andsvs	r0, r2, #0
     28c:	02006675 	andeq	r6, r0, #122683392	; 0x7500000
     290:	000135bb 			; <UNDEFINED> instruction: 0x000135bb
     294:	44910200 	ldrmi	r0, [r1], #512	; 0x200
     298:	746d6612 	strbtvc	r6, [sp], #-1554	; 0xfffff9ee
     29c:	b6bb0200 	ldrtlt	r0, [fp], r0, lsl #4
     2a0:	02000000 	andeq	r0, r0, #0
     2a4:	23134091 	tstcs	r3, #145	; 0x91
     2a8:	02000000 	andeq	r0, r0, #0
     2ac:	000036bb 			; <UNDEFINED> instruction: 0x000036bb
     2b0:	bc910300 	ldclt	3, cr0, [r1], {0}
     2b4:	656c147f 	strbvs	r1, [ip, #-1151]!	; 0xfffffb81
     2b8:	bd02006e 	stclt	0, cr0, [r2, #-440]	; 0xfffffe48
     2bc:	0000012e 	andeq	r0, r0, lr, lsr #2
     2c0:	14509102 	ldrbne	r9, [r0], #-258	; 0xfffffefe
     2c4:	006d756e 	rsbeq	r7, sp, lr, ror #10
     2c8:	0247c102 	subeq	ip, r7, #-2147483648	; 0x80000000
     2cc:	91020000 	mrsls	r0, (UNDEF: 2)
     2d0:	00691474 	rsbeq	r1, r9, r4, ror r4
     2d4:	012ec302 			; <UNDEFINED> instruction: 0x012ec302
     2d8:	91020000 	mrsls	r0, (UNDEF: 2)
     2dc:	00de1570 	sbcseq	r1, lr, r0, ror r5
     2e0:	c3020000 	movwgt	r0, #8192	; 0x2000
     2e4:	0000012e 	andeq	r0, r0, lr, lsr #2
     2e8:	146c9102 	strbtne	r9, [ip], #-258	; 0xfffffefe
     2ec:	00727473 	rsbseq	r7, r2, r3, ror r4
     2f0:	0135c402 	teqeq	r5, r2, lsl #8
     2f4:	91020000 	mrsls	r0, (UNDEF: 2)
     2f8:	00731468 	rsbseq	r1, r3, r8, ror #8
     2fc:	00b6c502 	adcseq	ip, r6, r2, lsl #10
     300:	91020000 	mrsls	r0, (UNDEF: 2)
     304:	012a1564 			; <UNDEFINED> instruction: 0x012a1564
     308:	c7020000 	strgt	r0, [r2, -r0]
     30c:	0000012e 	andeq	r0, r0, lr, lsr #2
     310:	15609102 	strbne	r9, [r0, #-258]!	; 0xfffffefe
     314:	0000017e 	andeq	r0, r0, lr, ror r1
     318:	012ec902 			; <UNDEFINED> instruction: 0x012ec902
     31c:	91020000 	mrsls	r0, (UNDEF: 2)
     320:	004d155c 	subeq	r1, sp, ip, asr r5
     324:	ca020000 	bgt	8032c <_start-0xbff87cd4>
     328:	0000012e 	andeq	r0, r0, lr, lsr #2
     32c:	15589102 	ldrbne	r9, [r8, #-258]	; 0xfffffefe
     330:	00000135 	andeq	r0, r0, r5, lsr r1
     334:	012ecc02 			; <UNDEFINED> instruction: 0x012ecc02
     338:	91020000 	mrsls	r0, (UNDEF: 2)
     33c:	01551654 	cmpeq	r5, r4, asr r6
     340:	d6020000 	strle	r0, [r2], -r0
     344:	c0008b0c 	andgt	r8, r0, ip, lsl #22
     348:	00912417 	addseq	r2, r1, r7, lsl r4
     34c:	000028c0 	andeq	r2, r0, r0, asr #17
     350:	00022e00 	andeq	r2, r2, r0, lsl #28
     354:	70690f00 	rsbvc	r0, r9, r0, lsl #30
     358:	01340200 	teqeq	r4, r0, lsl #4
     35c:	0000024e 	andeq	r0, r0, lr, asr #4
     360:	00489102 	subeq	r9, r8, r2, lsl #2
     364:	00915018 	addseq	r5, r1, r8, lsl r0
     368:	000028c0 	andeq	r2, r0, r0, asr #17
     36c:	70690f00 	rsbvc	r0, r9, r0, lsl #30
     370:	01370200 	teqeq	r7, r0, lsl #4
     374:	0000025b 	andeq	r0, r0, fp, asr r2
     378:	004c9102 	subeq	r9, ip, r2, lsl #2
     37c:	07040600 	streq	r0, [r4, -r0, lsl #12]
     380:	000000f1 	strdeq	r0, [r0], -r1
     384:	0254040c 	subseq	r0, r4, #12, 8	; 0xc000000
     388:	04060000 	streq	r0, [r6], #-0
     38c:	0001b605 	andeq	fp, r1, r5, lsl #12
     390:	2e040c00 	cdpcs	12, 0, cr0, cr4, cr0, {0}
     394:	19000001 	stmdbne	r0, {r0}
     398:	0000015c 	andeq	r0, r0, ip, asr r1
     39c:	0051b302 	subseq	fp, r1, r2, lsl #6
     3a0:	8a480000 	bhi	12003a8 <_start-0xbee07c58>
     3a4:	006cc000 	rsbeq	ip, ip, r0
     3a8:	9c010000 	stcls	0, cr0, [r1], {-0}
     3ac:	000002a2 	andeq	r0, r0, r2, lsr #5
     3b0:	02007312 	andeq	r7, r0, #1207959552	; 0x48000000
     3b4:	0000b6b3 			; <UNDEFINED> instruction: 0x0000b6b3
     3b8:	74910200 	ldrvc	r0, [r1], #512	; 0x200
     3bc:	00002e13 	andeq	r2, r0, r3, lsl lr
     3c0:	51b30200 			; <UNDEFINED> instruction: 0x51b30200
     3c4:	02000000 	andeq	r0, r0, #0
     3c8:	73147091 	tstvc	r4, #145	; 0x91
     3cc:	b5020063 	strlt	r0, [r2, #-99]	; 0xffffff9d
     3d0:	000000b6 	strheq	r0, [r0], -r6
     3d4:	00789102 	rsbseq	r9, r8, r2, lsl #2
     3d8:	0001641a 	andeq	r6, r1, sl, lsl r4
     3dc:	356e0200 	strbcc	r0, [lr, #-512]!	; 0xfffffe00
     3e0:	64000001 	strvs	r0, [r0], #-1
     3e4:	e4c00086 	strb	r0, [r0], #134	; 0x86
     3e8:	01000003 	tsteq	r0, r3
     3ec:	00036f9c 	muleq	r3, ip, pc	; <UNPREDICTABLE>
     3f0:	74731200 	ldrbtvc	r1, [r3], #-512	; 0xfffffe00
     3f4:	6e020072 	mcrvs	0, 0, r0, cr2, cr2, {3}
     3f8:	00000135 	andeq	r0, r0, r5, lsr r1
     3fc:	7f9c9103 	svcvc	0x009c9103
     400:	6d756e12 	ldclvs	14, cr6, [r5, #-72]!	; 0xffffffb8
     404:	546e0200 	strbtpl	r0, [lr], #-512	; 0xfffffe00
     408:	03000002 	movweq	r0, #2
     40c:	137f9891 	cmnne	pc, #9502720	; 0x910000
     410:	000000de 	ldrdeq	r0, [r0], -lr
     414:	00516e02 	subseq	r6, r1, r2, lsl #28
     418:	91030000 	mrsls	r0, (UNDEF: 3)
     41c:	30137f94 	mulscc	r3, r4, pc	; <UNPREDICTABLE>
     420:	02000001 	andeq	r0, r0, #1
     424:	00012e6e 	andeq	r2, r1, lr, ror #28
     428:	90910300 	addsls	r0, r1, r0, lsl #6
     42c:	004d137f 	subeq	r1, sp, pc, ror r3
     430:	6e020000 	cdpvs	0, 0, cr0, cr2, cr0, {0}
     434:	0000012e 	andeq	r0, r0, lr, lsr #2
     438:	13009102 	movwne	r9, #258	; 0x102
     43c:	0000016d 	andeq	r0, r0, sp, ror #2
     440:	012e6e02 			; <UNDEFINED> instruction: 0x012e6e02
     444:	91020000 	mrsls	r0, (UNDEF: 2)
     448:	00631404 	rsbeq	r1, r3, r4, lsl #8
     44c:	00bc7102 	adcseq	r7, ip, r2, lsl #2
     450:	91020000 	mrsls	r0, (UNDEF: 2)
     454:	01bf156b 			; <UNDEFINED> instruction: 0x01bf156b
     458:	71020000 	mrsvc	r0, (UNDEF: 2)
     45c:	000000bc 	strheq	r0, [r0], -ip
     460:	14779102 	ldrbtne	r9, [r7], #-258	; 0xfffffefe
     464:	00706d74 	rsbseq	r6, r0, r4, ror sp
     468:	036f7102 	cmneq	pc, #-2147483648	; 0x80000000
     46c:	91030000 	mrsls	r0, (UNDEF: 3)
     470:	00157fa0 	andseq	r7, r5, r0, lsr #31
     474:	02000000 	andeq	r0, r0, #0
     478:	0000b672 	andeq	fp, r0, r2, ror r6
     47c:	70910200 	addsvc	r0, r1, r0, lsl #4
     480:	02006914 	andeq	r6, r0, #20, 18	; 0x50000
     484:	00012e73 	andeq	r2, r1, r3, ror lr
     488:	6c910200 	lfmvs	f0, 4, [r1], {0}
     48c:	00882018 	addeq	r2, r8, r8, lsl r0
     490:	000034c0 	andeq	r3, r0, r0, asr #9
     494:	01c41500 	biceq	r1, r4, r0, lsl #10
     498:	95020000 	strls	r0, [r2, #-0]
     49c:	0000012e 	andeq	r0, r0, lr, lsr #2
     4a0:	00649102 	rsbeq	r9, r4, r2, lsl #2
     4a4:	00bc0400 	adcseq	r0, ip, r0, lsl #8
     4a8:	037f0000 	cmneq	pc, #0
     4ac:	51050000 	mrspl	r0, (UNDEF: 5)
     4b0:	41000000 	mrsmi	r0, (UNDEF: 0)
     4b4:	00191b00 	andseq	r1, r9, r0, lsl #22
     4b8:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
     4bc:	0000012e 	andeq	r0, r0, lr, lsr #2
     4c0:	c00085d0 	ldrdgt	r8, [r0], -r0
     4c4:	00000094 	muleq	r0, r4, r0
     4c8:	03b19c01 			; <UNDEFINED> instruction: 0x03b19c01
     4cc:	73120000 	tstvc	r2, #0
     4d0:	b1490200 	mrslt	r0, (UNDEF: 105)
     4d4:	02000003 	andeq	r0, r0, #3
     4d8:	69147491 	ldmdbvs	r4, {r0, r4, r7, sl, ip, sp, lr}
     4dc:	2e4b0200 	cdpcs	2, 4, cr0, cr11, cr0, {0}
     4e0:	02000001 	andeq	r0, r0, #1
     4e4:	0c007891 	stceq	8, cr7, [r0], {145}	; 0x91
     4e8:	0000b604 	andeq	fp, r0, r4, lsl #12
     4ec:	01081100 	mrseq	r1, (UNDEF: 24)
     4f0:	21020000 	mrscs	r0, (UNDEF: 2)
     4f4:	00000254 	andeq	r0, r0, r4, asr r2
     4f8:	c0008564 	andgt	r8, r0, r4, ror #10
     4fc:	0000006c 	andeq	r0, r0, ip, rrx
     500:	03fa9c01 	mvnseq	r9, #256	; 0x100
     504:	63120000 	tstvs	r2, #0
     508:	21020070 	tstcs	r2, r0, ror r0
     50c:	000000b6 	strheq	r0, [r0], -r6
     510:	13749102 	cmnne	r4, #-2147483648	; 0x80000000
     514:	00000103 	andeq	r0, r0, r3, lsl #2
     518:	03fa2102 	mvnseq	r2, #-2147483648	; 0x80000000
     51c:	91020000 	mrsls	r0, (UNDEF: 2)
     520:	00de1370 	sbcseq	r1, lr, r0, ror r3
     524:	21020000 	mrscs	r0, (UNDEF: 2)
     528:	00000051 	andeq	r0, r0, r1, asr r0
     52c:	006c9102 	rsbeq	r9, ip, r2, lsl #2
     530:	0135040c 	teqeq	r5, ip, lsl #8
     534:	3f110000 	svccc	0x00110000
     538:	02000001 	andeq	r0, r0, #1
     53c:	00024706 	andeq	r4, r2, r6, lsl #14
     540:	0083ac00 	addeq	sl, r3, r0, lsl #24
     544:	0001b8c0 	andeq	fp, r1, r0, asr #17
     548:	5f9c0100 	svcpl	0x009c0100
     54c:	12000004 	andne	r0, r0, #4
     550:	02007063 	andeq	r7, r0, #99	; 0x63
     554:	0000b606 	andeq	fp, r0, r6, lsl #12
     558:	6c910200 	lfmvs	f0, 4, [r1], {0}
     55c:	00010313 	andeq	r0, r1, r3, lsl r3
     560:	fa060200 	blx	180d68 <_start-0xbfe87298>
     564:	02000003 	andeq	r0, r0, #3
     568:	de136891 	mrcle	8, 0, r6, cr3, cr1, {4}
     56c:	02000000 	andeq	r0, r0, #0
     570:	00005106 	andeq	r5, r0, r6, lsl #2
     574:	64910200 	ldrvs	r0, [r1], #512	; 0x200
     578:	00014e15 	andeq	r4, r1, r5, lsl lr
     57c:	47080200 	strmi	r0, [r8, -r0, lsl #4]
     580:	02000002 	andeq	r0, r0, #2
     584:	28157491 	ldmdacs	r5, {r0, r4, r7, sl, ip, sp, lr}
     588:	02000000 	andeq	r0, r0, #0
     58c:	00024708 	andeq	r4, r2, r8, lsl #14
     590:	70910200 	addsvc	r0, r1, r0, lsl #4
     594:	00341c00 	eorseq	r1, r4, r0, lsl #24
     598:	44010000 	strmi	r0, [r1], #-0
     59c:	00000058 	andeq	r0, r0, r8, asr r0
     5a0:	c000835c 	andgt	r8, r0, ip, asr r3
     5a4:	00000050 	andeq	r0, r0, r0, asr r0
     5a8:	63129c01 	tstvs	r2, #256	; 0x100
     5ac:	58440100 	stmdapl	r4, {r8}^
     5b0:	02000000 	andeq	r0, r0, #0
     5b4:	00007891 	muleq	r0, r1, r8
     5b8:	00000214 	andeq	r0, r0, r4, lsl r2
     5bc:	01f80004 	mvnseq	r0, r4
     5c0:	01040000 	mrseq	r0, (UNDEF: 4)
     5c4:	00000057 	andeq	r0, r0, r7, asr r0
     5c8:	0002620c 	andeq	r6, r2, ip, lsl #4
     5cc:	00018a00 	andeq	r8, r1, r0, lsl #20
     5d0:	00941400 	addseq	r1, r4, r0, lsl #8
     5d4:	0002dcc0 	andeq	sp, r2, r0, asr #25
     5d8:	0003a200 	andeq	sl, r3, r0, lsl #4
     5dc:	02340200 	eorseq	r0, r4, #0, 4
     5e0:	0000ca04 	andeq	ip, r0, r4, lsl #20
     5e4:	02080300 	andeq	r0, r8, #0, 6
     5e8:	05020000 	streq	r0, [r2, #-0]
     5ec:	000000d1 	ldrdeq	r0, [r0], -r1
     5f0:	02450300 	subeq	r0, r5, #0, 6
     5f4:	06020000 	streq	r0, [r2], -r0
     5f8:	000000d1 	ldrdeq	r0, [r0], -r1
     5fc:	020e0304 	andeq	r0, lr, #4, 6	; 0x10000000
     600:	07020000 	streq	r0, [r2, -r0]
     604:	000000d1 	ldrdeq	r0, [r0], -r1
     608:	02020308 	andeq	r0, r2, #8, 6	; 0x20000000
     60c:	08020000 	stmdaeq	r2, {}	; <UNPREDICTABLE>
     610:	000000d1 	ldrdeq	r0, [r0], -r1
     614:	4449040c 	strbmi	r0, [r9], #-1036	; 0xfffffbf4
     618:	09020052 	stmdbeq	r2, {r1, r4, r6}
     61c:	000000d1 	ldrdeq	r0, [r0], -r1
     620:	444f0410 	strbmi	r0, [pc], #-1040	; 628 <_start-0xc00079d8>
     624:	0a020052 	beq	80774 <_start-0xbff8788c>
     628:	000000d1 	ldrdeq	r0, [r0], -r1
     62c:	01fd0314 	mvnseq	r0, r4, lsl r3
     630:	0b020000 	bleq	80638 <_start-0xbff879c8>
     634:	000000d1 	ldrdeq	r0, [r0], -r1
     638:	02390318 	eorseq	r0, r9, #24, 6	; 0x60000000
     63c:	0c020000 	stceq	0, cr0, [r2], {-0}
     640:	000000d1 	ldrdeq	r0, [r0], -r1
     644:	024c031c 	subeq	r0, ip, #28, 6	; 0x70000000
     648:	0d020000 	stceq	0, cr0, [r2, #-0]
     64c:	000000d1 	ldrdeq	r0, [r0], -r1
     650:	025d0320 	subseq	r0, sp, #32, 6	; 0x80000000
     654:	0e020000 	cdpeq	0, 0, cr0, cr2, cr0, {0}
     658:	000000d1 	ldrdeq	r0, [r0], -r1
     65c:	52420424 	subpl	r0, r2, #36, 8	; 0x24000000
     660:	0f020052 	svceq	0x00020052
     664:	000000d1 	ldrdeq	r0, [r0], -r1
     668:	65720428 	ldrbvs	r0, [r2, #-1064]!	; 0xfffffbd8
     66c:	10020073 	andne	r0, r2, r3, ror r0
     670:	000000d1 	ldrdeq	r0, [r0], -r1
     674:	01df032c 	bicseq	r0, pc, ip, lsr #6
     678:	11020000 	mrsne	r0, (UNDEF: 2)
     67c:	000000d1 	ldrdeq	r0, [r0], -r1
     680:	04050030 	streq	r0, [r5], #-48	; 0xffffffd0
     684:	0000f607 	andeq	pc, r0, r7, lsl #12
     688:	00ca0600 	sbceq	r0, sl, r0, lsl #12
     68c:	32070000 	andcc	r0, r7, #0
     690:	02000002 	andeq	r0, r0, #2
     694:	00002513 	andeq	r2, r0, r3, lsl r5
     698:	03300200 	teqeq	r0, #0, 4
     69c:	00017a04 	andeq	r7, r1, r4, lsl #20
     6a0:	52430400 	subpl	r0, r3, #0, 8
     6a4:	05030031 	streq	r0, [r3, #-49]	; 0xffffffcf
     6a8:	000000d1 	ldrdeq	r0, [r0], -r1
     6ac:	52430400 	subpl	r0, r3, #0, 8
     6b0:	06030032 			; <UNDEFINED> instruction: 0x06030032
     6b4:	000000d1 	ldrdeq	r0, [r0], -r1
     6b8:	52430404 	subpl	r0, r3, #4, 8	; 0x4000000
     6bc:	07030033 	smladxeq	r3, r3, r0, r0
     6c0:	000000d1 	ldrdeq	r0, [r0], -r1
     6c4:	52420408 	subpl	r0, r2, #8, 8	; 0x8000000
     6c8:	08030052 	stmdaeq	r3, {r1, r4, r6}
     6cc:	000000d1 	ldrdeq	r0, [r0], -r1
     6d0:	0216030c 	andseq	r0, r6, #12, 6	; 0x30000000
     6d4:	09030000 	stmdbeq	r3, {}	; <UNPREDICTABLE>
     6d8:	000000d1 	ldrdeq	r0, [r0], -r1
     6dc:	01f80310 	mvnseq	r0, r0, lsl r3
     6e0:	0a030000 	beq	c06e8 <_start-0xbff47918>
     6e4:	000000d1 	ldrdeq	r0, [r0], -r1
     6e8:	51520414 	cmppl	r2, r4, lsl r4
     6ec:	0b030052 	bleq	c083c <_start-0xbff477c4>
     6f0:	000000d1 	ldrdeq	r0, [r0], -r1
     6f4:	53490418 	movtpl	r0, #37912	; 0x9418
     6f8:	0c030052 	stceq	0, cr0, [r3], {82}	; 0x52
     6fc:	000000d1 	ldrdeq	r0, [r0], -r1
     700:	4349041c 	movtmi	r0, #37916	; 0x941c
     704:	0d030052 	stceq	0, cr0, [r3, #-328]	; 0xfffffeb8
     708:	000000d1 	ldrdeq	r0, [r0], -r1
     70c:	44520420 	ldrbmi	r0, [r2], #-1056	; 0xfffffbe0
     710:	0e030052 	mcreq	0, 0, r0, cr3, cr2, {2}
     714:	000000d1 	ldrdeq	r0, [r0], -r1
     718:	44540424 	ldrbmi	r0, [r4], #-1060	; 0xfffffbdc
     71c:	0f030052 	svceq	0x00030052
     720:	000000d1 	ldrdeq	r0, [r0], -r1
     724:	021b0328 	andseq	r0, fp, #40, 6	; 0xa0000000
     728:	10030000 	andne	r0, r3, r0
     72c:	000000d1 	ldrdeq	r0, [r0], -r1
     730:	3e07002c 	cdpcc	0, 0, cr0, cr7, cr12, {1}
     734:	03000002 	movweq	r0, #2
     738:	0000e111 	andeq	lr, r0, r1, lsl r1
     73c:	02510800 	subseq	r0, r1, #0, 16
     740:	30010000 	andcc	r0, r1, r0
     744:	000001ac 	andeq	r0, r0, ip, lsr #3
     748:	c00096a4 	andgt	r9, r0, r4, lsr #13
     74c:	0000004c 	andeq	r0, r0, ip, asr #32
     750:	01ac9c01 			; <UNDEFINED> instruction: 0x01ac9c01
     754:	63090000 	movwvs	r0, #36864	; 0x9000
     758:	32010068 	andcc	r0, r1, #104	; 0x68
     75c:	000001ac 	andeq	r0, r0, ip, lsr #3
     760:	007b9102 	rsbseq	r9, fp, r2, lsl #2
     764:	ec080105 	stfs	f0, [r8], {5}
     768:	0a000000 	beq	770 <_start-0xc0007890>
     76c:	000001ac 	andeq	r0, r0, ip, lsr #3
     770:	0001e70b 	andeq	lr, r1, fp, lsl #14
     774:	5c2a0100 	stfpls	f0, [sl], #-0
     778:	48c00096 	stmiami	r0, {r1, r2, r4, r7}^
     77c:	01000000 	mrseq	r0, (UNDEF: 0)
     780:	0001dc9c 	muleq	r1, ip, ip
     784:	02210c00 	eoreq	r0, r1, #0, 24
     788:	2a010000 	bcs	40790 <_start-0xbffc7870>
     78c:	000001dc 	ldrdeq	r0, [r0], -ip
     790:	00749102 	rsbseq	r9, r4, r2, lsl #2
     794:	01b3040d 			; <UNDEFINED> instruction: 0x01b3040d
     798:	d30b0000 	movwle	r0, #45056	; 0xb000
     79c:	01000001 	tsteq	r0, r1
     7a0:	0095fc23 	addseq	pc, r5, r3, lsr #24
     7a4:	000060c0 	andeq	r6, r0, r0, asr #1
     7a8:	069c0100 	ldreq	r0, [ip], r0, lsl #2
     7ac:	0c000002 	stceq	0, cr0, [r0], {2}
     7b0:	000001f3 	strdeq	r0, [r0], -r3
     7b4:	01b32301 			; <UNDEFINED> instruction: 0x01b32301
     7b8:	91020000 	mrsls	r0, (UNDEF: 2)
     7bc:	260e0074 			; <UNDEFINED> instruction: 0x260e0074
     7c0:	01000002 	tsteq	r0, r2
     7c4:	00941405 	addseq	r1, r4, r5, lsl #8
     7c8:	0001e8c0 	andeq	lr, r1, r0, asr #17
     7cc:	009c0100 	addseq	r0, ip, r0, lsl #2
     7d0:	000005d5 	ldrdeq	r0, [r0], -r5
     7d4:	02d00004 	sbcseq	r0, r0, #4
     7d8:	01040000 	mrseq	r0, (UNDEF: 4)
     7dc:	00000057 	andeq	r0, r0, r7, asr r0
     7e0:	0003e10c 	andeq	lr, r3, ip, lsl #2
     7e4:	00018a00 	andeq	r8, r1, r0, lsl #20
     7e8:	0096f000 	addseq	pc, r6, r0
     7ec:	000170c0 	andeq	r7, r1, r0, asr #1
     7f0:	00044c00 	andeq	r4, r4, r0, lsl #24
     7f4:	07040200 	streq	r0, [r4, -r0, lsl #4]
     7f8:	000000f6 	strdeq	r0, [r0], -r6
     7fc:	00002503 	andeq	r2, r0, r3, lsl #10
     800:	002c0400 	eoreq	r0, ip, r0, lsl #8
     804:	00410000 	subeq	r0, r1, r0
     808:	25050000 	strcs	r0, [r5, #-0]
     80c:	01000000 	mrseq	r0, (UNDEF: 0)
     810:	00310300 	eorseq	r0, r1, r0, lsl #6
     814:	2c040000 	stccs	0, cr0, [r4], {-0}
     818:	56000000 	strpl	r0, [r0], -r0
     81c:	05000000 	streq	r0, [r0, #-0]
     820:	00000025 	andeq	r0, r0, r5, lsr #32
     824:	46030005 	strmi	r0, [r3], -r5
     828:	04000000 	streq	r0, [r0], #-0
     82c:	0000002c 	andeq	r0, r0, ip, lsr #32
     830:	0000006b 	andeq	r0, r0, fp, rrx
     834:	00002505 	andeq	r2, r0, r5, lsl #10
     838:	03000800 	movweq	r0, #2048	; 0x800
     83c:	0000005b 	andeq	r0, r0, fp, asr r0
     840:	00002c04 	andeq	r2, r0, r4, lsl #24
     844:	00008000 	andeq	r8, r0, r0
     848:	00250500 	eoreq	r0, r5, r0, lsl #10
     84c:	00030000 	andeq	r0, r3, r0
     850:	00007003 	andeq	r7, r0, r3
     854:	002c0400 	eoreq	r0, ip, r0, lsl #8
     858:	00950000 	addseq	r0, r5, r0
     85c:	25050000 	strcs	r0, [r5, #-0]
     860:	11000000 	mrsne	r0, (UNDEF: 0)
     864:	00850300 	addeq	r0, r5, r0, lsl #6
     868:	f0060000 			; <UNDEFINED> instruction: 0xf0060000
     86c:	02b30402 	adcseq	r0, r3, #33554432	; 0x2000000
     870:	55070000 	strpl	r0, [r7, #-0]
     874:	02000003 	andeq	r0, r0, #3
     878:	00002c05 	andeq	r2, r0, r5, lsl #24
     87c:	85070000 	strhi	r0, [r7, #-0]
     880:	02000002 	andeq	r0, r0, #2
     884:	00002c06 	andeq	r2, r0, r6, lsl #24
     888:	97070400 	strls	r0, [r7, -r0, lsl #8]
     88c:	02000002 	andeq	r0, r0, #2
     890:	00002c07 	andeq	r2, r0, r7, lsl #24
     894:	c8070800 	stmdagt	r7, {fp}
     898:	02000003 	andeq	r0, r0, #3
     89c:	00002c08 	andeq	r2, r0, r8, lsl #24
     8a0:	bf070c00 	svclt	0x00070c00
     8a4:	02000002 	andeq	r0, r0, #2
     8a8:	00002c09 	andeq	r2, r0, r9, lsl #24
     8ac:	fa071000 	blx	1c48b4 <_start-0xbfe4374c>
     8b0:	02000003 	andeq	r0, r0, #3
     8b4:	00002c0a 	andeq	r2, r0, sl, lsl #24
     8b8:	24071400 	strcs	r1, [r7], #-1024	; 0xfffffc00
     8bc:	02000004 	andeq	r0, r0, #4
     8c0:	0000410b 	andeq	r4, r0, fp, lsl #2
     8c4:	5b071800 	blpl	1c68cc <_start-0xbfe41734>
     8c8:	02000003 	andeq	r0, r0, #3
     8cc:	00002c0c 	andeq	r2, r0, ip, lsl #24
     8d0:	8b072000 	blhi	1c88d8 <_start-0xbfe3f728>
     8d4:	02000002 	andeq	r0, r0, #2
     8d8:	00002c0d 	andeq	r2, r0, sp, lsl #24
     8dc:	9e072400 	cfcpysls	mvf2, mvf7
     8e0:	02000002 	andeq	r0, r0, #2
     8e4:	00002c0e 	andeq	r2, r0, lr, lsl #24
     8e8:	cd072800 	stcgt	8, cr2, [r7, #-0]
     8ec:	02000003 	andeq	r0, r0, #3
     8f0:	00002c0f 	andeq	r2, r0, pc, lsl #24
     8f4:	c4072c00 	strgt	r2, [r7], #-3072	; 0xfffff400
     8f8:	02000002 	andeq	r0, r0, #2
     8fc:	00002c10 	andeq	r2, r0, r0, lsl ip
     900:	01073000 	mrseq	r3, (UNDEF: 7)
     904:	02000004 	andeq	r0, r0, #4
     908:	00002c11 	andeq	r2, r0, r1, lsl ip
     90c:	29073400 	stmdbcs	r7, {sl, ip, sp}
     910:	02000004 	andeq	r0, r0, #4
     914:	00004112 	andeq	r4, r0, r2, lsl r1
     918:	61073800 	tstvs	r7, r0, lsl #16
     91c:	02000003 	andeq	r0, r0, #3
     920:	00002c13 	andeq	r2, r0, r3, lsl ip
     924:	91074000 	mrsls	r4, (UNDEF: 7)
     928:	02000002 	andeq	r0, r0, #2
     92c:	00002c14 	andeq	r2, r0, r4, lsl ip
     930:	a5074400 	strge	r4, [r7, #-1024]	; 0xfffffc00
     934:	02000002 	andeq	r0, r0, #2
     938:	00002c15 	andeq	r2, r0, r5, lsl ip
     93c:	d2074800 	andle	r4, r7, #0, 16
     940:	02000003 	andeq	r0, r0, #3
     944:	00002c16 	andeq	r2, r0, r6, lsl ip
     948:	c9074c00 	stmdbgt	r7, {sl, fp, lr}
     94c:	02000002 	andeq	r0, r0, #2
     950:	00002c17 	andeq	r2, r0, r7, lsl ip
     954:	08075000 	stmdaeq	r7, {ip, lr}
     958:	02000004 	andeq	r0, r0, #4
     95c:	00002c18 	andeq	r2, r0, r8, lsl ip
     960:	2e075400 	cfcpyscs	mvf5, mvf7
     964:	02000004 	andeq	r0, r0, #4
     968:	00004119 	andeq	r4, r0, r9, lsl r1
     96c:	dc075800 	stcle	8, cr5, [r7], {-0}
     970:	02000002 	andeq	r0, r0, #2
     974:	00002c1a 	andeq	r2, r0, sl, lsl ip
     978:	e4076000 	str	r6, [r7], #-0
     97c:	02000002 	andeq	r0, r0, #2
     980:	00002c1b 	andeq	r2, r0, fp, lsl ip
     984:	ec076400 	cfstrs	mvf6, [r7], {-0}
     988:	02000002 	andeq	r0, r0, #2
     98c:	00002c1c 	andeq	r2, r0, ip, lsl ip
     990:	f4076800 	vst2.8	{d6-d7}, [r7], r0
     994:	02000002 	andeq	r0, r0, #2
     998:	00002c1d 	andeq	r2, r0, sp, lsl ip
     99c:	33076c00 	movwcc	r6, #31744	; 0x7c00
     9a0:	02000004 	andeq	r0, r0, #4
     9a4:	0000801e 	andeq	r8, r0, lr, lsl r0
     9a8:	03077000 	movweq	r7, #28672	; 0x7000
     9ac:	02000003 	andeq	r0, r0, #3
     9b0:	00002c1f 	andeq	r2, r0, pc, lsl ip
     9b4:	81078000 	mrshi	r8, (UNDEF: 7)
     9b8:	02000003 	andeq	r0, r0, #3
     9bc:	00002c20 	andeq	r2, r0, r0, lsr #24
     9c0:	38078400 	stmdacc	r7, {sl, pc}
     9c4:	02000004 	andeq	r0, r0, #4
     9c8:	00004121 	andeq	r4, r0, r1, lsr #2
     9cc:	4e078800 	cdpmi	8, 0, cr8, cr7, cr0, {0}
     9d0:	02000003 	andeq	r0, r0, #3
     9d4:	00002c22 	andeq	r2, r0, r2, lsr #24
     9d8:	88079000 	stmdahi	r7, {ip, pc}
     9dc:	02000003 	andeq	r0, r0, #3
     9e0:	00002c23 	andeq	r2, r0, r3, lsr #24
     9e4:	3d079400 	cfstrscc	mvf9, [r7, #-0]
     9e8:	02000004 	andeq	r0, r0, #4
     9ec:	00004124 	andeq	r4, r0, r4, lsr #2
     9f0:	0a079800 	beq	1e69f8 <_start-0xbfe21608>
     9f4:	02000003 	andeq	r0, r0, #3
     9f8:	00002c25 	andeq	r2, r0, r5, lsr #24
     9fc:	8f07a000 	svchi	0x0007a000
     a00:	02000003 	andeq	r0, r0, #3
     a04:	00002c26 	andeq	r2, r0, r6, lsr #24
     a08:	4207a400 	andmi	sl, r7, #0, 8
     a0c:	02000004 	andeq	r0, r0, #4
     a10:	00005627 	andeq	r5, r0, r7, lsr #12
     a14:	0f07a800 	svceq	0x0007a800
     a18:	02000004 	andeq	r0, r0, #4
     a1c:	00002c28 	andeq	r2, r0, r8, lsr #24
     a20:	2807c000 	stmdacs	r7, {lr, pc}
     a24:	02000003 	andeq	r0, r0, #3
     a28:	00002c29 	andeq	r2, r0, r9, lsr #24
     a2c:	7407c400 	strvc	ip, [r7], #-1024	; 0xfffffc00
     a30:	02000002 	andeq	r0, r0, #2
     a34:	0000412a 	andeq	r4, r0, sl, lsr #2
     a38:	1607c800 	strne	ip, [r7], -r0, lsl #16
     a3c:	02000004 	andeq	r0, r0, #4
     a40:	00002c2b 	andeq	r2, r0, fp, lsr #24
     a44:	2f07d000 	svccs	0x0007d000
     a48:	02000003 	andeq	r0, r0, #3
     a4c:	00002c2c 	andeq	r2, r0, ip, lsr #24
     a50:	7907d400 	stmdbvc	r7, {sl, ip, lr, pc}
     a54:	02000002 	andeq	r0, r0, #2
     a58:	0000412d 	andeq	r4, r0, sp, lsr #2
     a5c:	1d07d800 	stcne	8, cr13, [r7, #-0]
     a60:	02000004 	andeq	r0, r0, #4
     a64:	00002c2e 	andeq	r2, r0, lr, lsr #24
     a68:	3607e000 	strcc	lr, [r7], -r0
     a6c:	02000003 	andeq	r0, r0, #3
     a70:	00002c2f 	andeq	r2, r0, pc, lsr #24
     a74:	ee07e400 	cfcpys	mvf14, mvf7
     a78:	02000003 	andeq	r0, r0, #3
     a7c:	00004130 	andeq	r4, r0, r0, lsr r1
     a80:	0800e800 	stmdaeq	r0, {fp, sp, lr, pc}
     a84:	0000033d 	andeq	r0, r0, sp, lsr r3
     a88:	009a3102 	addseq	r3, sl, r2, lsl #2
     a8c:	00090000 	andeq	r0, r9, r0
     a90:	fa05030d 	blx	1416cc <_start-0xbfec6934>
     a94:	07000003 	streq	r0, [r0, -r3]
     a98:	000003c3 	andeq	r0, r0, r3, asr #7
     a9c:	002c0603 	eoreq	r0, ip, r3, lsl #12
     aa0:	07000000 	streq	r0, [r0, -r0]
     aa4:	00000246 	andeq	r0, r0, r6, asr #4
     aa8:	002c0703 	eoreq	r0, ip, r3, lsl #14
     aac:	07040000 	streq	r0, [r4, -r0]
     ab0:	0000031b 	andeq	r0, r0, fp, lsl r3
     ab4:	002c0803 	eoreq	r0, ip, r3, lsl #16
     ab8:	07080000 	streq	r0, [r8, -r0]
     abc:	00000424 	andeq	r0, r0, r4, lsr #8
     ac0:	040a0903 	streq	r0, [sl], #-2307	; 0xfffff6fd
     ac4:	070c0000 	streq	r0, [ip, -r0]
     ac8:	00000320 	andeq	r0, r0, r0, lsr #6
     acc:	006b0a03 	rsbeq	r0, fp, r3, lsl #20
     ad0:	07800000 	streq	r0, [r0, r0]
     ad4:	00000429 	andeq	r0, r0, r9, lsr #8
     ad8:	041f0b03 	ldreq	r0, [pc], #-2819	; ae0 <_start-0xc0007520>
     adc:	0aa40000 	beq	fe900ae4 <__bss_end__+0x3e8f605c>
     ae0:	00000344 	andeq	r0, r0, r4, asr #6
     ae4:	006b0c03 	rsbeq	r0, fp, r3, lsl #24
     ae8:	01000000 	mrseq	r0, (UNDEF: 0)
     aec:	00042e0a 	andeq	r2, r4, sl, lsl #28
     af0:	1f0d0300 	svcne	0x000d0300
     af4:	24000004 	strcs	r0, [r0], #-4
     af8:	03aa0a01 			; <UNDEFINED> instruction: 0x03aa0a01
     afc:	0e030000 	cdpeq	0, 0, cr0, cr3, cr0, {0}
     b00:	0000006b 	andeq	r0, r0, fp, rrx
     b04:	330a0180 	movwcc	r0, #41344	; 0xa180
     b08:	03000004 	movweq	r0, #4
     b0c:	00041f0f 	andeq	r1, r4, pc, lsl #30
     b10:	0a01a400 	beq	69b18 <_start-0xbff9e4e8>
     b14:	00000379 	andeq	r0, r0, r9, ror r3
     b18:	006b1003 	rsbeq	r1, fp, r3
     b1c:	02000000 	andeq	r0, r0, #0
     b20:	0004380a 	andeq	r3, r4, sl, lsl #16
     b24:	1f110300 	svcne	0x00110300
     b28:	24000004 	strcs	r0, [r0], #-4
     b2c:	039b0a02 	orrseq	r0, fp, #8192	; 0x2000
     b30:	12030000 	andne	r0, r3, #0
     b34:	0000006b 	andeq	r0, r0, fp, rrx
     b38:	3d0a0280 	sfmcc	f0, 4, [sl, #-512]	; 0xfffffe00
     b3c:	03000004 	movweq	r0, #4
     b40:	00041f13 	andeq	r1, r4, r3, lsl pc
     b44:	0a02a400 	beq	a9b4c <_start-0xbff5e4b4>
     b48:	00000311 	andeq	r0, r0, r1, lsl r3
     b4c:	006b1403 	rsbeq	r1, fp, r3, lsl #8
     b50:	03000000 	movweq	r0, #0
     b54:	0004420a 	andeq	r4, r4, sl, lsl #4
     b58:	1f150300 	svcne	0x00150300
     b5c:	24000004 	strcs	r0, [r0], #-4
     b60:	03d70a03 	bicseq	r0, r7, #12288	; 0x3000
     b64:	16030000 	strne	r0, [r3], -r0
     b68:	0000006b 	andeq	r0, r0, fp, rrx
     b6c:	740a0380 	strvc	r0, [sl], #-896	; 0xfffffc80
     b70:	03000002 	movweq	r0, #2
     b74:	00041f17 	andeq	r1, r4, r7, lsl pc
     b78:	0a03a400 	beq	e9b80 <_start-0xbff1e480>
     b7c:	0000036e 	andeq	r0, r0, lr, ror #6
     b80:	04341803 	ldrteq	r1, [r4], #-2051	; 0xfffff7fd
     b84:	04000000 	streq	r0, [r0], #-0
     b88:	0002790a 	andeq	r7, r2, sl, lsl #18
     b8c:	49190300 	ldmdbmi	r9, {r8, r9}
     b90:	20000004 	andcs	r0, r0, r4
     b94:	03b90a05 			; <UNDEFINED> instruction: 0x03b90a05
     b98:	1a030000 	bne	c0ba0 <_start-0xbff47460>
     b9c:	00000434 	andeq	r0, r0, r4, lsr r4
     ba0:	ee0a0800 	cdp	8, 0, cr0, cr10, cr0, {0}
     ba4:	03000003 	movweq	r0, #3
     ba8:	0004491b 	andeq	r4, r4, fp, lsl r9
     bac:	0a092000 	beq	248bb4 <_start-0xbfdbf44c>
     bb0:	00000e4f 	andeq	r0, r0, pc, asr #28
     bb4:	00951c03 	addseq	r1, r5, r3, lsl #24
     bb8:	0c000000 	stceq	0, cr0, [r0], {-0}
     bbc:	0003f40a 	andeq	pc, r3, sl, lsl #8
     bc0:	5e1d0300 	cdppl	3, 1, cr0, cr13, cr0, {0}
     bc4:	48000004 	stmdami	r0, {r2}
     bc8:	2c04000c 	stccs	0, cr0, [r4], {12}
     bcc:	0a000000 	beq	bd4 <_start-0xc000742c>
     bd0:	05000004 	streq	r0, [r0, #-4]
     bd4:	00000025 	andeq	r0, r0, r5, lsr #32
     bd8:	fa03001c 	blx	c0c50 <_start-0xbff473b0>
     bdc:	04000003 	streq	r0, [r0], #-3
     be0:	0000002c 	andeq	r0, r0, ip, lsr #32
     be4:	0000041f 	andeq	r0, r0, pc, lsl r4
     be8:	00002505 	andeq	r2, r0, r5, lsl #10
     bec:	03001600 	movweq	r1, #1536	; 0x600
     bf0:	0000040f 	andeq	r0, r0, pc, lsl #8
     bf4:	00002c04 	andeq	r2, r0, r4, lsl #24
     bf8:	00043400 	andeq	r3, r4, r0, lsl #8
     bfc:	00250500 	eoreq	r0, r5, r0, lsl #10
     c00:	00470000 	subeq	r0, r7, r0
     c04:	00042403 	andeq	r2, r4, r3, lsl #8
     c08:	002c0400 	eoreq	r0, ip, r0, lsl #8
     c0c:	04490000 	strbeq	r0, [r9], #-0
     c10:	25050000 	strcs	r0, [r5, #-0]
     c14:	b7000000 	strlt	r0, [r0, -r0]
     c18:	04390300 	ldrteq	r0, [r9], #-768	; 0xfffffd00
     c1c:	2c040000 	stccs	0, cr0, [r4], {-0}
     c20:	5e000000 	cdppl	0, 0, cr0, cr0, cr0, {0}
     c24:	05000004 	streq	r0, [r0, #-4]
     c28:	00000025 	andeq	r0, r0, r5, lsr #32
     c2c:	4e03002d 	cdpmi	0, 0, cr0, cr3, cr13, {1}
     c30:	08000004 	stmdaeq	r0, {r2}
     c34:	0000027e 	andeq	r0, r0, lr, ror r2
     c38:	02be1f03 	adcseq	r1, lr, #3, 30
     c3c:	04090000 	streq	r0, [r9], #-0
     c40:	5e230310 	mcrpl	3, 1, r0, cr3, cr0, {0}
     c44:	07000005 	streq	r0, [r0, -r5]
     c48:	000003c3 	andeq	r0, r0, r3, asr #7
     c4c:	002c2403 	eoreq	r2, ip, r3, lsl #8
     c50:	0b000000 	bleq	c58 <_start-0xc00073a8>
     c54:	00524d50 	subseq	r4, r2, r0, asr sp
     c58:	002c2503 	eoreq	r2, ip, r3, lsl #10
     c5c:	0b040000 	bleq	100c64 <_start-0xbff0739c>
     c60:	00525242 	subseq	r5, r2, r2, asr #4
     c64:	002c2603 	eoreq	r2, ip, r3, lsl #12
     c68:	0b080000 	bleq	200c70 <_start-0xbfe07390>
     c6c:	00524149 	subseq	r4, r2, r9, asr #2
     c70:	002c2703 	eoreq	r2, ip, r3, lsl #14
     c74:	070c0000 	streq	r0, [ip, -r0]
     c78:	000002ba 			; <UNDEFINED> instruction: 0x000002ba
     c7c:	002c2803 	eoreq	r2, ip, r3, lsl #16
     c80:	0b100000 	bleq	400c88 <_start-0xbfc07378>
     c84:	00525052 	subseq	r5, r2, r2, asr r0
     c88:	002c2903 	eoreq	r2, ip, r3, lsl #18
     c8c:	07140000 	ldreq	r0, [r4, -r0]
     c90:	000003a4 	andeq	r0, r0, r4, lsr #7
     c94:	002c2a03 	eoreq	r2, ip, r3, lsl #20
     c98:	07180000 	ldreq	r0, [r8, -r0]
     c9c:	00000396 	muleq	r0, r6, r3
     ca0:	002c2b03 	eoreq	r2, ip, r3, lsl #22
     ca4:	071c0000 	ldreq	r0, [ip, -r0]
     ca8:	000003b4 			; <UNDEFINED> instruction: 0x000003b4
     cac:	002c2c03 	eoreq	r2, ip, r3, lsl #24
     cb0:	07200000 	streq	r0, [r0, -r0]!
     cb4:	000002b9 			; <UNDEFINED> instruction: 0x000002b9
     cb8:	002c2d03 	eoreq	r2, ip, r3, lsl #26
     cbc:	07240000 	streq	r0, [r4, -r0]!
     cc0:	000003a3 	andeq	r0, r0, r3, lsr #7
     cc4:	002c2e03 	eoreq	r2, ip, r3, lsl #28
     cc8:	07280000 	streq	r0, [r8, -r0]!
     ccc:	00000424 	andeq	r0, r0, r4, lsr #8
     cd0:	056e2f03 	strbeq	r2, [lr, #-3843]!	; 0xfffff0fd
     cd4:	072c0000 	streq	r0, [ip, -r0]!
     cd8:	000002fe 	strdeq	r0, [r0], -lr
     cdc:	002c3003 	eoreq	r3, ip, r3
     ce0:	07d00000 	ldrbeq	r0, [r0, r0]
     ce4:	00000429 	andeq	r0, r0, r9, lsr #8
     ce8:	05833103 	streq	r3, [r3, #259]	; 0x103
     cec:	07d40000 	ldrbeq	r0, [r4, r0]
     cf0:	000002fc 	strdeq	r0, [r0], -ip
     cf4:	002c3203 	eoreq	r3, ip, r3, lsl #4
     cf8:	07e00000 	strbeq	r0, [r0, r0]!
     cfc:	0000042e 	andeq	r0, r0, lr, lsr #8
     d00:	00563303 	subseq	r3, r6, r3, lsl #6
     d04:	07e40000 	strbeq	r0, [r4, r0]!
     d08:	0000031b 	andeq	r0, r0, fp, lsl r3
     d0c:	002c3403 	eoreq	r3, ip, r3, lsl #8
     d10:	0afc0000 	beq	fff00d18 <__bss_end__+0x3fef6290>
     d14:	00000433 	andeq	r0, r0, r3, lsr r4
     d18:	05993503 	ldreq	r3, [r9, #1283]	; 0x503
     d1c:	01000000 	mrseq	r0, (UNDEF: 0)
     d20:	0003670a 	andeq	r6, r3, sl, lsl #14
     d24:	2c360300 	ldccs	3, cr0, [r6], #-0
     d28:	00000000 	andeq	r0, r0, r0
     d2c:	2c040010 	stccs	0, cr0, [r4], {16}
     d30:	6e000000 	cdpvs	0, 0, cr0, cr0, cr0, {0}
     d34:	05000005 	streq	r0, [r0, #-5]
     d38:	00000025 	andeq	r0, r0, r5, lsr #32
     d3c:	5e030028 	cdppl	0, 0, cr0, cr3, cr8, {1}
     d40:	04000005 	streq	r0, [r0], #-5
     d44:	0000002c 	andeq	r0, r0, ip, lsr #32
     d48:	00000583 	andeq	r0, r0, r3, lsl #11
     d4c:	00002505 	andeq	r2, r0, r5, lsl #10
     d50:	03000200 	movweq	r0, #512	; 0x200
     d54:	00000573 	andeq	r0, r0, r3, ror r5
     d58:	00002c04 	andeq	r2, r0, r4, lsl #24
     d5c:	00059900 	andeq	r9, r5, r0, lsl #18
     d60:	00250c00 	eoreq	r0, r5, r0, lsl #24
     d64:	03bf0000 			; <UNDEFINED> instruction: 0x03bf0000
     d68:	05880300 	streq	r0, [r8, #768]	; 0x300
     d6c:	d5080000 	strle	r0, [r8, #-0]
     d70:	03000002 	movweq	r0, #2
     d74:	00046e38 	andeq	r6, r4, r8, lsr lr
     d78:	00690d00 	rsbeq	r0, r9, r0, lsl #26
     d7c:	00250601 	eoreq	r0, r5, r1, lsl #12
     d80:	03050000 	movweq	r0, #20480	; 0x5000
     d84:	c000aa84 	andgt	sl, r0, r4, lsl #21
     d88:	0002ce0e 	andeq	ip, r2, lr, lsl #28
     d8c:	f00e0100 			; <UNDEFINED> instruction: 0xf00e0100
     d90:	70c00096 	smullvc	r0, r0, r6, r0	; <UNPREDICTABLE>
     d94:	01000001 	tsteq	r0, r1
     d98:	02ac0f9c 	adceq	r0, ip, #156, 30	; 0x270
     d9c:	11010000 	mrsne	r0, (UNDEF: 1)
     da0:	00000025 	andeq	r0, r0, r5, lsr #32
     da4:	00749102 	rsbseq	r9, r4, r2, lsl #2
     da8:	0014cf00 	andseq	ip, r4, r0, lsl #30
     dac:	9d000400 	cfstrsls	mvf0, [r0, #-0]
     db0:	04000003 	streq	r0, [r0], #-3
     db4:	00005701 	andeq	r5, r0, r1, lsl #14
     db8:	084a0c00 	stmdaeq	sl, {sl, fp}^
     dbc:	018a0000 	orreq	r0, sl, r0
     dc0:	98600000 	stmdals	r0!, {}^	; <UNPREDICTABLE>
     dc4:	0510c000 	ldreq	ip, [r0, #-0]
     dc8:	04dd0000 	ldrbeq	r0, [sp], #0
     dcc:	00020000 	andeq	r0, r2, r0
     dd0:	d7040210 	smladle	r4, r0, r2, r0
     dd4:	0300000c 	movweq	r0, #12
     dd8:	00000fa5 	andeq	r0, r0, r5, lsr #31
     ddc:	0cde0502 	cfldr64eq	mvdx0, [lr], {2}
     de0:	03000000 	movweq	r0, #0
     de4:	0000067b 	andeq	r0, r0, fp, ror r6
     de8:	0cf30602 	ldcleq	6, cr0, [r3], #8
     dec:	03040000 	movweq	r0, #16384	; 0x4000
     df0:	0000074d 	andeq	r0, r0, sp, asr #14
     df4:	0cde0702 	ldcleq	7, cr0, [lr], {2}
     df8:	030c0000 	movweq	r0, #49152	; 0xc000
     dfc:	00000a1b 	andeq	r0, r0, fp, lsl sl
     e00:	0cde0802 	ldcleq	8, cr0, [lr], {2}
     e04:	03100000 	tsteq	r0, #0
     e08:	00000680 	andeq	r0, r0, r0, lsl #13
     e0c:	0d080902 	vstreq.16	s0, [r8, #-4]	; <UNPREDICTABLE>
     e10:	03140000 	tsteq	r4, #0
     e14:	000008c4 	andeq	r0, r0, r4, asr #17
     e18:	0cde0a02 	vldmiaeq	lr, {s1-s2}
     e1c:	03180000 	tsteq	r8, #0
     e20:	00000e4d 	andeq	r0, r0, sp, asr #28
     e24:	0cde0b02 	vldmiaeq	lr, {d16}
     e28:	031c0000 	tsteq	ip, #0
     e2c:	0000089c 	muleq	r0, ip, r8
     e30:	0cde0c02 	ldcleq	12, cr0, [lr], {2}
     e34:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
     e38:	00000fc1 	andeq	r0, r0, r1, asr #31
     e3c:	0cde0d02 	ldcleq	13, cr0, [lr], {2}
     e40:	03240000 			; <UNDEFINED> instruction: 0x03240000
     e44:	00000b14 	andeq	r0, r0, r4, lsl fp
     e48:	0cde0e02 	ldcleq	14, cr0, [lr], {2}
     e4c:	03280000 			; <UNDEFINED> instruction: 0x03280000
     e50:	00000ba9 	andeq	r0, r0, r9, lsr #23
     e54:	0cde0f02 	ldcleq	15, cr0, [lr], {2}
     e58:	032c0000 			; <UNDEFINED> instruction: 0x032c0000
     e5c:	000004ad 	andeq	r0, r0, sp, lsr #9
     e60:	0cde1002 	ldcleq	0, cr1, [lr], {2}
     e64:	03300000 	teqeq	r0, #0
     e68:	00000685 	andeq	r0, r0, r5, lsl #13
     e6c:	0cf31102 	ldfeqe	f1, [r3], #8
     e70:	03340000 	teqeq	r4, #0
     e74:	000004fd 	strdeq	r0, [r0], -sp
     e78:	0cde1202 	lfmeq	f1, 2, [lr], {2}
     e7c:	033c0000 	teqeq	ip, #0
     e80:	00000ca9 	andeq	r0, r0, r9, lsr #25
     e84:	0cde1302 	ldcleq	3, cr1, [lr], {2}
     e88:	03400000 	movteq	r0, #0
     e8c:	00000a53 	andeq	r0, r0, r3, asr sl
     e90:	0cde1402 	cfldrdeq	mvd1, [lr], {2}
     e94:	03440000 	movteq	r0, #16384	; 0x4000
     e98:	00000d2d 	andeq	r0, r0, sp, lsr #26
     e9c:	0cde1502 	cfldr64eq	mvdx1, [lr], {2}
     ea0:	03480000 	movteq	r0, #32768	; 0x8000
     ea4:	0000068a 	andeq	r0, r0, sl, lsl #13
     ea8:	0d1d1602 	ldceq	6, cr1, [sp, #-8]
     eac:	034c0000 	movteq	r0, #49152	; 0xc000
     eb0:	00000f80 	andeq	r0, r0, r0, lsl #31
     eb4:	0cde1702 	ldcleq	7, cr1, [lr], {2}
     eb8:	03800000 	orreq	r0, r0, #0
     ebc:	00000997 	muleq	r0, r7, r9
     ec0:	0cde1802 	ldcleq	8, cr1, [lr], {2}
     ec4:	03840000 	orreq	r0, r4, #0
     ec8:	000009a1 	andeq	r0, r0, r1, lsr #19
     ecc:	0cde1902 			; <UNDEFINED> instruction: 0x0cde1902
     ed0:	03880000 	orreq	r0, r8, #0
     ed4:	00000671 	andeq	r0, r0, r1, ror r6
     ed8:	0cde1a02 	vldmiaeq	lr, {s3-s4}
     edc:	038c0000 	orreq	r0, ip, #0
     ee0:	00000835 	andeq	r0, r0, r5, lsr r8
     ee4:	0cde1b02 	vldmiaeq	lr, {d17}
     ee8:	03900000 	orrseq	r0, r0, #0
     eec:	00000d26 	andeq	r0, r0, r6, lsr #26
     ef0:	0cde1c02 	ldcleq	12, cr1, [lr], {2}
     ef4:	03940000 	orrseq	r0, r4, #0
     ef8:	000005c5 	andeq	r0, r0, r5, asr #11
     efc:	0cde1d02 	ldcleq	13, cr1, [lr], {2}
     f00:	03980000 	orrseq	r0, r8, #0
     f04:	00000b1e 	andeq	r0, r0, lr, lsl fp
     f08:	0cde1e02 	ldcleq	14, cr1, [lr], {2}
     f0c:	039c0000 	orrseq	r0, ip, #0
     f10:	000007e9 	andeq	r0, r0, r9, ror #15
     f14:	0cde1f02 	ldcleq	15, cr1, [lr], {2}
     f18:	03a00000 	moveq	r0, #0
     f1c:	0000100f 	andeq	r1, r0, pc
     f20:	0cde2002 	ldcleq	0, cr2, [lr], {2}
     f24:	03a40000 			; <UNDEFINED> instruction: 0x03a40000
     f28:	0000068f 	andeq	r0, r0, pc, lsl #13
     f2c:	0d322102 	ldfeqs	f2, [r2, #-8]!
     f30:	03a80000 			; <UNDEFINED> instruction: 0x03a80000
     f34:	00000f3f 	andeq	r0, r0, pc, lsr pc
     f38:	0cde2202 	lfmeq	f2, 2, [lr], {2}
     f3c:	03c00000 	biceq	r0, r0, #0
     f40:	000005e9 	andeq	r0, r0, r9, ror #11
     f44:	0cde2302 	ldcleq	3, cr2, [lr], {2}
     f48:	03c40000 	biceq	r0, r4, #0
     f4c:	000005a0 	andeq	r0, r0, r0, lsr #11
     f50:	0cde2402 	cfldrdeq	mvd2, [lr], {2}
     f54:	03c80000 	biceq	r0, r8, #0
     f58:	00000f29 	andeq	r0, r0, r9, lsr #30
     f5c:	0cde2502 	cfldr64eq	mvdx2, [lr], {2}
     f60:	03cc0000 	biceq	r0, ip, #0
     f64:	00000bbb 			; <UNDEFINED> instruction: 0x00000bbb
     f68:	0cde2602 	ldcleq	6, cr2, [lr], {2}
     f6c:	03d00000 	bicseq	r0, r0, #0
     f70:	00000a5b 	andeq	r0, r0, fp, asr sl
     f74:	0cde2702 	ldcleq	7, cr2, [lr], {2}
     f78:	03d40000 	bicseq	r0, r4, #0
     f7c:	00000bb2 			; <UNDEFINED> instruction: 0x00000bb2
     f80:	0cde2802 	ldcleq	8, cr2, [lr], {2}
     f84:	03d80000 	bicseq	r0, r8, #0
     f88:	00000694 	muleq	r0, r4, r6
     f8c:	0d472902 	vstreq.16	s5, [r7, #-4]	; <UNPREDICTABLE>
     f90:	04dc0000 	ldrbeq	r0, [ip], #0
     f94:	000004f3 	strdeq	r0, [r0], -r3
     f98:	0cde2a02 	vldmiaeq	lr, {s5-s6}
     f9c:	01000000 	mrseq	r0, (UNDEF: 0)
     fa0:	000b5f04 	andeq	r5, fp, r4, lsl #30
     fa4:	de2b0200 	cdple	2, 2, cr0, cr11, cr0, {0}
     fa8:	0400000c 	streq	r0, [r0], #-12
     fac:	0e5d0401 	cdpeq	4, 5, cr0, cr13, cr1, {0}
     fb0:	2c020000 	stccs	0, cr0, [r2], {-0}
     fb4:	00000cde 	ldrdeq	r0, [r0], -lr
     fb8:	95040108 	strls	r0, [r4, #-264]	; 0xfffffef8
     fbc:	0200000c 	andeq	r0, r0, #12
     fc0:	000cde2d 	andeq	sp, ip, sp, lsr #28
     fc4:	04010c00 	streq	r0, [r1], #-3072	; 0xfffff400
     fc8:	00000bfc 	strdeq	r0, [r0], -ip
     fcc:	0cde2e02 	ldcleq	14, cr2, [lr], {2}
     fd0:	01100000 	tsteq	r0, r0
     fd4:	000d7f04 	andeq	r7, sp, r4, lsl #30
     fd8:	de2f0200 	cdple	2, 2, cr0, cr15, cr0, {0}
     fdc:	1400000c 	strne	r0, [r0], #-12
     fe0:	06990401 	ldreq	r0, [r9], r1, lsl #8
     fe4:	30020000 	andcc	r0, r2, r0
     fe8:	00000d5c 	andeq	r0, r0, ip, asr sp
     fec:	18040118 	stmdane	r4, {r3, r4, r8}
     ff0:	0200000f 	andeq	r0, r0, #15
     ff4:	000cde31 	andeq	sp, ip, r1, lsr lr
     ff8:	04014000 	streq	r4, [r1], #-0
     ffc:	00000b05 	andeq	r0, r0, r5, lsl #22
    1000:	0cde3202 	lfmeq	f3, 2, [lr], {2}
    1004:	01440000 	mrseq	r0, (UNDEF: 68)
    1008:	00069e04 	andeq	r9, r6, r4, lsl #28
    100c:	71330200 	teqvc	r3, r0, lsl #4
    1010:	4800000d 	stmdami	r0, {r0, r2, r3}
    1014:	0feb0401 	svceq	0x00eb0401
    1018:	34020000 	strcc	r0, [r2], #-0
    101c:	00000cde 	ldrdeq	r0, [r0], -lr
    1020:	65040180 	strvs	r0, [r4, #-384]	; 0xfffffe80
    1024:	02000006 	andeq	r0, r0, #6
    1028:	000cde35 	andeq	sp, ip, r5, lsr lr
    102c:	04018400 	streq	r8, [r1], #-1024	; 0xfffffc00
    1030:	00000c07 	andeq	r0, r0, r7, lsl #24
    1034:	0cde3602 	ldcleq	6, cr3, [lr], {2}
    1038:	01880000 	orreq	r0, r8, r0
    103c:	000f1d04 	andeq	r1, pc, r4, lsl #26
    1040:	de370200 	cdple	2, 3, cr0, cr7, cr0, {0}
    1044:	8c00000c 	stchi	0, cr0, [r0], {12}
    1048:	08e60401 	stmiaeq	r6!, {r0, sl}^
    104c:	38020000 	stmdacc	r2, {}	; <UNPREDICTABLE>
    1050:	00000cde 	ldrdeq	r0, [r0], -lr
    1054:	dd040190 	stfles	f0, [r4, #-576]	; 0xfffffdc0
    1058:	02000005 	andeq	r0, r0, #5
    105c:	000cde39 	andeq	sp, ip, r9, lsr lr
    1060:	04019400 	streq	r9, [r1], #-1024	; 0xfffffc00
    1064:	00000bf0 	strdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    1068:	0cde3a02 	vldmiaeq	lr, {s7-s8}
    106c:	01980000 	orrseq	r0, r8, r0
    1070:	0009bb04 	andeq	fp, r9, r4, lsl #22
    1074:	de3b0200 	cdple	2, 3, cr0, cr11, cr0, {0}
    1078:	9c00000c 	stcls	0, cr0, [r0], {12}
    107c:	06130401 	ldreq	r0, [r3], -r1, lsl #8
    1080:	3c020000 	stccc	0, cr0, [r2], {-0}
    1084:	00000cde 	ldrdeq	r0, [r0], -lr
    1088:	b90401a0 	stmdblt	r4, {r5, r7, r8}
    108c:	02000009 	andeq	r0, r0, #9
    1090:	000cde3d 	andeq	sp, ip, sp, lsr lr
    1094:	0401a400 	streq	sl, [r1], #-1024	; 0xfffffc00
    1098:	000006a3 	andeq	r0, r0, r3, lsr #13
    109c:	0d863e02 	stceq	14, cr3, [r6, #8]
    10a0:	01a80000 			; <UNDEFINED> instruction: 0x01a80000
    10a4:	0007c504 	andeq	ip, r7, r4, lsl #10
    10a8:	de3f0200 	cdple	2, 3, cr0, cr15, cr0, {0}
    10ac:	0000000c 	andeq	r0, r0, ip
    10b0:	0a840402 	beq	fe1020c0 <__bss_end__+0x3e0f7638>
    10b4:	40020000 	andmi	r0, r2, r0
    10b8:	00000cde 	ldrdeq	r0, [r0], -lr
    10bc:	02040204 	andeq	r0, r4, #4, 4	; 0x40000000
    10c0:	0200000e 	andeq	r0, r0, #14
    10c4:	000cde41 	andeq	sp, ip, r1, asr #28
    10c8:	04020800 	streq	r0, [r2], #-2048	; 0xfffff800
    10cc:	000004df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    10d0:	0cde4202 	lfmeq	f4, 2, [lr], {2}
    10d4:	020c0000 	andeq	r0, ip, #0
    10d8:	00048504 	andeq	r8, r4, r4, lsl #10
    10dc:	de430200 	cdple	2, 4, cr0, cr3, cr0, {0}
    10e0:	1000000c 	andne	r0, r0, ip
    10e4:	0e8c0402 	cdpeq	4, 8, cr0, cr12, cr2, {0}
    10e8:	44020000 	strmi	r0, [r2], #-0
    10ec:	00000cde 	ldrdeq	r0, [r0], -lr
    10f0:	ac040214 	sfmge	f0, 4, [r4], {20}
    10f4:	02000005 	andeq	r0, r0, #5
    10f8:	000cde45 	andeq	sp, ip, r5, asr #28
    10fc:	04021800 	streq	r1, [r2], #-2048	; 0xfffff800
    1100:	00000873 	andeq	r0, r0, r3, ror r8
    1104:	0cde4602 	ldcleq	6, cr4, [lr], {2}
    1108:	021c0000 	andseq	r0, ip, #0
    110c:	000cff04 	andeq	pc, ip, r4, lsl #30
    1110:	de470200 	cdple	2, 4, cr0, cr7, cr0, {0}
    1114:	2000000c 	andcs	r0, r0, ip
    1118:	04470402 	strbeq	r0, [r7], #-1026	; 0xfffffbfe
    111c:	48020000 	stmdami	r2, {}	; <UNPREDICTABLE>
    1120:	00000cde 	ldrdeq	r0, [r0], -lr
    1124:	d3040224 	movwle	r0, #16932	; 0x4224
    1128:	02000007 	andeq	r0, r0, #7
    112c:	000d8649 	andeq	r8, sp, r9, asr #12
    1130:	04022800 	streq	r2, [r2], #-2048	; 0xfffff800
    1134:	000005cf 	andeq	r0, r0, pc, asr #11
    1138:	0cde4a02 	vldmiaeq	lr, {s9-s10}
    113c:	02800000 	addeq	r0, r0, #0
    1140:	0008b604 	andeq	fp, r8, r4, lsl #12
    1144:	de4b0200 	cdple	2, 4, cr0, cr11, cr0, {0}
    1148:	8400000c 	strhi	r0, [r0], #-12
    114c:	0c3a0402 	cfldrseq	mvf0, [sl], #-8
    1150:	4c020000 	stcmi	0, cr0, [r2], {-0}
    1154:	00000cde 	ldrdeq	r0, [r0], -lr
    1158:	58040288 	stmdapl	r4, {r3, r7, r9}
    115c:	0200000f 	andeq	r0, r0, #15
    1160:	000cde4d 	andeq	sp, ip, sp, asr #28
    1164:	04028c00 	streq	r8, [r2], #-3072	; 0xfffff400
    1168:	000009e5 	andeq	r0, r0, r5, ror #19
    116c:	0cde4e02 	ldcleq	14, cr4, [lr], {2}
    1170:	02900000 	addseq	r0, r0, #0
    1174:	000cd804 	andeq	sp, ip, r4, lsl #16
    1178:	de4f0200 	cdple	2, 4, cr0, cr15, cr0, {0}
    117c:	9400000c 	strls	r0, [r0], #-12
    1180:	103f0402 	eorsne	r0, pc, r2, lsl #8
    1184:	50020000 	andpl	r0, r2, r0
    1188:	00000cde 	ldrdeq	r0, [r0], -lr
    118c:	b4040298 	strlt	r0, [r4], #-664	; 0xfffffd68
    1190:	02000006 	andeq	r0, r0, #6
    1194:	000cde51 	andeq	sp, ip, r1, asr lr
    1198:	04029c00 	streq	r9, [r2], #-3072	; 0xfffff400
    119c:	000004b5 			; <UNDEFINED> instruction: 0x000004b5
    11a0:	0d9b5202 	lfmeq	f5, 4, [fp, #8]
    11a4:	02a00000 	adceq	r0, r0, #0
    11a8:	000e9a04 	andeq	r9, lr, r4, lsl #20
    11ac:	de530200 	cdple	2, 5, cr0, cr3, cr0, {0}
    11b0:	0000000c 	andeq	r0, r0, ip
    11b4:	0eaa0403 	cdpeq	4, 10, cr0, cr10, cr3, {0}
    11b8:	54020000 	strpl	r0, [r2], #-0
    11bc:	00000cde 	ldrdeq	r0, [r0], -lr
    11c0:	c8040304 	stmdagt	r4, {r2, r8, r9}
    11c4:	0200000d 	andeq	r0, r0, #13
    11c8:	000cde55 	andeq	sp, ip, r5, asr lr
    11cc:	04030800 	streq	r0, [r3], #-2048	; 0xfffff800
    11d0:	00000475 	andeq	r0, r0, r5, ror r4
    11d4:	0cde5602 	ldcleq	6, cr5, [lr], {2}
    11d8:	030c0000 	movweq	r0, #49152	; 0xc000
    11dc:	000b3804 	andeq	r3, fp, r4, lsl #16
    11e0:	de570200 	cdple	2, 5, cr0, cr7, cr0, {0}
    11e4:	1000000c 	andne	r0, r0, ip
    11e8:	0e1a0403 	cfmulseq	mvf0, mvf10, mvf3
    11ec:	58020000 	stmdapl	r2, {}	; <UNPREDICTABLE>
    11f0:	00000cde 	ldrdeq	r0, [r0], -lr
    11f4:	51040314 	tstpl	r4, r4, lsl r3
    11f8:	0200000d 	andeq	r0, r0, #13
    11fc:	000cde59 	andeq	sp, ip, r9, asr lr
    1200:	04031800 	streq	r1, [r3], #-2048	; 0xfffff800
    1204:	00001018 	andeq	r1, r0, r8, lsl r0
    1208:	0cde5a02 	vldmiaeq	lr, {s11-s12}
    120c:	031c0000 	tsteq	ip, #0
    1210:	00070004 	andeq	r0, r7, r4
    1214:	de5b0200 	cdple	2, 5, cr0, cr11, cr0, {0}
    1218:	2000000c 	andcs	r0, r0, ip
    121c:	09d30403 	ldmibeq	r3, {r0, r1, sl}^
    1220:	5c020000 	stcpl	0, cr0, [r2], {-0}
    1224:	00000cde 	ldrdeq	r0, [r0], -lr
    1228:	bb040324 	bllt	101ec0 <_start-0xbff06140>
    122c:	02000004 	andeq	r0, r0, #4
    1230:	000d865d 	andeq	r8, sp, sp, asr r6
    1234:	04032800 	streq	r2, [r3], #-2048	; 0xfffff800
    1238:	00000a67 	andeq	r0, r0, r7, ror #20
    123c:	0cde5e02 	ldcleq	14, cr5, [lr], {2}
    1240:	03800000 	orreq	r0, r0, #0
    1244:	000d8a04 	andeq	r8, sp, r4, lsl #20
    1248:	de5f0200 	cdple	2, 5, cr0, cr15, cr0, {0}
    124c:	8400000c 	strhi	r0, [r0], #-12
    1250:	0c560403 	cfldrdeq	mvd0, [r6], {3}
    1254:	60020000 	andvs	r0, r2, r0
    1258:	00000cde 	ldrdeq	r0, [r0], -lr
    125c:	70040388 	andvc	r0, r4, r8, lsl #7
    1260:	0200000f 	andeq	r0, r0, #15
    1264:	000cde61 	andeq	sp, ip, r1, ror #28
    1268:	04038c00 	streq	r8, [r3], #-3072	; 0xfffff400
    126c:	00000655 	andeq	r0, r0, r5, asr r6
    1270:	0cde6202 	lfmeq	f6, 2, [lr], {2}
    1274:	03900000 	orrseq	r0, r0, #0
    1278:	0008fe04 	andeq	pc, r8, r4, lsl #28
    127c:	de630200 	cdple	2, 6, cr0, cr3, cr0, {0}
    1280:	9400000c 	strls	r0, [r0], #-12
    1284:	081f0403 	ldmdaeq	pc, {r0, r1, sl}	; <UNPREDICTABLE>
    1288:	64020000 	strvs	r0, [r2], #-0
    128c:	00000cde 	ldrdeq	r0, [r0], -lr
    1290:	f5040398 			; <UNDEFINED> instruction: 0xf5040398
    1294:	0200000a 	andeq	r0, r0, #10
    1298:	000cde65 	andeq	sp, ip, r5, ror #28
    129c:	04039c00 	streq	r9, [r3], #-3072	; 0xfffff400
    12a0:	000004c1 	andeq	r0, r0, r1, asr #9
    12a4:	0d9b6602 	ldceq	6, cr6, [fp, #8]
    12a8:	03a00000 	moveq	r0, #0
    12ac:	00055804 	andeq	r5, r5, r4, lsl #16
    12b0:	de670200 	cdple	2, 6, cr0, cr7, cr0, {0}
    12b4:	0000000c 	andeq	r0, r0, ip
    12b8:	09480404 	stmdbeq	r8, {r2, sl}^
    12bc:	68020000 	stmdavs	r2, {}	; <UNPREDICTABLE>
    12c0:	00000cde 	ldrdeq	r0, [r0], -lr
    12c4:	36040404 	strcc	r0, [r4], -r4, lsl #8
    12c8:	02000010 	andeq	r0, r0, #16
    12cc:	000cde69 	andeq	sp, ip, r9, ror #28
    12d0:	04040800 	streq	r0, [r4], #-2048	; 0xfffff800
    12d4:	00000a45 	andeq	r0, r0, r5, asr #20
    12d8:	0cde6a02 	vldmiaeq	lr, {s13-s14}
    12dc:	040c0000 	streq	r0, [ip], #-0
    12e0:	000d7104 	andeq	r7, sp, r4, lsl #2
    12e4:	de6b0200 	cdple	2, 6, cr0, cr11, cr0, {0}
    12e8:	1000000c 	andne	r0, r0, ip
    12ec:	0bd00404 	bleq	ff402304 <__bss_end__+0x3f3f787c>
    12f0:	6c020000 	stcvs	0, cr0, [r2], {-0}
    12f4:	00000cde 	ldrdeq	r0, [r0], -lr
    12f8:	b2040414 	andlt	r0, r4, #20, 8	; 0x14000000
    12fc:	0200000d 	andeq	r0, r0, #13
    1300:	000cde6d 	andeq	sp, ip, sp, ror #28
    1304:	04041800 	streq	r1, [r4], #-2048	; 0xfffff800
    1308:	0000090e 	andeq	r0, r0, lr, lsl #18
    130c:	0cde6e02 	ldcleq	14, cr6, [lr], {2}
    1310:	041c0000 	ldreq	r0, [ip], #-0
    1314:	000e2a04 	andeq	r2, lr, r4, lsl #20
    1318:	de6f0200 	cdple	2, 6, cr0, cr15, cr0, {0}
    131c:	2000000c 	andcs	r0, r0, ip
    1320:	04c70404 	strbeq	r0, [r7], #1028	; 0x404
    1324:	70020000 	andvc	r0, r2, r0
    1328:	00000db0 			; <UNDEFINED> instruction: 0x00000db0
    132c:	00040424 	andeq	r0, r4, r4, lsr #8
    1330:	02000008 	andeq	r0, r0, #8
    1334:	000cde71 	andeq	sp, ip, r1, ror lr
    1338:	04080000 	streq	r0, [r8], #-0
    133c:	00000a3c 	andeq	r0, r0, ip, lsr sl
    1340:	0cde7202 	lfmeq	f7, 2, [lr], {2}
    1344:	08040000 	stmdaeq	r4, {}	; <UNPREDICTABLE>
    1348:	000faa04 	andeq	sl, pc, r4, lsl #20
    134c:	de730200 	cdple	2, 7, cr0, cr3, cr0, {0}
    1350:	0800000c 	stmdaeq	r0, {r2, r3}
    1354:	0a240408 	beq	90237c <_start-0xbf705c84>
    1358:	74020000 	strvc	r0, [r2], #-0
    135c:	00000cde 	ldrdeq	r0, [r0], -lr
    1360:	cd04080c 	stcgt	8, cr0, [r4, #-48]	; 0xffffffd0
    1364:	02000004 	andeq	r0, r0, #4
    1368:	000dc575 	andeq	ip, sp, r5, ror r5
    136c:	04081000 	streq	r1, [r8], #-0
    1370:	00000c23 	andeq	r0, r0, r3, lsr #24
    1374:	0cde7602 	ldcleq	6, cr7, [lr], {2}
    1378:	08200000 	stmdaeq	r0!, {}	; <UNPREDICTABLE>
    137c:	0007bc04 	andeq	fp, r7, r4, lsl #24
    1380:	de770200 	cdple	2, 7, cr0, cr7, cr0, {0}
    1384:	2400000c 	strcs	r0, [r0], #-12
    1388:	0f870408 	svceq	0x00870408
    138c:	78020000 	stmdavc	r2, {}	; <UNPREDICTABLE>
    1390:	00000cde 	ldrdeq	r0, [r0], -lr
    1394:	a0040828 	andge	r0, r4, r8, lsr #16
    1398:	0200000a 	andeq	r0, r0, #10
    139c:	000cde79 	andeq	sp, ip, r9, ror lr
    13a0:	04082c00 	streq	r2, [r8], #-3072	; 0xfffff400
    13a4:	00000c7f 	andeq	r0, r0, pc, ror ip
    13a8:	0cde7a02 	vldmiaeq	lr, {s15-s16}
    13ac:	08300000 	ldmdaeq	r0!, {}	; <UNPREDICTABLE>
    13b0:	00064c04 	andeq	r4, r6, r4, lsl #24
    13b4:	de7b0200 	cdple	2, 7, cr0, cr11, cr0, {0}
    13b8:	3400000c 	strcc	r0, [r0], #-12
    13bc:	0df20408 	cfldrdeq	mvd0, [r2, #32]!
    13c0:	7c020000 	stcvc	0, cr0, [r2], {-0}
    13c4:	00000cde 	ldrdeq	r0, [r0], -lr
    13c8:	55040838 	strpl	r0, [r4, #-2104]	; 0xfffff7c8
    13cc:	02000009 	andeq	r0, r0, #9
    13d0:	000cde7d 	andeq	sp, ip, sp, ror lr
    13d4:	04083c00 	streq	r3, [r8], #-3072	; 0xfffff400
    13d8:	000004d3 	ldrdeq	r0, [r0], -r3
    13dc:	0dda7e02 	ldcleq	14, cr7, [sl, #8]
    13e0:	08400000 	stmdaeq	r0, {}^	; <UNPREDICTABLE>
    13e4:	000aaa04 	andeq	sl, sl, r4, lsl #20
    13e8:	de7f0200 	cdple	2, 7, cr0, cr15, cr0, {0}
    13ec:	8000000c 	andhi	r0, r0, ip
    13f0:	0f9b0408 	svceq	0x009b0408
    13f4:	80020000 	andhi	r0, r2, r0
    13f8:	00000cde 	ldrdeq	r0, [r0], -lr
    13fc:	b2040884 	andlt	r0, r4, #132, 16	; 0x840000
    1400:	0200000c 	andeq	r0, r0, #12
    1404:	000cde81 	andeq	sp, ip, r1, lsl #29
    1408:	04088800 	streq	r8, [r8], #-2048	; 0xfffff800
    140c:	00000f91 	muleq	r0, r1, pc	; <UNPREDICTABLE>
    1410:	0cde8202 	lfmeq	f0, 3, [lr], {2}
    1414:	088c0000 	stmeq	ip, {}	; <UNPREDICTABLE>
    1418:	000b5604 	andeq	r5, fp, r4, lsl #12
    141c:	de830200 	cdple	2, 8, cr0, cr3, cr0, {0}
    1420:	9000000c 	andls	r0, r0, ip
    1424:	0b0d0408 	bleq	34244c <_start-0xbfcc5bb4>
    1428:	84020000 	strhi	r0, [r2], #-0
    142c:	00000cde 	ldrdeq	r0, [r0], -lr
    1430:	28040894 	stmdacs	r4, {r2, r4, r7, fp}
    1434:	0200000b 	andeq	r0, r0, #11
    1438:	000cde85 	andeq	sp, ip, r5, lsl #29
    143c:	04089800 	streq	r9, [r8], #-2048	; 0xfffff800
    1440:	00000e10 	andeq	r0, r0, r0, lsl lr
    1444:	0cde8602 	ldcleq	6, cr8, [lr], {2}
    1448:	089c0000 	ldmeq	ip, {}	; <UNPREDICTABLE>
    144c:	000abf04 	andeq	fp, sl, r4, lsl #30
    1450:	de870200 	cdple	2, 8, cr0, cr7, cr0, {0}
    1454:	a000000c 	andge	r0, r0, ip
    1458:	06c20408 	strbeq	r0, [r2], r8, lsl #8
    145c:	88020000 	stmdahi	r2, {}	; <UNPREDICTABLE>
    1460:	00000cde 	ldrdeq	r0, [r0], -lr
    1464:	d90408a4 	stmdble	r4, {r2, r5, r7, fp}
    1468:	02000004 	andeq	r0, r0, #4
    146c:	000d3289 	andeq	r3, sp, r9, lsl #5
    1470:	0408a800 	streq	sl, [r8], #-2048	; 0xfffff800
    1474:	0000096e 	andeq	r0, r0, lr, ror #18
    1478:	0cde8a02 	vldmiaeq	lr, {s17-s18}
    147c:	08c00000 	stmiaeq	r0, {}^	; <UNPREDICTABLE>
    1480:	00093c04 	andeq	r3, r9, r4, lsl #24
    1484:	de8b0200 	cdple	2, 8, cr0, cr11, cr0, {0}
    1488:	c400000c 	strgt	r0, [r0], #-12
    148c:	05ba0408 	ldreq	r0, [sl, #1032]!	; 0x408
    1490:	8c020000 	stchi	0, cr0, [r2], {-0}
    1494:	00000cde 	ldrdeq	r0, [r0], -lr
    1498:	ba0408c8 	blt	1037c0 <_start-0xbff04840>
    149c:	0200000e 	andeq	r0, r0, #14
    14a0:	000cde8d 	andeq	sp, ip, sp, lsl #29
    14a4:	0408cc00 	streq	ip, [r8], #-3072	; 0xfffff400
    14a8:	00000891 	muleq	r0, r1, r8
    14ac:	0cde8e02 	ldcleq	14, cr8, [lr], {2}
    14b0:	08d00000 	ldmeq	r0, {}^	; <UNPREDICTABLE>
    14b4:	000f3404 	andeq	r3, pc, r4, lsl #8
    14b8:	de8f0200 	cdple	2, 8, cr0, cr15, cr0, {0}
    14bc:	d400000c 	strle	r0, [r0], #-12
    14c0:	0c9c0408 	cfldrseq	mvf0, [ip], {8}
    14c4:	90020000 	andls	r0, r2, r0
    14c8:	00000cde 	ldrdeq	r0, [r0], -lr
    14cc:	0d0408d8 	stceq	8, cr0, [r4, #-864]	; 0xfffffca0
    14d0:	0200000a 	andeq	r0, r0, #10
    14d4:	000cde91 	muleq	ip, r1, lr
    14d8:	0408dc00 	streq	sp, [r8], #-3072	; 0xfffff400
    14dc:	00000efc 	strdeq	r0, [r0], -ip
    14e0:	0cde9202 	lfmeq	f1, 3, [lr], {2}
    14e4:	08e00000 	stmiaeq	r0!, {}^	; <UNPREDICTABLE>
    14e8:	000ccc04 	andeq	ip, ip, r4, lsl #24
    14ec:	de930200 	cdple	2, 9, cr0, cr3, cr0, {0}
    14f0:	e400000c 	str	r0, [r0], #-12
    14f4:	07f30408 	ldrbeq	r0, [r3, r8, lsl #8]!
    14f8:	94020000 	strls	r0, [r2], #-0
    14fc:	00000cde 	ldrdeq	r0, [r0], -lr
    1500:	770408e8 	strvc	r0, [r4, -r8, ror #17]
    1504:	0200000a 	andeq	r0, r0, #10
    1508:	000cde95 	muleq	ip, r5, lr
    150c:	0408ec00 	streq	lr, [r8], #-3072	; 0xfffff400
    1510:	00000600 	andeq	r0, r0, r0, lsl #12
    1514:	0cde9602 	ldcleq	6, cr9, [lr], {2}
    1518:	08f00000 	ldmeq	r0!, {}^	; <UNPREDICTABLE>
    151c:	000ec504 	andeq	ip, lr, r4, lsl #10
    1520:	de970200 	cdple	2, 9, cr0, cr7, cr0, {0}
    1524:	f400000c 	vst4.8	{d0-d3}, [r0], ip
    1528:	05340408 	ldreq	r0, [r4, #-1032]!	; 0xfffffbf8
    152c:	98020000 	stmdals	r2, {}	; <UNPREDICTABLE>
    1530:	00000cde 	ldrdeq	r0, [r0], -lr
    1534:	260408f8 			; <UNDEFINED> instruction: 0x260408f8
    1538:	02000007 	andeq	r0, r0, #7
    153c:	000cde99 	muleq	ip, r9, lr
    1540:	0408fc00 	streq	pc, [r8], #-3072	; 0xfffff400
    1544:	00000ee3 	andeq	r0, r0, r3, ror #29
    1548:	0cde9a02 	vldmiaeq	lr, {s19-s20}
    154c:	09000000 	stmdbeq	r0, {}	; <UNPREDICTABLE>
    1550:	00100504 	andseq	r0, r0, r4, lsl #10
    1554:	de9b0200 	cdple	2, 9, cr0, cr11, cr0, {0}
    1558:	0400000c 	streq	r0, [r0], #-12
    155c:	082f0409 	stmdaeq	pc!, {r0, r3, sl}	; <UNPREDICTABLE>
    1560:	9c020000 	stcls	0, cr0, [r2], {-0}
    1564:	00000d08 	andeq	r0, r0, r8, lsl #26
    1568:	3e040908 	vmlacc.f16	s0, s8, s16	; <UNPREDICTABLE>
    156c:	02000008 	andeq	r0, r0, #8
    1570:	000cde9d 	muleq	ip, sp, lr
    1574:	04090c00 	streq	r0, [r9], #-3072	; 0xfffff400
    1578:	000004ed 	andeq	r0, r0, sp, ror #9
    157c:	0d089e02 	stceq	14, cr9, [r8, #-8]
    1580:	09100000 	ldmdbeq	r0, {}	; <UNPREDICTABLE>
    1584:	000d3704 	andeq	r3, sp, r4, lsl #14
    1588:	de9f0200 	cdple	2, 9, cr0, cr15, cr0, {0}
    158c:	1400000c 	strne	r0, [r0], #-12
    1590:	0bc60409 	bleq	ff1825bc <__bss_end__+0x3f177b34>
    1594:	a0020000 	andge	r0, r2, r0
    1598:	00000cde 	ldrdeq	r0, [r0], -lr
    159c:	66040918 			; <UNDEFINED> instruction: 0x66040918
    15a0:	0200000f 	andeq	r0, r0, #15
    15a4:	000cdea1 	andeq	sp, ip, r1, lsr #29
    15a8:	04091c00 	streq	r1, [r9], #-3072	; 0xfffff400
    15ac:	000008cc 	andeq	r0, r0, ip, asr #17
    15b0:	0cdea202 	lfmeq	f2, 3, [lr], {2}
    15b4:	09200000 	stmdbeq	r0!, {}	; <UNPREDICTABLE>
    15b8:	0006f604 	andeq	pc, r6, r4, lsl #12
    15bc:	dea30200 	cdple	2, 10, cr0, cr3, cr0, {0}
    15c0:	2400000c 	strcs	r0, [r0], #-12
    15c4:	0bd80409 	bleq	ff6025f0 <__bss_end__+0x3f5f7b68>
    15c8:	a4020000 	strge	r0, [r2], #-0
    15cc:	00000cde 	ldrdeq	r0, [r0], -lr
    15d0:	cb040928 	blgt	103a78 <_start-0xbff04588>
    15d4:	02000006 	andeq	r0, r0, #6
    15d8:	000cdea5 	andeq	sp, ip, r5, lsr #29
    15dc:	04092c00 	streq	r2, [r9], #-3072	; 0xfffff400
    15e0:	00000d43 	andeq	r0, r0, r3, asr #26
    15e4:	0cdea602 	ldcleq	6, cr10, [lr], {2}
    15e8:	09300000 	ldmdbeq	r0!, {}	; <UNPREDICTABLE>
    15ec:	00058504 	andeq	r8, r5, r4, lsl #10
    15f0:	dea70200 	cdple	2, 10, cr0, cr7, cr0, {0}
    15f4:	3400000c 	strcc	r0, [r0], #-12
    15f8:	05f40409 	ldrbeq	r0, [r4, #1033]!	; 0x409
    15fc:	a8020000 	stmdage	r2, {}	; <UNPREDICTABLE>
    1600:	00000def 	andeq	r0, r0, pc, ror #27
    1604:	d9040938 	stmdble	r4, {r3, r4, r5, r8, fp}
    1608:	0200000a 	andeq	r0, r0, #10
    160c:	000cdea9 	andeq	sp, ip, r9, lsr #29
    1610:	04098000 	streq	r8, [r9], #-0
    1614:	00000de6 	andeq	r0, r0, r6, ror #27
    1618:	0cdeaa02 	vldmiaeq	lr, {s21-s22}
    161c:	09840000 	stmibeq	r4, {}	; <UNPREDICTABLE>
    1620:	00074104 	andeq	r4, r7, r4, lsl #2
    1624:	deab0200 	cdple	2, 10, cr0, cr11, cr0, {0}
    1628:	8800000c 	stmdahi	r0, {r2, r3}
    162c:	06300409 	ldrteq	r0, [r0], -r9, lsl #8
    1630:	ac020000 	stcge	0, cr0, [r2], {-0}
    1634:	00000cde 	ldrdeq	r0, [r0], -lr
    1638:	f204098c 	vmla.i8	d0, d20, d12
    163c:	02000008 	andeq	r0, r0, #8
    1640:	000cdead 	andeq	sp, ip, sp, lsr #29
    1644:	04099000 	streq	r9, [r9], #-0
    1648:	00000e41 	andeq	r0, r0, r1, asr #28
    164c:	0cdeae02 	ldcleq	14, cr10, [lr], {2}
    1650:	09940000 	ldmibeq	r4, {}	; <UNPREDICTABLE>
    1654:	0007b004 	andeq	fp, r7, r4
    1658:	deaf0200 	cdple	2, 10, cr0, cr15, cr0, {0}
    165c:	9800000c 	stmdals	r0, {r2, r3}
    1660:	0da60409 	cfstrseq	mvf0, [r6, #36]!	; 0x24
    1664:	b0020000 	andlt	r0, r2, r0
    1668:	00000cde 	ldrdeq	r0, [r0], -lr
    166c:	1904099c 	stmdbne	r4, {r2, r3, r4, r7, r8, fp}
    1670:	02000009 	andeq	r0, r0, #9
    1674:	000cdeb1 			; <UNDEFINED> instruction: 0x000cdeb1
    1678:	0409a000 	streq	sl, [r9], #-0
    167c:	000009c7 	andeq	r0, r0, r7, asr #19
    1680:	0cdeb202 	lfmeq	f3, 3, [lr], {2}
    1684:	09a40000 	stmibeq	r4!, {}	; <UNPREDICTABLE>
    1688:	000d9a04 	andeq	r9, sp, r4, lsl #20
    168c:	deb30200 	cdple	2, 11, cr0, cr3, cr0, {0}
    1690:	a800000c 	stmdage	r0, {r2, r3}
    1694:	06a80409 	strteq	r0, [r8], r9, lsl #8
    1698:	b4020000 	strlt	r0, [r2], #-0
    169c:	00000cde 	ldrdeq	r0, [r0], -lr
    16a0:	fa0409ac 	blx	103d58 <_start-0xbff042a8>
    16a4:	02000005 	andeq	r0, r0, #5
    16a8:	000e04b5 			; <UNDEFINED> instruction: 0x000e04b5
    16ac:	0409b000 	streq	fp, [r9], #-0
    16b0:	000009ab 	andeq	r0, r0, fp, lsr #19
    16b4:	0cdeb602 	ldcleq	6, cr11, [lr], {2}
    16b8:	0a000000 	beq	16c0 <_start-0xc0006940>
    16bc:	000c8704 	andeq	r8, ip, r4, lsl #14
    16c0:	deb70200 	cdple	2, 11, cr0, cr7, cr0, {0}
    16c4:	0400000c 	streq	r0, [r0], #-12
    16c8:	0ab1040a 	beq	fec426f8 <__bss_end__+0x3ec37c70>
    16cc:	b8020000 	stmdalt	r2, {}	; <UNPREDICTABLE>
    16d0:	00000cde 	ldrdeq	r0, [r0], -lr
    16d4:	18040a08 	stmdane	r4, {r3, r9, fp}
    16d8:	0200000d 	andeq	r0, r0, #13
    16dc:	000cdeb9 			; <UNDEFINED> instruction: 0x000cdeb9
    16e0:	040a0c00 	streq	r0, [sl], #-3072	; 0xfffff400
    16e4:	00000dd8 	ldrdeq	r0, [r0], -r8
    16e8:	0cdeba02 	vldmiaeq	lr, {s23-s24}
    16ec:	0a100000 	beq	4016f4 <_start-0xbfc0690c>
    16f0:	00049904 	andeq	r9, r4, r4, lsl #18
    16f4:	debb0200 	cdple	2, 11, cr0, cr11, cr0, {0}
    16f8:	1400000c 	strne	r0, [r0], #-12
    16fc:	0dba040a 	cfldrseq	mvf0, [sl, #40]!	; 0x28
    1700:	bc020000 	stclt	0, cr0, [r2], {-0}
    1704:	00000cde 	ldrdeq	r0, [r0], -lr
    1708:	67040a18 	smladvs	r4, r8, sl, r0
    170c:	02000004 	andeq	r0, r0, #4
    1710:	000cdebd 			; <UNDEFINED> instruction: 0x000cdebd
    1714:	040a1c00 	streq	r1, [sl], #-3072	; 0xfffff400
    1718:	00000b48 	andeq	r0, r0, r8, asr #22
    171c:	0cdebe02 	ldcleq	14, cr11, [lr], {2}
    1720:	0a200000 	beq	801728 <_start-0xbf8068d8>
    1724:	000e3304 	andeq	r3, lr, r4, lsl #6
    1728:	debf0200 	cdple	2, 11, cr0, cr15, cr0, {0}
    172c:	2400000c 	strcs	r0, [r0], #-12
    1730:	0541040a 	strbeq	r0, [r1, #-1034]	; 0xfffffbf6
    1734:	c0020000 	andgt	r0, r2, r0
    1738:	00000cde 	ldrdeq	r0, [r0], -lr
    173c:	66040a28 	strvs	r0, [r4], -r8, lsr #20
    1740:	02000007 	andeq	r0, r0, #7
    1744:	000cdec1 	andeq	sp, ip, r1, asr #29
    1748:	040a2c00 	streq	r2, [sl], #-3072	; 0xfffff400
    174c:	00001030 	andeq	r1, r0, r0, lsr r0
    1750:	0cf3c202 	lfmeq	f4, 3, [r3], #8
    1754:	0a300000 	beq	c0175c <_start-0xbf4068a4>
    1758:	00062104 	andeq	r2, r6, r4, lsl #2
    175c:	dec30200 	cdple	2, 12, cr0, cr3, cr0, {0}
    1760:	3800000c 	stmdacc	r0, {r2, r3}
    1764:	08d7040a 	ldmeq	r7, {r1, r3, sl}^
    1768:	c4020000 	strgt	r0, [r2], #-0
    176c:	00000cde 	ldrdeq	r0, [r0], -lr
    1770:	0d040a3c 	vstreq	s0, [r4, #-240]	; 0xffffff10
    1774:	02000006 	andeq	r0, r0, #6
    1778:	000ddac5 	andeq	sp, sp, r5, asr #21
    177c:	040a4000 	streq	r4, [sl], #-0
    1780:	00000b9b 	muleq	r0, fp, fp
    1784:	0cdec602 	ldcleq	6, cr12, [lr], {2}
    1788:	0a800000 	beq	fe001790 <__bss_end__+0x3dff6d08>
    178c:	000e7e04 	andeq	r7, lr, r4, lsl #28
    1790:	dec70200 	cdple	2, 12, cr0, cr7, cr0, {0}
    1794:	8400000c 	strhi	r0, [r0], #-12
    1798:	0592040a 	ldreq	r0, [r2, #1034]	; 0x40a
    179c:	c8020000 	stmdagt	r2, {}	; <UNPREDICTABLE>
    17a0:	00000cde 	ldrdeq	r0, [r0], -lr
    17a4:	65040a88 	strvs	r0, [r4, #-2696]	; 0xfffff578
    17a8:	02000008 	andeq	r0, r0, #8
    17ac:	000cdec9 	andeq	sp, ip, r9, asr #29
    17b0:	040a8c00 	streq	r8, [sl], #-3072	; 0xfffff400
    17b4:	00000be2 	andeq	r0, r0, r2, ror #23
    17b8:	0cdeca02 	vldmiaeq	lr, {s25-s26}
    17bc:	0a900000 	beq	fe4017c4 <__bss_end__+0x3e3f6d3c>
    17c0:	000a9204 	andeq	r9, sl, r4, lsl #4
    17c4:	decb0200 	cdple	2, 12, cr0, cr11, cr0, {0}
    17c8:	9400000c 	strls	r0, [r0], #-12
    17cc:	0c48040a 	cfstrdeq	mvd0, [r8], {10}
    17d0:	cc020000 	stcgt	0, cr0, [r2], {-0}
    17d4:	00000cde 	ldrdeq	r0, [r0], -lr
    17d8:	26040a98 			; <UNDEFINED> instruction: 0x26040a98
    17dc:	02000005 	andeq	r0, r0, #5
    17e0:	000cdecd 	andeq	sp, ip, sp, asr #29
    17e4:	040a9c00 	streq	r9, [sl], #-3072	; 0xfffff400
    17e8:	00000989 	andeq	r0, r0, r9, lsl #19
    17ec:	0cdece02 	ldcleq	14, cr12, [lr], {2}
    17f0:	0aa00000 	beq	fe8017f8 <__bss_end__+0x3e7f6d70>
    17f4:	000c6604 	andeq	r6, ip, r4, lsl #12
    17f8:	decf0200 	cdple	2, 12, cr0, cr15, cr0, {0}
    17fc:	a400000c 	strge	r0, [r0], #-12
    1800:	0ff7040a 	svceq	0x00f7040a
    1804:	d0020000 	andle	r0, r2, r0
    1808:	00000cde 	ldrdeq	r0, [r0], -lr
    180c:	a2040aa8 	andge	r0, r4, #168, 20	; 0xa8000
    1810:	02000007 	andeq	r0, r0, #7
    1814:	000cded1 	ldrdeq	sp, [ip], -r1
    1818:	040aac00 	streq	sl, [sl], #-3072	; 0xfffff400
    181c:	00000eee 	andeq	r0, r0, lr, ror #29
    1820:	0cded202 	lfmeq	f5, 3, [lr], {2}
    1824:	0ab00000 	beq	fec0182c <__bss_end__+0x3ebf6da4>
    1828:	00079404 	andeq	r9, r7, r4, lsl #8
    182c:	ded30200 	cdple	2, 13, cr0, cr3, cr0, {0}
    1830:	b400000c 	strlt	r0, [r0], #-12
    1834:	097a040a 	ldmdbeq	sl!, {r1, r3, sl}^
    1838:	d4020000 	strle	r0, [r2], #-0
    183c:	00000cde 	ldrdeq	r0, [r0], -lr
    1840:	e7040ab8 			; <UNDEFINED> instruction: 0xe7040ab8
    1844:	02000006 	andeq	r0, r0, #6
    1848:	000cded5 	ldrdeq	sp, [ip], -r5
    184c:	040abc00 	streq	fp, [sl], #-3072	; 0xfffff400
    1850:	00000b32 	andeq	r0, r0, r2, lsr fp
    1854:	0ddad602 	ldcleq	6, cr13, [sl, #8]
    1858:	0ac00000 	beq	ff001860 <__bss_end__+0x3eff6dd8>
    185c:	000f0804 	andeq	r0, pc, r4, lsl #16
    1860:	ded70200 	cdple	2, 13, cr0, cr7, cr0, {0}
    1864:	0000000c 	andeq	r0, r0, ip
    1868:	0fb1040b 	svceq	0x00b1040b
    186c:	d8020000 	stmdale	r2, {}	; <UNPREDICTABLE>
    1870:	00000cde 	ldrdeq	r0, [r0], -lr
    1874:	cb040b04 	blgt	10448c <_start-0xbff03b74>
    1878:	0200000f 	andeq	r0, r0, #15
    187c:	000cded9 	ldrdeq	sp, [ip], -r9
    1880:	040b0800 	streq	r0, [fp], #-2048	; 0xfffff800
    1884:	00000ac9 	andeq	r0, r0, r9, asr #21
    1888:	0cdeda02 	vldmiaeq	lr, {s27-s28}
    188c:	0b0c0000 	bleq	301894 <_start-0xbfd0676c>
    1890:	0009f304 	andeq	pc, r9, r4, lsl #6
    1894:	dedb0200 	cdple	2, 13, cr0, cr11, cr0, {0}
    1898:	1000000c 	andne	r0, r0, ip
    189c:	0ce6040b 	cfstrdeq	mvd0, [r6], #44	; 0x2c
    18a0:	dc020000 	stcle	0, cr0, [r2], {-0}
    18a4:	00000cde 	ldrdeq	r0, [r0], -lr
    18a8:	3c040b14 			; <UNDEFINED> instruction: 0x3c040b14
    18ac:	02000006 	andeq	r0, r0, #6
    18b0:	000cdedd 	ldrdeq	sp, [ip], -sp	; <UNPREDICTABLE>
    18b4:	040b1800 	streq	r1, [fp], #-2048	; 0xfffff800
    18b8:	00000881 	andeq	r0, r0, r1, lsl #17
    18bc:	0cdede02 	ldcleq	14, cr13, [lr], {2}
    18c0:	0b1c0000 	bleq	7018c8 <_start-0xbf906738>
    18c4:	00078404 	andeq	r8, r7, r4, lsl #8
    18c8:	dedf0200 	cdple	2, 13, cr0, cr15, cr0, {0}
    18cc:	2000000c 	andcs	r0, r0, ip
    18d0:	0cbc040b 	cfldrseq	mvf0, [ip], #44	; 0x2c
    18d4:	e0020000 	and	r0, r2, r0
    18d8:	00000cde 	ldrdeq	r0, [r0], -lr
    18dc:	5e040b24 	vmlapl.f64	d0, d4, d20
    18e0:	02000009 	andeq	r0, r0, #9
    18e4:	000cdee1 	andeq	sp, ip, r1, ror #29
    18e8:	040b2800 	streq	r2, [fp], #-2048	; 0xfffff800
    18ec:	00000516 	andeq	r0, r0, r6, lsl r5
    18f0:	0cdee202 	lfmeq	f6, 3, [lr], {2}
    18f4:	0b2c0000 	bleq	b018fc <_start-0xbf506704>
    18f8:	000b7b04 	andeq	r7, fp, r4, lsl #22
    18fc:	dee30200 	cdple	2, 14, cr0, cr3, cr0, {0}
    1900:	3000000c 	andcc	r0, r0, ip
    1904:	0457040b 	ldrbeq	r0, [r7], #-1035	; 0xfffffbf5
    1908:	e4020000 	str	r0, [r2], #-0
    190c:	00000cde 	ldrdeq	r0, [r0], -lr
    1910:	74040b34 	strvc	r0, [r4], #-2868	; 0xfffff4cc
    1914:	02000005 	andeq	r0, r0, #5
    1918:	000cdee5 	andeq	sp, ip, r5, ror #29
    191c:	040b3800 	streq	r3, [fp], #-2048	; 0xfffff800
    1920:	00000854 	andeq	r0, r0, r4, asr r8
    1924:	0cdee602 	ldcleq	6, cr14, [lr], {2}
    1928:	0b3c0000 	bleq	f01930 <_start-0xbf1066d0>
    192c:	00072004 	andeq	r2, r7, r4
    1930:	dae70200 	ble	ff9c2138 <__bss_end__+0x3f9b76b0>
    1934:	4000000d 	andmi	r0, r0, sp
    1938:	0506040b 	streq	r0, [r6, #-1035]	; 0xfffffbf5
    193c:	e8020000 	stmda	r2, {}	; <UNPREDICTABLE>
    1940:	00000cde 	ldrdeq	r0, [r0], -lr
    1944:	d9040b80 	stmdble	r4, {r7, r8, r9, fp}
    1948:	02000007 	andeq	r0, r0, #7
    194c:	000cdee9 	andeq	sp, ip, r9, ror #29
    1950:	040b8400 	streq	r8, [fp], #-1024	; 0xfffffc00
    1954:	00000809 	andeq	r0, r0, r9, lsl #16
    1958:	0cdeea02 	vldmiaeq	lr, {s29-s30}
    195c:	0b880000 	bleq	fe201964 <__bss_end__+0x3e1f6edc>
    1960:	000d6104 	andeq	r6, sp, r4, lsl #2
    1964:	deeb0200 	cdple	2, 14, cr0, cr11, cr0, {0}
    1968:	8c00000c 	stchi	0, cr0, [r0], {12}
    196c:	0a2c040b 	beq	b029a0 <_start-0xbf505660>
    1970:	ec020000 	stc	0, cr0, [r2], {-0}
    1974:	00000cde 	ldrdeq	r0, [r0], -lr
    1978:	8b040b90 	blhi	1047c0 <_start-0xbff03840>
    197c:	0200000b 	andeq	r0, r0, #11
    1980:	000cdeed 	andeq	sp, ip, sp, ror #29
    1984:	040b9400 	streq	r9, [fp], #-1024	; 0xfffffc00
    1988:	00000b6b 	andeq	r0, r0, fp, ror #22
    198c:	0cdeee02 	ldcleq	14, cr14, [lr], {2}
    1990:	0b980000 	bleq	fe601998 <__bss_end__+0x3e5f6f10>
    1994:	000ed304 	andeq	sp, lr, r4, lsl #6
    1998:	deef0200 	cdple	2, 14, cr0, cr15, cr0, {0}
    199c:	9c00000c 	stcls	0, cr0, [r0], {12}
    19a0:	0ae5040b 	beq	ff9429d4 <__bss_end__+0x3f937f4c>
    19a4:	f0020000 			; <UNDEFINED> instruction: 0xf0020000
    19a8:	00000cde 	ldrdeq	r0, [r0], -lr
    19ac:	64040ba0 	strvs	r0, [r4], #-2976	; 0xfffff460
    19b0:	02000005 	andeq	r0, r0, #5
    19b4:	000cdef1 	strdeq	sp, [ip], -r1
    19b8:	040ba400 	streq	sl, [fp], #-1024	; 0xfffffc00
    19bc:	00000fdb 	ldrdeq	r0, [r0], -fp
    19c0:	0cdef202 	lfmeq	f7, 3, [lr], {2}
    19c4:	0ba80000 	bleq	fea019cc <__bss_end__+0x3e9f6f44>
    19c8:	00075604 	andeq	r5, r7, r4, lsl #12
    19cc:	def30200 	cdple	2, 15, cr0, cr3, cr0, {0}
    19d0:	ac00000c 	stcge	0, cr0, [r0], {12}
    19d4:	0774040b 	ldrbeq	r0, [r4, -fp, lsl #8]!
    19d8:	f4020000 	vst4.8	{d0-d3}, [r2], r0
    19dc:	00000cde 	ldrdeq	r0, [r0], -lr
    19e0:	13040bb0 	movwne	r0, #19376	; 0x4bb0
    19e4:	0200000c 	andeq	r0, r0, #12
    19e8:	000cdef5 	strdeq	sp, [ip], -r5
    19ec:	040bb400 	streq	fp, [fp], #-1024	; 0xfffffc00
    19f0:	00000730 	andeq	r0, r0, r0, lsr r7
    19f4:	0cdef602 	ldcleq	6, cr15, [lr], {2}
    19f8:	0bb80000 	bleq	fee01a00 <__bss_end__+0x3edf6f78>
    19fc:	0008a504 	andeq	sl, r8, r4, lsl #10
    1a00:	def70200 	cdple	2, 15, cr0, cr7, cr0, {0}
    1a04:	bc00000c 	stclt	0, cr0, [r0], {12}
    1a08:	0925040b 	stmdbeq	r5!, {r0, r1, r3, sl}
    1a0c:	f8020000 			; <UNDEFINED> instruction: 0xf8020000
    1a10:	00000dda 	ldrdeq	r0, [r0], -sl
    1a14:	2b040bc0 	blcs	10491c <_start-0xbff036e4>
    1a18:	02000009 	andeq	r0, r0, #9
    1a1c:	000cdef9 	strdeq	sp, [ip], -r9
    1a20:	040c0000 	streq	r0, [ip], #-0
    1a24:	00000493 	muleq	r0, r3, r4
    1a28:	0dc5fa02 	vstreq	s31, [r5, #8]
    1a2c:	0c040000 	stceq	0, cr0, [r4], {-0}
    1a30:	000e7604 	andeq	r7, lr, r4, lsl #12
    1a34:	defb0200 	cdple	2, 15, cr0, cr11, cr0, {0}
    1a38:	1400000c 	strne	r0, [r0], #-12
    1a3c:	1028040c 	eorne	r0, r8, ip, lsl #8
    1a40:	fc020000 	stc2	0, cr0, [r2], {-0}
    1a44:	00000cde 	ldrdeq	r0, [r0], -lr
    1a48:	a7040c18 	smladge	r4, r8, ip, r0
    1a4c:	02000004 	andeq	r0, r0, #4
    1a50:	000e19fd 	strdeq	r1, [lr], -sp
    1a54:	040c1c00 	streq	r1, [ip], #-3072	; 0xfffff400
    1a58:	00000c2c 	andeq	r0, r0, ip, lsr #24
    1a5c:	0cdefe02 	ldcleq	14, cr15, [lr], {2}
    1a60:	0ff40000 	svceq	0x00f40000
    1a64:	52444905 	subpl	r4, r4, #81920	; 0x14000
    1a68:	deff0200 	cdple	2, 15, cr0, cr15, cr0, {0}
    1a6c:	f800000c 			; <UNDEFINED> instruction: 0xf800000c
    1a70:	0937060f 	ldmdbeq	r7!, {r0, r1, r2, r3, r9, sl}
    1a74:	00020000 	andeq	r0, r2, r0
    1a78:	000cde01 	andeq	sp, ip, r1, lsl #28
    1a7c:	000ffc00 	andeq	pc, pc, r0, lsl #24
    1a80:	f6070407 			; <UNDEFINED> instruction: 0xf6070407
    1a84:	08000000 	stmdaeq	r0, {}	; <UNPREDICTABLE>
    1a88:	00000cd7 	ldrdeq	r0, [r0], -r7
    1a8c:	000cde09 	andeq	sp, ip, r9, lsl #28
    1a90:	000cf300 	andeq	pc, ip, r0, lsl #6
    1a94:	0cd70a00 	vldmiaeq	r7, {s1-s0}
    1a98:	00010000 	andeq	r0, r1, r0
    1a9c:	000ce308 	andeq	lr, ip, r8, lsl #6
    1aa0:	0cde0900 			; <UNDEFINED> instruction: 0x0cde0900
    1aa4:	0d080000 	stceq	0, cr0, [r8, #-0]
    1aa8:	d70a0000 	strle	r0, [sl, -r0]
    1aac:	0000000c 	andeq	r0, r0, ip
    1ab0:	0cf80800 	ldcleq	8, cr0, [r8]
    1ab4:	de090000 	cdple	0, 0, cr0, cr9, cr0, {0}
    1ab8:	1d00000c 	stcne	0, cr0, [r0, #-48]	; 0xffffffd0
    1abc:	0a00000d 	beq	1af8 <_start-0xc0006508>
    1ac0:	00000cd7 	ldrdeq	r0, [r0], -r7
    1ac4:	0d08000c 	stceq	0, cr0, [r8, #-48]	; 0xffffffd0
    1ac8:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    1acc:	00000cde 	ldrdeq	r0, [r0], -lr
    1ad0:	00000d32 	andeq	r0, r0, r2, lsr sp
    1ad4:	000cd70a 	andeq	sp, ip, sl, lsl #14
    1ad8:	08000500 	stmdaeq	r0, {r8, sl}
    1adc:	00000d22 	andeq	r0, r0, r2, lsr #26
    1ae0:	000cde09 	andeq	sp, ip, r9, lsl #28
    1ae4:	000d4700 	andeq	r4, sp, r0, lsl #14
    1ae8:	0cd70a00 	vldmiaeq	r7, {s1-s0}
    1aec:	00080000 	andeq	r0, r8, r0
    1af0:	000d3708 	andeq	r3, sp, r8, lsl #14
    1af4:	0cde0900 			; <UNDEFINED> instruction: 0x0cde0900
    1af8:	0d5c0000 	ldcleq	0, cr0, [ip, #-0]
    1afc:	d70a0000 	strle	r0, [sl, -r0]
    1b00:	0900000c 	stmdbeq	r0, {r2, r3}
    1b04:	0d4c0800 	stcleq	8, cr0, [ip, #-0]
    1b08:	de090000 	cdple	0, 0, cr0, cr9, cr0, {0}
    1b0c:	7100000c 	tstvc	r0, ip
    1b10:	0a00000d 	beq	1b4c <_start-0xc00064b4>
    1b14:	00000cd7 	ldrdeq	r0, [r0], -r7
    1b18:	6108000d 	tstvs	r8, sp
    1b1c:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    1b20:	00000cde 	ldrdeq	r0, [r0], -lr
    1b24:	00000d86 	andeq	r0, r0, r6, lsl #27
    1b28:	000cd70a 	andeq	sp, ip, sl, lsl #14
    1b2c:	08001500 	stmdaeq	r0, {r8, sl, ip}
    1b30:	00000d76 	andeq	r0, r0, r6, ror sp
    1b34:	000cde09 	andeq	sp, ip, r9, lsl #28
    1b38:	000d9b00 	andeq	r9, sp, r0, lsl #22
    1b3c:	0cd70a00 	vldmiaeq	r7, {s1-s0}
    1b40:	00170000 	andseq	r0, r7, r0
    1b44:	000d8b08 	andeq	r8, sp, r8, lsl #22
    1b48:	0cde0900 			; <UNDEFINED> instruction: 0x0cde0900
    1b4c:	0db00000 	ldceq	0, cr0, [r0]
    1b50:	d70a0000 	strle	r0, [sl, -r0]
    1b54:	f600000c 			; <UNDEFINED> instruction: 0xf600000c
    1b58:	0da00800 	stceq	8, cr0, [r0]
    1b5c:	de090000 	cdple	0, 0, cr0, cr9, cr0, {0}
    1b60:	c500000c 	strgt	r0, [r0, #-12]
    1b64:	0a00000d 	beq	1ba0 <_start-0xc0006460>
    1b68:	00000cd7 	ldrdeq	r0, [r0], -r7
    1b6c:	b5080003 	strlt	r0, [r8, #-3]
    1b70:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    1b74:	00000cde 	ldrdeq	r0, [r0], -lr
    1b78:	00000dda 	ldrdeq	r0, [r0], -sl
    1b7c:	000cd70a 	andeq	sp, ip, sl, lsl #14
    1b80:	08000f00 	stmdaeq	r0, {r8, r9, sl, fp}
    1b84:	00000dca 	andeq	r0, r0, sl, asr #27
    1b88:	000cde09 	andeq	sp, ip, r9, lsl #28
    1b8c:	000def00 	andeq	lr, sp, r0, lsl #30
    1b90:	0cd70a00 	vldmiaeq	r7, {s1-s0}
    1b94:	00110000 	andseq	r0, r1, r0
    1b98:	000ddf08 	andeq	sp, sp, r8, lsl #30
    1b9c:	0cde0900 			; <UNDEFINED> instruction: 0x0cde0900
    1ba0:	0e040000 	cdpeq	0, 0, cr0, cr4, cr0, {0}
    1ba4:	d70a0000 	strle	r0, [sl, -r0]
    1ba8:	1300000c 	movwne	r0, #12
    1bac:	0df40800 	ldcleq	8, cr0, [r4]
    1bb0:	de090000 	cdple	0, 0, cr0, cr9, cr0, {0}
    1bb4:	1900000c 	stmdbne	r0, {r2, r3}
    1bb8:	0a00000e 	beq	1bf8 <_start-0xc0006408>
    1bbc:	00000cd7 	ldrdeq	r0, [r0], -r7
    1bc0:	090800f5 	stmdbeq	r8, {r0, r2, r4, r5, r6, r7}
    1bc4:	0b00000e 	bleq	1c04 <_start-0xc00063fc>
    1bc8:	00000819 	andeq	r0, r0, r9, lsl r8
    1bcc:	25010102 	strcs	r0, [r1, #-258]	; 0xfffffefe
    1bd0:	0c000000 	stceq	0, cr0, [r0], {-0}
    1bd4:	cf040334 	svcgt	0x00040334
    1bd8:	0300000e 	movweq	r0, #14
    1bdc:	00000208 	andeq	r0, r0, r8, lsl #4
    1be0:	0cde0503 	cfldr64eq	mvdx0, [lr], {3}
    1be4:	03000000 	movweq	r0, #0
    1be8:	00000245 	andeq	r0, r0, r5, asr #4
    1bec:	0cde0603 	ldcleq	6, cr0, [lr], {3}
    1bf0:	03040000 	movweq	r0, #16384	; 0x4000
    1bf4:	0000020e 	andeq	r0, r0, lr, lsl #4
    1bf8:	0cde0703 	ldcleq	7, cr0, [lr], {3}
    1bfc:	03080000 	movweq	r0, #32768	; 0x8000
    1c00:	00000202 	andeq	r0, r0, r2, lsl #4
    1c04:	0cde0803 	ldcleq	8, cr0, [lr], {3}
    1c08:	0d0c0000 	stceq	0, cr0, [ip, #-0]
    1c0c:	00524449 	subseq	r4, r2, r9, asr #8
    1c10:	0cde0903 			; <UNDEFINED> instruction: 0x0cde0903
    1c14:	0d100000 	ldceq	0, cr0, [r0, #-0]
    1c18:	0052444f 	subseq	r4, r2, pc, asr #8
    1c1c:	0cde0a03 	vldmiaeq	lr, {s1-s3}
    1c20:	03140000 	tsteq	r4, #0
    1c24:	000001fd 	strdeq	r0, [r0], -sp
    1c28:	0cde0b03 	fldmiaxeq	lr, {d16}	;@ Deprecated
    1c2c:	03180000 	tsteq	r8, #0
    1c30:	00000239 	andeq	r0, r0, r9, lsr r2
    1c34:	0cde0c03 	ldcleq	12, cr0, [lr], {3}
    1c38:	031c0000 	tsteq	ip, #0
    1c3c:	0000024c 	andeq	r0, r0, ip, asr #4
    1c40:	0cde0d03 	ldcleq	13, cr0, [lr], {3}
    1c44:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
    1c48:	0000025d 	andeq	r0, r0, sp, asr r2
    1c4c:	0cde0e03 	ldcleq	14, cr0, [lr], {3}
    1c50:	0d240000 	stceq	0, cr0, [r4, #-0]
    1c54:	00525242 	subseq	r5, r2, r2, asr #4
    1c58:	0cde0f03 	ldcleq	15, cr0, [lr], {3}
    1c5c:	0d280000 	stceq	0, cr0, [r8, #-0]
    1c60:	00736572 	rsbseq	r6, r3, r2, ror r5
    1c64:	0cde1003 	ldcleq	0, cr1, [lr], {3}
    1c68:	032c0000 			; <UNDEFINED> instruction: 0x032c0000
    1c6c:	000001df 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    1c70:	0cde1103 	ldfeqe	f1, [lr], {3}
    1c74:	00300000 	eorseq	r0, r0, r0
    1c78:	0002320e 	andeq	r3, r2, lr, lsl #4
    1c7c:	2a130300 	bcs	4c2884 <_start-0xbfb4577c>
    1c80:	0c00000e 	stceq	0, cr0, [r0], {14}
    1c84:	f30404f0 	vqshl.u8	q0, q8, q10
    1c88:	03000010 	movweq	r0, #16
    1c8c:	00000355 	andeq	r0, r0, r5, asr r3
    1c90:	0cde0504 	cfldr64eq	mvdx0, [lr], {4}
    1c94:	03000000 	movweq	r0, #0
    1c98:	00000285 	andeq	r0, r0, r5, lsl #5
    1c9c:	0cde0604 	ldcleq	6, cr0, [lr], {4}
    1ca0:	03040000 	movweq	r0, #16384	; 0x4000
    1ca4:	00000297 	muleq	r0, r7, r2
    1ca8:	0cde0704 	ldcleq	7, cr0, [lr], {4}
    1cac:	03080000 	movweq	r0, #32768	; 0x8000
    1cb0:	000003c8 	andeq	r0, r0, r8, asr #7
    1cb4:	0cde0804 	ldcleq	8, cr0, [lr], {4}
    1cb8:	030c0000 	movweq	r0, #49152	; 0xc000
    1cbc:	000002bf 			; <UNDEFINED> instruction: 0x000002bf
    1cc0:	0cde0904 			; <UNDEFINED> instruction: 0x0cde0904
    1cc4:	03100000 	tsteq	r0, #0
    1cc8:	000003fa 	strdeq	r0, [r0], -sl
    1ccc:	0cde0a04 	vldmiaeq	lr, {s1-s4}
    1cd0:	03140000 	tsteq	r4, #0
    1cd4:	00000424 	andeq	r0, r0, r4, lsr #8
    1cd8:	0cf30b04 	vldmiaeq	r3!, {d16-d17}
    1cdc:	03180000 	tsteq	r8, #0
    1ce0:	0000035b 	andeq	r0, r0, fp, asr r3
    1ce4:	0cde0c04 	ldcleq	12, cr0, [lr], {4}
    1ce8:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
    1cec:	0000028b 	andeq	r0, r0, fp, lsl #5
    1cf0:	0cde0d04 	ldcleq	13, cr0, [lr], {4}
    1cf4:	03240000 			; <UNDEFINED> instruction: 0x03240000
    1cf8:	0000029e 	muleq	r0, lr, r2
    1cfc:	0cde0e04 	ldcleq	14, cr0, [lr], {4}
    1d00:	03280000 			; <UNDEFINED> instruction: 0x03280000
    1d04:	000003cd 	andeq	r0, r0, sp, asr #7
    1d08:	0cde0f04 	ldcleq	15, cr0, [lr], {4}
    1d0c:	032c0000 			; <UNDEFINED> instruction: 0x032c0000
    1d10:	000002c4 	andeq	r0, r0, r4, asr #5
    1d14:	0cde1004 	ldcleq	0, cr1, [lr], {4}
    1d18:	03300000 	teqeq	r0, #0
    1d1c:	00000401 	andeq	r0, r0, r1, lsl #8
    1d20:	0cde1104 	ldfeqe	f1, [lr], {4}
    1d24:	03340000 	teqeq	r4, #0
    1d28:	00000429 	andeq	r0, r0, r9, lsr #8
    1d2c:	0cf31204 	lfmeq	f1, 2, [r3], #16
    1d30:	03380000 	teqeq	r8, #0
    1d34:	00000361 	andeq	r0, r0, r1, ror #6
    1d38:	0cde1304 	ldcleq	3, cr1, [lr], {4}
    1d3c:	03400000 	movteq	r0, #0
    1d40:	00000291 	muleq	r0, r1, r2
    1d44:	0cde1404 	cfldrdeq	mvd1, [lr], {4}
    1d48:	03440000 	movteq	r0, #16384	; 0x4000
    1d4c:	000002a5 	andeq	r0, r0, r5, lsr #5
    1d50:	0cde1504 	cfldr64eq	mvdx1, [lr], {4}
    1d54:	03480000 	movteq	r0, #32768	; 0x8000
    1d58:	000003d2 	ldrdeq	r0, [r0], -r2
    1d5c:	0cde1604 	ldcleq	6, cr1, [lr], {4}
    1d60:	034c0000 	movteq	r0, #49152	; 0xc000
    1d64:	000002c9 	andeq	r0, r0, r9, asr #5
    1d68:	0cde1704 	ldcleq	7, cr1, [lr], {4}
    1d6c:	03500000 	cmpeq	r0, #0
    1d70:	00000408 	andeq	r0, r0, r8, lsl #8
    1d74:	0cde1804 	ldcleq	8, cr1, [lr], {4}
    1d78:	03540000 	cmpeq	r4, #0
    1d7c:	0000042e 	andeq	r0, r0, lr, lsr #8
    1d80:	0cf31904 			; <UNDEFINED> instruction: 0x0cf31904
    1d84:	03580000 	cmpeq	r8, #0
    1d88:	000002dc 	ldrdeq	r0, [r0], -ip
    1d8c:	0cde1a04 	vldmiaeq	lr, {s3-s6}
    1d90:	03600000 	cmneq	r0, #0
    1d94:	000002e4 	andeq	r0, r0, r4, ror #5
    1d98:	0cde1b04 	vldmiaeq	lr, {d17-d18}
    1d9c:	03640000 	cmneq	r4, #0
    1da0:	000002ec 	andeq	r0, r0, ip, ror #5
    1da4:	0cde1c04 	ldcleq	12, cr1, [lr], {4}
    1da8:	03680000 	cmneq	r8, #0
    1dac:	000002f4 	strdeq	r0, [r0], -r4
    1db0:	0cde1d04 	ldcleq	13, cr1, [lr], {4}
    1db4:	036c0000 	cmneq	ip, #0
    1db8:	00000433 	andeq	r0, r0, r3, lsr r4
    1dbc:	0dc51e04 	stcleq	14, cr1, [r5, #16]
    1dc0:	03700000 	cmneq	r0, #0
    1dc4:	00000303 	andeq	r0, r0, r3, lsl #6
    1dc8:	0cde1f04 	ldcleq	15, cr1, [lr], {4}
    1dcc:	03800000 	orreq	r0, r0, #0
    1dd0:	00000381 	andeq	r0, r0, r1, lsl #7
    1dd4:	0cde2004 	ldcleq	0, cr2, [lr], {4}
    1dd8:	03840000 	orreq	r0, r4, #0
    1ddc:	00000438 	andeq	r0, r0, r8, lsr r4
    1de0:	0cf32104 	ldfeqe	f2, [r3], #16
    1de4:	03880000 	orreq	r0, r8, #0
    1de8:	0000034e 	andeq	r0, r0, lr, asr #6
    1dec:	0cde2204 	lfmeq	f2, 2, [lr], {4}
    1df0:	03900000 	orrseq	r0, r0, #0
    1df4:	00000388 	andeq	r0, r0, r8, lsl #7
    1df8:	0cde2304 	ldcleq	3, cr2, [lr], {4}
    1dfc:	03940000 	orrseq	r0, r4, #0
    1e00:	0000043d 	andeq	r0, r0, sp, lsr r4
    1e04:	0cf32404 	cfldrdeq	mvd2, [r3], #16
    1e08:	03980000 	orrseq	r0, r8, #0
    1e0c:	0000030a 	andeq	r0, r0, sl, lsl #6
    1e10:	0cde2504 	cfldr64eq	mvdx2, [lr], {4}
    1e14:	03a00000 	moveq	r0, #0
    1e18:	0000038f 	andeq	r0, r0, pc, lsl #7
    1e1c:	0cde2604 	ldcleq	6, cr2, [lr], {4}
    1e20:	03a40000 			; <UNDEFINED> instruction: 0x03a40000
    1e24:	00000442 	andeq	r0, r0, r2, asr #8
    1e28:	0d322704 	ldceq	7, cr2, [r2, #-16]!
    1e2c:	03a80000 			; <UNDEFINED> instruction: 0x03a80000
    1e30:	0000040f 	andeq	r0, r0, pc, lsl #8
    1e34:	0cde2804 	ldcleq	8, cr2, [lr], {4}
    1e38:	03c00000 	biceq	r0, r0, #0
    1e3c:	00000328 	andeq	r0, r0, r8, lsr #6
    1e40:	0cde2904 			; <UNDEFINED> instruction: 0x0cde2904
    1e44:	03c40000 	biceq	r0, r4, #0
    1e48:	00000274 	andeq	r0, r0, r4, ror r2
    1e4c:	0cf32a04 	vldmiaeq	r3!, {s5-s8}
    1e50:	03c80000 	biceq	r0, r8, #0
    1e54:	00000416 	andeq	r0, r0, r6, lsl r4
    1e58:	0cde2b04 	vldmiaeq	lr, {d18-d19}
    1e5c:	03d00000 	bicseq	r0, r0, #0
    1e60:	0000032f 	andeq	r0, r0, pc, lsr #6
    1e64:	0cde2c04 	ldcleq	12, cr2, [lr], {4}
    1e68:	03d40000 	bicseq	r0, r4, #0
    1e6c:	00000279 	andeq	r0, r0, r9, ror r2
    1e70:	0cf32d04 	ldcleq	13, cr2, [r3], #16
    1e74:	03d80000 	bicseq	r0, r8, #0
    1e78:	0000041d 	andeq	r0, r0, sp, lsl r4
    1e7c:	0cde2e04 	ldcleq	14, cr2, [lr], {4}
    1e80:	03e00000 	mvneq	r0, #0
    1e84:	00000336 	andeq	r0, r0, r6, lsr r3
    1e88:	0cde2f04 	ldcleq	15, cr2, [lr], {4}
    1e8c:	03e40000 	mvneq	r0, #0
    1e90:	000003ee 	andeq	r0, r0, lr, ror #7
    1e94:	0cf33004 	ldcleq	0, cr3, [r3], #16
    1e98:	00e80000 	rsceq	r0, r8, r0
    1e9c:	00033d0e 	andeq	r3, r3, lr, lsl #26
    1ea0:	da310400 	ble	c42ea8 <_start-0xbf3c5158>
    1ea4:	0200000e 	andeq	r0, r0, #14
    1ea8:	05050d00 	streq	r0, [r5, #-3328]	; 0xfffff300
    1eac:	0000123a 	andeq	r1, r0, sl, lsr r2
    1eb0:	0003c303 	andeq	ip, r3, r3, lsl #6
    1eb4:	de060500 	cfsh32le	mvfx0, mvfx6, #0
    1eb8:	0000000c 	andeq	r0, r0, ip
    1ebc:	00024603 	andeq	r4, r2, r3, lsl #12
    1ec0:	de070500 	cfsh32le	mvfx0, mvfx7, #0
    1ec4:	0400000c 	streq	r0, [r0], #-12
    1ec8:	00031b03 	andeq	r1, r3, r3, lsl #22
    1ecc:	de080500 	cfsh32le	mvfx0, mvfx8, #0
    1ed0:	0800000c 	stmdaeq	r0, {r2, r3}
    1ed4:	00042403 	andeq	r2, r4, r3, lsl #8
    1ed8:	4a090500 	bmi	2432e0 <_start-0xbfdc4d20>
    1edc:	0c000012 	stceq	0, cr0, [r0], {18}
    1ee0:	00032003 	andeq	r2, r3, r3
    1ee4:	470a0500 	strmi	r0, [sl, -r0, lsl #10]
    1ee8:	8000000d 	andhi	r0, r0, sp
    1eec:	00042903 	andeq	r2, r4, r3, lsl #18
    1ef0:	5f0b0500 	svcpl	0x000b0500
    1ef4:	a4000012 	strge	r0, [r0], #-18	; 0xffffffee
    1ef8:	00034404 	andeq	r4, r3, r4, lsl #8
    1efc:	470c0500 	strmi	r0, [ip, -r0, lsl #10]
    1f00:	0000000d 	andeq	r0, r0, sp
    1f04:	042e0401 	strteq	r0, [lr], #-1025	; 0xfffffbff
    1f08:	0d050000 	stceq	0, cr0, [r5, #-0]
    1f0c:	0000125f 	andeq	r1, r0, pc, asr r2
    1f10:	aa040124 	bge	1023a8 <_start-0xbff05c58>
    1f14:	05000003 	streq	r0, [r0, #-3]
    1f18:	000d470e 	andeq	r4, sp, lr, lsl #14
    1f1c:	04018000 	streq	r8, [r1], #-0
    1f20:	00000433 	andeq	r0, r0, r3, lsr r4
    1f24:	125f0f05 	subsne	r0, pc, #5, 30
    1f28:	01a40000 			; <UNDEFINED> instruction: 0x01a40000
    1f2c:	00037904 	andeq	r7, r3, r4, lsl #18
    1f30:	47100500 	ldrmi	r0, [r0, -r0, lsl #10]
    1f34:	0000000d 	andeq	r0, r0, sp
    1f38:	04380402 	ldrteq	r0, [r8], #-1026	; 0xfffffbfe
    1f3c:	11050000 	mrsne	r0, (UNDEF: 5)
    1f40:	0000125f 	andeq	r1, r0, pc, asr r2
    1f44:	9b040224 	blls	1027dc <_start-0xbff05824>
    1f48:	05000003 	streq	r0, [r0, #-3]
    1f4c:	000d4712 	andeq	r4, sp, r2, lsl r7
    1f50:	04028000 	streq	r8, [r2], #-0
    1f54:	0000043d 	andeq	r0, r0, sp, lsr r4
    1f58:	125f1305 	subsne	r1, pc, #335544320	; 0x14000000
    1f5c:	02a40000 	adceq	r0, r4, #0
    1f60:	00031104 	andeq	r1, r3, r4, lsl #2
    1f64:	47140500 	ldrmi	r0, [r4, -r0, lsl #10]
    1f68:	0000000d 	andeq	r0, r0, sp
    1f6c:	04420403 	strbeq	r0, [r2], #-1027	; 0xfffffbfd
    1f70:	15050000 	strne	r0, [r5, #-0]
    1f74:	0000125f 	andeq	r1, r0, pc, asr r2
    1f78:	d7040324 	strle	r0, [r4, -r4, lsr #6]
    1f7c:	05000003 	streq	r0, [r0, #-3]
    1f80:	000d4716 	andeq	r4, sp, r6, lsl r7
    1f84:	04038000 	streq	r8, [r3], #-0
    1f88:	00000274 	andeq	r0, r0, r4, ror r2
    1f8c:	125f1705 	subsne	r1, pc, #1310720	; 0x140000
    1f90:	03a40000 			; <UNDEFINED> instruction: 0x03a40000
    1f94:	00036e04 	andeq	r6, r3, r4, lsl #28
    1f98:	74180500 	ldrvc	r0, [r8], #-1280	; 0xfffffb00
    1f9c:	00000012 	andeq	r0, r0, r2, lsl r0
    1fa0:	02790404 	rsbseq	r0, r9, #4, 8	; 0x4000000
    1fa4:	19050000 	stmdbne	r5, {}	; <UNPREDICTABLE>
    1fa8:	00001289 	andeq	r1, r0, r9, lsl #5
    1fac:	b9040520 	stmdblt	r4, {r5, r8, sl}
    1fb0:	05000003 	streq	r0, [r0, #-3]
    1fb4:	0012741a 	andseq	r7, r2, sl, lsl r4
    1fb8:	04080000 	streq	r0, [r8], #-0
    1fbc:	000003ee 	andeq	r0, r0, lr, ror #7
    1fc0:	12891b05 	addne	r1, r9, #5120	; 0x1400
    1fc4:	09200000 	stmdbeq	r0!, {}	; <UNPREDICTABLE>
    1fc8:	000e4f04 	andeq	r4, lr, r4, lsl #30
    1fcc:	ef1c0500 	svc	0x001c0500
    1fd0:	0000000d 	andeq	r0, r0, sp
    1fd4:	03f4040c 	mvnseq	r0, #12, 8	; 0xc000000
    1fd8:	1d050000 	stcne	0, cr0, [r5, #-0]
    1fdc:	0000129e 	muleq	r0, lr, r2
    1fe0:	09000c48 	stmdbeq	r0, {r3, r6, sl, fp}
    1fe4:	00000cde 	ldrdeq	r0, [r0], -lr
    1fe8:	0000124a 	andeq	r1, r0, sl, asr #4
    1fec:	000cd70a 	andeq	sp, ip, sl, lsl #14
    1ff0:	08001c00 	stmdaeq	r0, {sl, fp, ip}
    1ff4:	0000123a 	andeq	r1, r0, sl, lsr r2
    1ff8:	000cde09 	andeq	sp, ip, r9, lsl #28
    1ffc:	00125f00 	andseq	r5, r2, r0, lsl #30
    2000:	0cd70a00 	vldmiaeq	r7, {s1-s0}
    2004:	00160000 	andseq	r0, r6, r0
    2008:	00124f08 	andseq	r4, r2, r8, lsl #30
    200c:	0cde0900 			; <UNDEFINED> instruction: 0x0cde0900
    2010:	12740000 	rsbsne	r0, r4, #0
    2014:	d70a0000 	strle	r0, [sl, -r0]
    2018:	4700000c 	strmi	r0, [r0, -ip]
    201c:	12640800 	rsbne	r0, r4, #0, 16
    2020:	de090000 	cdple	0, 0, cr0, cr9, cr0, {0}
    2024:	8900000c 	stmdbhi	r0, {r2, r3}
    2028:	0a000012 	beq	2078 <_start-0xc0005f88>
    202c:	00000cd7 	ldrdeq	r0, [r0], -r7
    2030:	790800b7 	stmdbvc	r8, {r0, r1, r2, r4, r5, r7}
    2034:	09000012 	stmdbeq	r0, {r1, r4}
    2038:	00000cde 	ldrdeq	r0, [r0], -lr
    203c:	0000129e 	muleq	r0, lr, r2
    2040:	000cd70a 	andeq	sp, ip, sl, lsl #14
    2044:	08002d00 	stmdaeq	r0, {r8, sl, fp, sp}
    2048:	0000128e 	andeq	r1, r0, lr, lsl #5
    204c:	00027e0e 	andeq	r7, r2, lr, lsl #28
    2050:	fe1f0500 	cdp2	5, 1, cr0, cr15, cr0, {0}
    2054:	02000010 	andeq	r0, r0, #16
    2058:	23051004 	movwcs	r1, #20484	; 0x5004
    205c:	0000139e 	muleq	r0, lr, r3
    2060:	0003c303 	andeq	ip, r3, r3, lsl #6
    2064:	de240500 	cfsh64le	mvdx0, mvdx4, #0
    2068:	0000000c 	andeq	r0, r0, ip
    206c:	524d500d 	subpl	r5, sp, #13
    2070:	de250500 	cfsh64le	mvdx0, mvdx5, #0
    2074:	0400000c 	streq	r0, [r0], #-12
    2078:	5252420d 	subspl	r4, r2, #-805306368	; 0xd0000000
    207c:	de260500 	cfsh64le	mvdx0, mvdx6, #0
    2080:	0800000c 	stmdaeq	r0, {r2, r3}
    2084:	5241490d 	subpl	r4, r1, #212992	; 0x34000
    2088:	de270500 	cfsh64le	mvdx0, mvdx7, #0
    208c:	0c00000c 	stceq	0, cr0, [r0], {12}
    2090:	0002ba03 	andeq	fp, r2, r3, lsl #20
    2094:	de280500 	cfsh64le	mvdx0, mvdx8, #0
    2098:	1000000c 	andne	r0, r0, ip
    209c:	5250520d 	subspl	r5, r0, #-805306368	; 0xd0000000
    20a0:	de290500 	cfsh64le	mvdx0, mvdx9, #0
    20a4:	1400000c 	strne	r0, [r0], #-12
    20a8:	0003a403 	andeq	sl, r3, r3, lsl #8
    20ac:	de2a0500 	cfsh64le	mvdx0, mvdx10, #0
    20b0:	1800000c 	stmdane	r0, {r2, r3}
    20b4:	00039603 	andeq	r9, r3, r3, lsl #12
    20b8:	de2b0500 	cfsh64le	mvdx0, mvdx11, #0
    20bc:	1c00000c 	stcne	0, cr0, [r0], {12}
    20c0:	0003b403 	andeq	fp, r3, r3, lsl #8
    20c4:	de2c0500 	cfsh64le	mvdx0, mvdx12, #0
    20c8:	2000000c 	andcs	r0, r0, ip
    20cc:	0002b903 	andeq	fp, r2, r3, lsl #18
    20d0:	de2d0500 	cfsh64le	mvdx0, mvdx13, #0
    20d4:	2400000c 	strcs	r0, [r0], #-12
    20d8:	0003a303 	andeq	sl, r3, r3, lsl #6
    20dc:	de2e0500 	cfsh64le	mvdx0, mvdx14, #0
    20e0:	2800000c 	stmdacs	r0, {r2, r3}
    20e4:	00042403 	andeq	r2, r4, r3, lsl #8
    20e8:	ae2f0500 	cfsh64ge	mvdx0, mvdx15, #0
    20ec:	2c000013 	stccs	0, cr0, [r0], {19}
    20f0:	0002fe03 	andeq	pc, r2, r3, lsl #28
    20f4:	de300500 	cfabs32le	mvfx0, mvfx0
    20f8:	d000000c 	andle	r0, r0, ip
    20fc:	00042903 	andeq	r2, r4, r3, lsl #18
    2100:	c3310500 	teqgt	r1, #0, 10
    2104:	d4000013 	strle	r0, [r0], #-19	; 0xffffffed
    2108:	0002fc03 	andeq	pc, r2, r3, lsl #24
    210c:	de320500 	cfabs32le	mvfx0, mvfx2
    2110:	e000000c 	and	r0, r0, ip
    2114:	00042e03 	andeq	r2, r4, r3, lsl #28
    2118:	32330500 	eorscc	r0, r3, #0, 10
    211c:	e400000d 	str	r0, [r0], #-13
    2120:	00031b03 	andeq	r1, r3, r3, lsl #22
    2124:	de340500 	cfabs32le	mvfx0, mvfx4
    2128:	fc00000c 	stc2	0, cr0, [r0], {12}
    212c:	00043304 	andeq	r3, r4, r4, lsl #6
    2130:	d9350500 	ldmdble	r5!, {r8, sl}
    2134:	00000013 	andeq	r0, r0, r3, lsl r0
    2138:	03670401 	cmneq	r7, #16777216	; 0x1000000
    213c:	36050000 	strcc	r0, [r5], -r0
    2140:	00000cde 	ldrdeq	r0, [r0], -lr
    2144:	09001000 	stmdbeq	r0, {ip}
    2148:	00000cde 	ldrdeq	r0, [r0], -lr
    214c:	000013ae 	andeq	r1, r0, lr, lsr #7
    2150:	000cd70a 	andeq	sp, ip, sl, lsl #14
    2154:	08002800 	stmdaeq	r0, {fp, sp}
    2158:	0000139e 	muleq	r0, lr, r3
    215c:	000cde09 	andeq	sp, ip, r9, lsl #28
    2160:	0013c300 	andseq	ip, r3, r0, lsl #6
    2164:	0cd70a00 	vldmiaeq	r7, {s1-s0}
    2168:	00020000 	andeq	r0, r2, r0
    216c:	0013b308 	andseq	fp, r3, r8, lsl #6
    2170:	0cde0900 			; <UNDEFINED> instruction: 0x0cde0900
    2174:	13d90000 	bicsne	r0, r9, #0
    2178:	d70f0000 	strle	r0, [pc, -r0]
    217c:	bf00000c 	svclt	0x0000000c
    2180:	c8080003 	stmdagt	r8, {r0, r1}
    2184:	0e000013 	mcreq	0, 0, r0, cr0, cr3, {0}
    2188:	000002d5 	ldrdeq	r0, [r0], -r5
    218c:	12ae3805 	adcne	r3, lr, #327680	; 0x50000
    2190:	4f0e0000 	svcmi	0x000e0000
    2194:	06000005 	streq	r0, [r0], -r5
    2198:	000cd709 	andeq	sp, ip, r9, lsl #14
    219c:	04071000 	streq	r1, [r7], #-0
    21a0:	00000cd7 	ldrdeq	r0, [r0], -r7
    21a4:	140e0c06 	strne	r0, [lr], #-3078	; 0xfffff3fa
    21a8:	0f110000 	svceq	0x00110000
    21ac:	0000000d 	andeq	r0, r0, sp
    21b0:	000e5511 	andeq	r5, lr, r1, lsl r5
    21b4:	0e000100 	adfeqs	f0, f0, f0
    21b8:	00000a03 	andeq	r0, r0, r3, lsl #20
    21bc:	13f40f06 	mvnsne	r0, #6, 30
    21c0:	4b120000 	blmi	4821c8 <_start-0xbfb85e38>
    21c4:	0100000f 	tsteq	r0, pc
    21c8:	009b5858 	addseq	r5, fp, r8, asr r8
    21cc:	000218c0 	andeq	r1, r2, r0, asr #17
    21d0:	669c0100 	ldrvs	r0, [ip], r0, lsl #2
    21d4:	13000014 	movwne	r0, #20
    21d8:	000002ac 	andeq	r0, r0, ip, lsr #5
    21dc:	13e95801 	mvnne	r5, #65536	; 0x10000
    21e0:	91020000 	mrsls	r0, (UNDEF: 2)
    21e4:	07121370 			; <UNDEFINED> instruction: 0x07121370
    21e8:	58010000 	stmdapl	r1, {}	; <UNPREDICTABLE>
    21ec:	000013e9 	andeq	r1, r0, r9, ror #7
    21f0:	146c9102 	strbtne	r9, [ip], #-258	; 0xfffffefe
    21f4:	01006e6e 	tsteq	r0, lr, ror #28
    21f8:	0013e95b 	andseq	lr, r3, fp, asr r9
    21fc:	78910200 	ldmvc	r1, {r9}
    2200:	000dfb15 	andeq	pc, sp, r5, lsl fp	; <UNPREDICTABLE>
    2204:	e95c0100 	ldmdb	ip, {r8}^
    2208:	02000013 	andeq	r0, r0, #19
    220c:	12007491 	andne	r7, r0, #-1862270976	; 0x91000000
    2210:	000006d9 	ldrdeq	r0, [r0], -r9
    2214:	992c3201 	stmdbls	ip!, {r0, r9, ip, sp}
    2218:	022cc000 	eoreq	ip, ip, #0
    221c:	9c010000 	stcls	0, cr0, [r1], {-0}
    2220:	000014c1 	andeq	r1, r0, r1, asr #9
    2224:	000cf613 	andeq	pc, ip, r3, lsl r6	; <UNPREDICTABLE>
    2228:	e9320100 	ldmdb	r2!, {r8}
    222c:	02000013 	andeq	r0, r0, #19
    2230:	74137091 	ldrvc	r7, [r3], #-145	; 0xffffff6f
    2234:	0100000c 	tsteq	r0, ip
    2238:	0013e932 	andseq	lr, r3, r2, lsr r9
    223c:	6c910200 	lfmvs	f0, 4, [r1], {0}
    2240:	000e6913 	andeq	r6, lr, r3, lsl r9
    2244:	0e320100 	rsfeqs	f0, f2, f0
    2248:	02000014 	andeq	r0, r0, #20
    224c:	6e146891 	mrcvs	8, 0, r6, cr4, cr1, {4}
    2250:	3501006e 	strcc	r0, [r1, #-110]	; 0xffffff92
    2254:	000013e9 	andeq	r1, r0, r9, ror #7
    2258:	15789102 	ldrbne	r9, [r8, #-258]!	; 0xfffffefe
    225c:	00000dfb 	strdeq	r0, [r0], -fp
    2260:	13e93601 	mvnne	r3, #1048576	; 0x100000
    2264:	91020000 	mrsls	r0, (UNDEF: 2)
    2268:	31160074 	tstcc	r6, r4, ror r0
    226c:	0100000c 	tsteq	r0, ip
    2270:	00986016 	addseq	r6, r8, r6, lsl r0
    2274:	0000ccc0 	andeq	ip, r0, r0, asr #25
    2278:	009c0100 	addseq	r0, ip, r0, lsl #2
    227c:	00000f13 	andeq	r0, r0, r3, lsl pc
    2280:	04d20004 	ldrbeq	r0, [r2], #4
    2284:	01040000 	mrseq	r0, (UNDEF: 4)
    2288:	00000057 	andeq	r0, r0, r7, asr r0
    228c:	00105f0c 	andseq	r5, r0, ip, lsl #30
    2290:	00018a00 	andeq	r8, r1, r0, lsl #20
    2294:	009d7000 	addseq	r7, sp, r0
    2298:	000270c0 	andeq	r7, r2, r0, asr #1
    229c:	0005cf00 	andeq	ip, r5, r0, lsl #30
    22a0:	10000200 	andne	r0, r0, r0, lsl #4
    22a4:	0cd70402 	cfldrdeq	mvd0, [r7], {2}
    22a8:	a5030000 	strge	r0, [r3, #-0]
    22ac:	0200000f 	andeq	r0, r0, #15
    22b0:	000cde05 	andeq	sp, ip, r5, lsl #28
    22b4:	7b030000 	blvc	c22bc <_start-0xbff45d44>
    22b8:	02000006 	andeq	r0, r0, #6
    22bc:	000cf306 	andeq	pc, ip, r6, lsl #6
    22c0:	4d030400 	cfstrsmi	mvf0, [r3, #-0]
    22c4:	02000007 	andeq	r0, r0, #7
    22c8:	000cde07 	andeq	sp, ip, r7, lsl #28
    22cc:	1b030c00 	blne	c52d4 <_start-0xbff42d2c>
    22d0:	0200000a 	andeq	r0, r0, #10
    22d4:	000cde08 	andeq	sp, ip, r8, lsl #28
    22d8:	80031000 	andhi	r1, r3, r0
    22dc:	02000006 	andeq	r0, r0, #6
    22e0:	000d0809 	andeq	r0, sp, r9, lsl #16
    22e4:	c4031400 	strgt	r1, [r3], #-1024	; 0xfffffc00
    22e8:	02000008 	andeq	r0, r0, #8
    22ec:	000cde0a 	andeq	sp, ip, sl, lsl #28
    22f0:	4d031800 	stcmi	8, cr1, [r3, #-0]
    22f4:	0200000e 	andeq	r0, r0, #14
    22f8:	000cde0b 	andeq	sp, ip, fp, lsl #28
    22fc:	9c031c00 	stcls	12, cr1, [r3], {-0}
    2300:	02000008 	andeq	r0, r0, #8
    2304:	000cde0c 	andeq	sp, ip, ip, lsl #28
    2308:	c1032000 	mrsgt	r2, (UNDEF: 3)
    230c:	0200000f 	andeq	r0, r0, #15
    2310:	000cde0d 	andeq	sp, ip, sp, lsl #28
    2314:	14032400 	strne	r2, [r3], #-1024	; 0xfffffc00
    2318:	0200000b 	andeq	r0, r0, #11
    231c:	000cde0e 	andeq	sp, ip, lr, lsl #28
    2320:	a9032800 	stmdbge	r3, {fp, sp}
    2324:	0200000b 	andeq	r0, r0, #11
    2328:	000cde0f 	andeq	sp, ip, pc, lsl #28
    232c:	ad032c00 	stcge	12, cr2, [r3, #-0]
    2330:	02000004 	andeq	r0, r0, #4
    2334:	000cde10 	andeq	sp, ip, r0, lsl lr
    2338:	85033000 	strhi	r3, [r3, #-0]
    233c:	02000006 	andeq	r0, r0, #6
    2340:	000cf311 	andeq	pc, ip, r1, lsl r3	; <UNPREDICTABLE>
    2344:	fd033400 	stc2	4, cr3, [r3, #-0]
    2348:	02000004 	andeq	r0, r0, #4
    234c:	000cde12 	andeq	sp, ip, r2, lsl lr
    2350:	a9033c00 	stmdbge	r3, {sl, fp, ip, sp}
    2354:	0200000c 	andeq	r0, r0, #12
    2358:	000cde13 	andeq	sp, ip, r3, lsl lr
    235c:	53034000 	movwpl	r4, #12288	; 0x3000
    2360:	0200000a 	andeq	r0, r0, #10
    2364:	000cde14 	andeq	sp, ip, r4, lsl lr
    2368:	2d034400 	cfstrscs	mvf4, [r3, #-0]
    236c:	0200000d 	andeq	r0, r0, #13
    2370:	000cde15 	andeq	sp, ip, r5, lsl lr
    2374:	8a034800 	bhi	d437c <_start-0xbff33c84>
    2378:	02000006 	andeq	r0, r0, #6
    237c:	000d1d16 	andeq	r1, sp, r6, lsl sp
    2380:	80034c00 	andhi	r4, r3, r0, lsl #24
    2384:	0200000f 	andeq	r0, r0, #15
    2388:	000cde17 	andeq	sp, ip, r7, lsl lr
    238c:	97038000 	strls	r8, [r3, -r0]
    2390:	02000009 	andeq	r0, r0, #9
    2394:	000cde18 	andeq	sp, ip, r8, lsl lr
    2398:	a1038400 	tstge	r3, r0, lsl #8
    239c:	02000009 	andeq	r0, r0, #9
    23a0:	000cde19 	andeq	sp, ip, r9, lsl lr
    23a4:	71038800 	tstvc	r3, r0, lsl #16
    23a8:	02000006 	andeq	r0, r0, #6
    23ac:	000cde1a 	andeq	sp, ip, sl, lsl lr
    23b0:	35038c00 	strcc	r8, [r3, #-3072]	; 0xfffff400
    23b4:	02000008 	andeq	r0, r0, #8
    23b8:	000cde1b 	andeq	sp, ip, fp, lsl lr
    23bc:	26039000 	strcs	r9, [r3], -r0
    23c0:	0200000d 	andeq	r0, r0, #13
    23c4:	000cde1c 	andeq	sp, ip, ip, lsl lr
    23c8:	c5039400 	strgt	r9, [r3, #-1024]	; 0xfffffc00
    23cc:	02000005 	andeq	r0, r0, #5
    23d0:	000cde1d 	andeq	sp, ip, sp, lsl lr
    23d4:	1e039800 	cdpne	8, 0, cr9, cr3, cr0, {0}
    23d8:	0200000b 	andeq	r0, r0, #11
    23dc:	000cde1e 	andeq	sp, ip, lr, lsl lr
    23e0:	e9039c00 	stmdb	r3, {sl, fp, ip, pc}
    23e4:	02000007 	andeq	r0, r0, #7
    23e8:	000cde1f 	andeq	sp, ip, pc, lsl lr
    23ec:	0f03a000 	svceq	0x0003a000
    23f0:	02000010 	andeq	r0, r0, #16
    23f4:	000cde20 	andeq	sp, ip, r0, lsr #28
    23f8:	8f03a400 	svchi	0x0003a400
    23fc:	02000006 	andeq	r0, r0, #6
    2400:	000d3221 	andeq	r3, sp, r1, lsr #4
    2404:	3f03a800 	svccc	0x0003a800
    2408:	0200000f 	andeq	r0, r0, #15
    240c:	000cde22 	andeq	sp, ip, r2, lsr #28
    2410:	e903c000 	stmdb	r3, {lr, pc}
    2414:	02000005 	andeq	r0, r0, #5
    2418:	000cde23 	andeq	sp, ip, r3, lsr #28
    241c:	a003c400 	andge	ip, r3, r0, lsl #8
    2420:	02000005 	andeq	r0, r0, #5
    2424:	000cde24 	andeq	sp, ip, r4, lsr #28
    2428:	2903c800 	stmdbcs	r3, {fp, lr, pc}
    242c:	0200000f 	andeq	r0, r0, #15
    2430:	000cde25 	andeq	sp, ip, r5, lsr #28
    2434:	bb03cc00 	bllt	f543c <_start-0xbff12bc4>
    2438:	0200000b 	andeq	r0, r0, #11
    243c:	000cde26 	andeq	sp, ip, r6, lsr #28
    2440:	5b03d000 	blpl	f6448 <_start-0xbff11bb8>
    2444:	0200000a 	andeq	r0, r0, #10
    2448:	000cde27 	andeq	sp, ip, r7, lsr #28
    244c:	b203d400 	andlt	sp, r3, #0, 8
    2450:	0200000b 	andeq	r0, r0, #11
    2454:	000cde28 	andeq	sp, ip, r8, lsr #28
    2458:	9403d800 	strls	sp, [r3], #-2048	; 0xfffff800
    245c:	02000006 	andeq	r0, r0, #6
    2460:	000d4729 	andeq	r4, sp, r9, lsr #14
    2464:	f304dc00 			; <UNDEFINED> instruction: 0xf304dc00
    2468:	02000004 	andeq	r0, r0, #4
    246c:	000cde2a 	andeq	sp, ip, sl, lsr #28
    2470:	04010000 	streq	r0, [r1], #-0
    2474:	00000b5f 	andeq	r0, r0, pc, asr fp
    2478:	0cde2b02 	vldmiaeq	lr, {d18}
    247c:	01040000 	mrseq	r0, (UNDEF: 4)
    2480:	000e5d04 	andeq	r5, lr, r4, lsl #26
    2484:	de2c0200 	cdple	2, 2, cr0, cr12, cr0, {0}
    2488:	0800000c 	stmdaeq	r0, {r2, r3}
    248c:	0c950401 	cfldrseq	mvf0, [r5], {1}
    2490:	2d020000 	stccs	0, cr0, [r2, #-0]
    2494:	00000cde 	ldrdeq	r0, [r0], -lr
    2498:	fc04010c 	stc2	1, cr0, [r4], {12}
    249c:	0200000b 	andeq	r0, r0, #11
    24a0:	000cde2e 	andeq	sp, ip, lr, lsr #28
    24a4:	04011000 	streq	r1, [r1], #-0
    24a8:	00000d7f 	andeq	r0, r0, pc, ror sp
    24ac:	0cde2f02 	ldcleq	15, cr2, [lr], {2}
    24b0:	01140000 	tsteq	r4, r0
    24b4:	00069904 	andeq	r9, r6, r4, lsl #18
    24b8:	5c300200 	lfmpl	f0, 4, [r0], #-0
    24bc:	1800000d 	stmdane	r0, {r0, r2, r3}
    24c0:	0f180401 	svceq	0x00180401
    24c4:	31020000 	mrscc	r0, (UNDEF: 2)
    24c8:	00000cde 	ldrdeq	r0, [r0], -lr
    24cc:	05040140 	streq	r0, [r4, #-320]	; 0xfffffec0
    24d0:	0200000b 	andeq	r0, r0, #11
    24d4:	000cde32 	andeq	sp, ip, r2, lsr lr
    24d8:	04014400 	streq	r4, [r1], #-1024	; 0xfffffc00
    24dc:	0000069e 	muleq	r0, lr, r6
    24e0:	0d713302 	ldcleq	3, cr3, [r1, #-8]!
    24e4:	01480000 	mrseq	r0, (UNDEF: 72)
    24e8:	000feb04 	andeq	lr, pc, r4, lsl #22
    24ec:	de340200 	cdple	2, 3, cr0, cr4, cr0, {0}
    24f0:	8000000c 	andhi	r0, r0, ip
    24f4:	06650401 	strbteq	r0, [r5], -r1, lsl #8
    24f8:	35020000 	strcc	r0, [r2, #-0]
    24fc:	00000cde 	ldrdeq	r0, [r0], -lr
    2500:	07040184 	streq	r0, [r4, -r4, lsl #3]
    2504:	0200000c 	andeq	r0, r0, #12
    2508:	000cde36 	andeq	sp, ip, r6, lsr lr
    250c:	04018800 	streq	r8, [r1], #-2048	; 0xfffff800
    2510:	00000f1d 	andeq	r0, r0, sp, lsl pc
    2514:	0cde3702 	ldcleq	7, cr3, [lr], {2}
    2518:	018c0000 	orreq	r0, ip, r0
    251c:	0008e604 	andeq	lr, r8, r4, lsl #12
    2520:	de380200 	cdple	2, 3, cr0, cr8, cr0, {0}
    2524:	9000000c 	andls	r0, r0, ip
    2528:	05dd0401 	ldrbeq	r0, [sp, #1025]	; 0x401
    252c:	39020000 	stmdbcc	r2, {}	; <UNPREDICTABLE>
    2530:	00000cde 	ldrdeq	r0, [r0], -lr
    2534:	f0040194 			; <UNDEFINED> instruction: 0xf0040194
    2538:	0200000b 	andeq	r0, r0, #11
    253c:	000cde3a 	andeq	sp, ip, sl, lsr lr
    2540:	04019800 	streq	r9, [r1], #-2048	; 0xfffff800
    2544:	000009bb 			; <UNDEFINED> instruction: 0x000009bb
    2548:	0cde3b02 	vldmiaeq	lr, {d19}
    254c:	019c0000 	orrseq	r0, ip, r0
    2550:	00061304 	andeq	r1, r6, r4, lsl #6
    2554:	de3c0200 	cdple	2, 3, cr0, cr12, cr0, {0}
    2558:	a000000c 	andge	r0, r0, ip
    255c:	09b90401 	ldmibeq	r9!, {r0, sl}
    2560:	3d020000 	stccc	0, cr0, [r2, #-0]
    2564:	00000cde 	ldrdeq	r0, [r0], -lr
    2568:	a30401a4 	movwge	r0, #16804	; 0x41a4
    256c:	02000006 	andeq	r0, r0, #6
    2570:	000d863e 	andeq	r8, sp, lr, lsr r6
    2574:	0401a800 	streq	sl, [r1], #-2048	; 0xfffff800
    2578:	000007c5 	andeq	r0, r0, r5, asr #15
    257c:	0cde3f02 	ldcleq	15, cr3, [lr], {2}
    2580:	02000000 	andeq	r0, r0, #0
    2584:	000a8404 	andeq	r8, sl, r4, lsl #8
    2588:	de400200 	cdple	2, 4, cr0, cr0, cr0, {0}
    258c:	0400000c 	streq	r0, [r0], #-12
    2590:	0e020402 	cdpeq	4, 0, cr0, cr2, cr2, {0}
    2594:	41020000 	mrsmi	r0, (UNDEF: 2)
    2598:	00000cde 	ldrdeq	r0, [r0], -lr
    259c:	df040208 	svcle	0x00040208
    25a0:	02000004 	andeq	r0, r0, #4
    25a4:	000cde42 	andeq	sp, ip, r2, asr #28
    25a8:	04020c00 	streq	r0, [r2], #-3072	; 0xfffff400
    25ac:	00000485 	andeq	r0, r0, r5, lsl #9
    25b0:	0cde4302 	ldcleq	3, cr4, [lr], {2}
    25b4:	02100000 	andseq	r0, r0, #0
    25b8:	000e8c04 	andeq	r8, lr, r4, lsl #24
    25bc:	de440200 	cdple	2, 4, cr0, cr4, cr0, {0}
    25c0:	1400000c 	strne	r0, [r0], #-12
    25c4:	05ac0402 	streq	r0, [ip, #1026]!	; 0x402
    25c8:	45020000 	strmi	r0, [r2, #-0]
    25cc:	00000cde 	ldrdeq	r0, [r0], -lr
    25d0:	73040218 	movwvc	r0, #16920	; 0x4218
    25d4:	02000008 	andeq	r0, r0, #8
    25d8:	000cde46 	andeq	sp, ip, r6, asr #28
    25dc:	04021c00 	streq	r1, [r2], #-3072	; 0xfffff400
    25e0:	00000cff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    25e4:	0cde4702 	ldcleq	7, cr4, [lr], {2}
    25e8:	02200000 	eoreq	r0, r0, #0
    25ec:	00044704 	andeq	r4, r4, r4, lsl #14
    25f0:	de480200 	cdple	2, 4, cr0, cr8, cr0, {0}
    25f4:	2400000c 	strcs	r0, [r0], #-12
    25f8:	07d30402 	ldrbeq	r0, [r3, r2, lsl #8]
    25fc:	49020000 	stmdbmi	r2, {}	; <UNPREDICTABLE>
    2600:	00000d86 	andeq	r0, r0, r6, lsl #27
    2604:	cf040228 	svcgt	0x00040228
    2608:	02000005 	andeq	r0, r0, #5
    260c:	000cde4a 	andeq	sp, ip, sl, asr #28
    2610:	04028000 	streq	r8, [r2], #-0
    2614:	000008b6 			; <UNDEFINED> instruction: 0x000008b6
    2618:	0cde4b02 	vldmiaeq	lr, {d20}
    261c:	02840000 	addeq	r0, r4, #0
    2620:	000c3a04 	andeq	r3, ip, r4, lsl #20
    2624:	de4c0200 	cdple	2, 4, cr0, cr12, cr0, {0}
    2628:	8800000c 	stmdahi	r0, {r2, r3}
    262c:	0f580402 	svceq	0x00580402
    2630:	4d020000 	stcmi	0, cr0, [r2, #-0]
    2634:	00000cde 	ldrdeq	r0, [r0], -lr
    2638:	e504028c 	str	r0, [r4, #-652]	; 0xfffffd74
    263c:	02000009 	andeq	r0, r0, #9
    2640:	000cde4e 	andeq	sp, ip, lr, asr #28
    2644:	04029000 	streq	r9, [r2], #-0
    2648:	00000cd8 	ldrdeq	r0, [r0], -r8
    264c:	0cde4f02 	ldcleq	15, cr4, [lr], {2}
    2650:	02940000 	addseq	r0, r4, #0
    2654:	00103f04 	andseq	r3, r0, r4, lsl #30
    2658:	de500200 	cdple	2, 5, cr0, cr0, cr0, {0}
    265c:	9800000c 	stmdals	r0, {r2, r3}
    2660:	06b40402 	ldrteq	r0, [r4], r2, lsl #8
    2664:	51020000 	mrspl	r0, (UNDEF: 2)
    2668:	00000cde 	ldrdeq	r0, [r0], -lr
    266c:	b504029c 	strlt	r0, [r4, #-668]	; 0xfffffd64
    2670:	02000004 	andeq	r0, r0, #4
    2674:	000d9b52 	andeq	r9, sp, r2, asr fp
    2678:	0402a000 	streq	sl, [r2], #-0
    267c:	00000e9a 	muleq	r0, sl, lr
    2680:	0cde5302 	ldcleq	3, cr5, [lr], {2}
    2684:	03000000 	movweq	r0, #0
    2688:	000eaa04 	andeq	sl, lr, r4, lsl #20
    268c:	de540200 	cdple	2, 5, cr0, cr4, cr0, {0}
    2690:	0400000c 	streq	r0, [r0], #-12
    2694:	0dc80403 	cfstrdeq	mvd0, [r8, #12]
    2698:	55020000 	strpl	r0, [r2, #-0]
    269c:	00000cde 	ldrdeq	r0, [r0], -lr
    26a0:	75040308 	strvc	r0, [r4, #-776]	; 0xfffffcf8
    26a4:	02000004 	andeq	r0, r0, #4
    26a8:	000cde56 	andeq	sp, ip, r6, asr lr
    26ac:	04030c00 	streq	r0, [r3], #-3072	; 0xfffff400
    26b0:	00000b38 	andeq	r0, r0, r8, lsr fp
    26b4:	0cde5702 	ldcleq	7, cr5, [lr], {2}
    26b8:	03100000 	tsteq	r0, #0
    26bc:	000e1a04 	andeq	r1, lr, r4, lsl #20
    26c0:	de580200 	cdple	2, 5, cr0, cr8, cr0, {0}
    26c4:	1400000c 	strne	r0, [r0], #-12
    26c8:	0d510403 	cfldrdeq	mvd0, [r1, #-12]
    26cc:	59020000 	stmdbpl	r2, {}	; <UNPREDICTABLE>
    26d0:	00000cde 	ldrdeq	r0, [r0], -lr
    26d4:	18040318 	stmdane	r4, {r3, r4, r8, r9}
    26d8:	02000010 	andeq	r0, r0, #16
    26dc:	000cde5a 	andeq	sp, ip, sl, asr lr
    26e0:	04031c00 	streq	r1, [r3], #-3072	; 0xfffff400
    26e4:	00000700 	andeq	r0, r0, r0, lsl #14
    26e8:	0cde5b02 	vldmiaeq	lr, {d21}
    26ec:	03200000 	nopeq	{0}	; <UNPREDICTABLE>
    26f0:	0009d304 	andeq	sp, r9, r4, lsl #6
    26f4:	de5c0200 	cdple	2, 5, cr0, cr12, cr0, {0}
    26f8:	2400000c 	strcs	r0, [r0], #-12
    26fc:	04bb0403 	ldrteq	r0, [fp], #1027	; 0x403
    2700:	5d020000 	stcpl	0, cr0, [r2, #-0]
    2704:	00000d86 	andeq	r0, r0, r6, lsl #27
    2708:	67040328 	strvs	r0, [r4, -r8, lsr #6]
    270c:	0200000a 	andeq	r0, r0, #10
    2710:	000cde5e 	andeq	sp, ip, lr, asr lr
    2714:	04038000 	streq	r8, [r3], #-0
    2718:	00000d8a 	andeq	r0, r0, sl, lsl #27
    271c:	0cde5f02 	ldcleq	15, cr5, [lr], {2}
    2720:	03840000 	orreq	r0, r4, #0
    2724:	000c5604 	andeq	r5, ip, r4, lsl #12
    2728:	de600200 	cdple	2, 6, cr0, cr0, cr0, {0}
    272c:	8800000c 	stmdahi	r0, {r2, r3}
    2730:	0f700403 	svceq	0x00700403
    2734:	61020000 	mrsvs	r0, (UNDEF: 2)
    2738:	00000cde 	ldrdeq	r0, [r0], -lr
    273c:	5504038c 	strpl	r0, [r4, #-908]	; 0xfffffc74
    2740:	02000006 	andeq	r0, r0, #6
    2744:	000cde62 	andeq	sp, ip, r2, ror #28
    2748:	04039000 	streq	r9, [r3], #-0
    274c:	000008fe 	strdeq	r0, [r0], -lr
    2750:	0cde6302 	ldcleq	3, cr6, [lr], {2}
    2754:	03940000 	orrseq	r0, r4, #0
    2758:	00081f04 	andeq	r1, r8, r4, lsl #30
    275c:	de640200 	cdple	2, 6, cr0, cr4, cr0, {0}
    2760:	9800000c 	stmdals	r0, {r2, r3}
    2764:	0af50403 	beq	ffd43778 <__bss_end__+0x3fd38cf0>
    2768:	65020000 	strvs	r0, [r2, #-0]
    276c:	00000cde 	ldrdeq	r0, [r0], -lr
    2770:	c104039c 			; <UNDEFINED> instruction: 0xc104039c
    2774:	02000004 	andeq	r0, r0, #4
    2778:	000d9b66 	andeq	r9, sp, r6, ror #22
    277c:	0403a000 	streq	sl, [r3], #-0
    2780:	00000558 	andeq	r0, r0, r8, asr r5
    2784:	0cde6702 	ldcleq	7, cr6, [lr], {2}
    2788:	04000000 	streq	r0, [r0], #-0
    278c:	00094804 	andeq	r4, r9, r4, lsl #16
    2790:	de680200 	cdple	2, 6, cr0, cr8, cr0, {0}
    2794:	0400000c 	streq	r0, [r0], #-12
    2798:	10360404 	eorsne	r0, r6, r4, lsl #8
    279c:	69020000 	stmdbvs	r2, {}	; <UNPREDICTABLE>
    27a0:	00000cde 	ldrdeq	r0, [r0], -lr
    27a4:	45040408 	strmi	r0, [r4, #-1032]	; 0xfffffbf8
    27a8:	0200000a 	andeq	r0, r0, #10
    27ac:	000cde6a 	andeq	sp, ip, sl, ror #28
    27b0:	04040c00 	streq	r0, [r4], #-3072	; 0xfffff400
    27b4:	00000d71 	andeq	r0, r0, r1, ror sp
    27b8:	0cde6b02 	vldmiaeq	lr, {d22}
    27bc:	04100000 	ldreq	r0, [r0], #-0
    27c0:	000bd004 	andeq	sp, fp, r4
    27c4:	de6c0200 	cdple	2, 6, cr0, cr12, cr0, {0}
    27c8:	1400000c 	strne	r0, [r0], #-12
    27cc:	0db20404 	cfldrseq	mvf0, [r2, #16]!
    27d0:	6d020000 	stcvs	0, cr0, [r2, #-0]
    27d4:	00000cde 	ldrdeq	r0, [r0], -lr
    27d8:	0e040418 	cfmvdlreq	mvd4, r0
    27dc:	02000009 	andeq	r0, r0, #9
    27e0:	000cde6e 	andeq	sp, ip, lr, ror #28
    27e4:	04041c00 	streq	r1, [r4], #-3072	; 0xfffff400
    27e8:	00000e2a 	andeq	r0, r0, sl, lsr #28
    27ec:	0cde6f02 	ldcleq	15, cr6, [lr], {2}
    27f0:	04200000 	strteq	r0, [r0], #-0
    27f4:	0004c704 	andeq	ip, r4, r4, lsl #14
    27f8:	b0700200 	rsbslt	r0, r0, r0, lsl #4
    27fc:	2400000d 	strcs	r0, [r0], #-13
    2800:	08000404 	stmdaeq	r0, {r2, sl}
    2804:	71020000 	mrsvc	r0, (UNDEF: 2)
    2808:	00000cde 	ldrdeq	r0, [r0], -lr
    280c:	3c040800 	stccc	8, cr0, [r4], {-0}
    2810:	0200000a 	andeq	r0, r0, #10
    2814:	000cde72 	andeq	sp, ip, r2, ror lr
    2818:	04080400 	streq	r0, [r8], #-1024	; 0xfffffc00
    281c:	00000faa 	andeq	r0, r0, sl, lsr #31
    2820:	0cde7302 	ldcleq	3, cr7, [lr], {2}
    2824:	08080000 	stmdaeq	r8, {}	; <UNPREDICTABLE>
    2828:	000a2404 	andeq	r2, sl, r4, lsl #8
    282c:	de740200 	cdple	2, 7, cr0, cr4, cr0, {0}
    2830:	0c00000c 	stceq	0, cr0, [r0], {12}
    2834:	04cd0408 	strbeq	r0, [sp], #1032	; 0x408
    2838:	75020000 	strvc	r0, [r2, #-0]
    283c:	00000dc5 	andeq	r0, r0, r5, asr #27
    2840:	23040810 	movwcs	r0, #18448	; 0x4810
    2844:	0200000c 	andeq	r0, r0, #12
    2848:	000cde76 	andeq	sp, ip, r6, ror lr
    284c:	04082000 	streq	r2, [r8], #-0
    2850:	000007bc 			; <UNDEFINED> instruction: 0x000007bc
    2854:	0cde7702 	ldcleq	7, cr7, [lr], {2}
    2858:	08240000 	stmdaeq	r4!, {}	; <UNPREDICTABLE>
    285c:	000f8704 	andeq	r8, pc, r4, lsl #14
    2860:	de780200 	cdple	2, 7, cr0, cr8, cr0, {0}
    2864:	2800000c 	stmdacs	r0, {r2, r3}
    2868:	0aa00408 	beq	fe803890 <__bss_end__+0x3e7f8e08>
    286c:	79020000 	stmdbvc	r2, {}	; <UNPREDICTABLE>
    2870:	00000cde 	ldrdeq	r0, [r0], -lr
    2874:	7f04082c 	svcvc	0x0004082c
    2878:	0200000c 	andeq	r0, r0, #12
    287c:	000cde7a 	andeq	sp, ip, sl, ror lr
    2880:	04083000 	streq	r3, [r8], #-0
    2884:	0000064c 	andeq	r0, r0, ip, asr #12
    2888:	0cde7b02 	vldmiaeq	lr, {d23}
    288c:	08340000 	ldmdaeq	r4!, {}	; <UNPREDICTABLE>
    2890:	000df204 	andeq	pc, sp, r4, lsl #4
    2894:	de7c0200 	cdple	2, 7, cr0, cr12, cr0, {0}
    2898:	3800000c 	stmdacc	r0, {r2, r3}
    289c:	09550408 	ldmdbeq	r5, {r3, sl}^
    28a0:	7d020000 	stcvc	0, cr0, [r2, #-0]
    28a4:	00000cde 	ldrdeq	r0, [r0], -lr
    28a8:	d304083c 	movwle	r0, #18492	; 0x483c
    28ac:	02000004 	andeq	r0, r0, #4
    28b0:	000dda7e 	andeq	sp, sp, lr, ror sl
    28b4:	04084000 	streq	r4, [r8], #-0
    28b8:	00000aaa 	andeq	r0, r0, sl, lsr #21
    28bc:	0cde7f02 	ldcleq	15, cr7, [lr], {2}
    28c0:	08800000 	stmeq	r0, {}	; <UNPREDICTABLE>
    28c4:	000f9b04 	andeq	r9, pc, r4, lsl #22
    28c8:	de800200 	cdple	2, 8, cr0, cr0, cr0, {0}
    28cc:	8400000c 	strhi	r0, [r0], #-12
    28d0:	0cb20408 	cfldrseq	mvf0, [r2], #32
    28d4:	81020000 	mrshi	r0, (UNDEF: 2)
    28d8:	00000cde 	ldrdeq	r0, [r0], -lr
    28dc:	91040888 	smlabbls	r4, r8, r8, r0
    28e0:	0200000f 	andeq	r0, r0, #15
    28e4:	000cde82 	andeq	sp, ip, r2, lsl #29
    28e8:	04088c00 	streq	r8, [r8], #-3072	; 0xfffff400
    28ec:	00000b56 	andeq	r0, r0, r6, asr fp
    28f0:	0cde8302 	ldcleq	3, cr8, [lr], {2}
    28f4:	08900000 	ldmeq	r0, {}	; <UNPREDICTABLE>
    28f8:	000b0d04 	andeq	r0, fp, r4, lsl #26
    28fc:	de840200 	cdple	2, 8, cr0, cr4, cr0, {0}
    2900:	9400000c 	strls	r0, [r0], #-12
    2904:	0b280408 	bleq	a0392c <_start-0xbf6046d4>
    2908:	85020000 	strhi	r0, [r2, #-0]
    290c:	00000cde 	ldrdeq	r0, [r0], -lr
    2910:	10040898 	mulne	r4, r8, r8
    2914:	0200000e 	andeq	r0, r0, #14
    2918:	000cde86 	andeq	sp, ip, r6, lsl #29
    291c:	04089c00 	streq	r9, [r8], #-3072	; 0xfffff400
    2920:	00000abf 			; <UNDEFINED> instruction: 0x00000abf
    2924:	0cde8702 	ldcleq	7, cr8, [lr], {2}
    2928:	08a00000 	stmiaeq	r0!, {}	; <UNPREDICTABLE>
    292c:	0006c204 	andeq	ip, r6, r4, lsl #4
    2930:	de880200 	cdple	2, 8, cr0, cr8, cr0, {0}
    2934:	a400000c 	strge	r0, [r0], #-12
    2938:	04d90408 	ldrbeq	r0, [r9], #1032	; 0x408
    293c:	89020000 	stmdbhi	r2, {}	; <UNPREDICTABLE>
    2940:	00000d32 	andeq	r0, r0, r2, lsr sp
    2944:	6e0408a8 	cdpvs	8, 0, cr0, cr4, cr8, {5}
    2948:	02000009 	andeq	r0, r0, #9
    294c:	000cde8a 	andeq	sp, ip, sl, lsl #29
    2950:	0408c000 	streq	ip, [r8], #-0
    2954:	0000093c 	andeq	r0, r0, ip, lsr r9
    2958:	0cde8b02 	vldmiaeq	lr, {d24}
    295c:	08c40000 	stmiaeq	r4, {}^	; <UNPREDICTABLE>
    2960:	0005ba04 	andeq	fp, r5, r4, lsl #20
    2964:	de8c0200 	cdple	2, 8, cr0, cr12, cr0, {0}
    2968:	c800000c 	stmdagt	r0, {r2, r3}
    296c:	0eba0408 	cdpeq	4, 11, cr0, cr10, cr8, {0}
    2970:	8d020000 	stchi	0, cr0, [r2, #-0]
    2974:	00000cde 	ldrdeq	r0, [r0], -lr
    2978:	910408cc 	smlabtls	r4, ip, r8, r0
    297c:	02000008 	andeq	r0, r0, #8
    2980:	000cde8e 	andeq	sp, ip, lr, lsl #29
    2984:	0408d000 	streq	sp, [r8], #-0
    2988:	00000f34 	andeq	r0, r0, r4, lsr pc
    298c:	0cde8f02 	ldcleq	15, cr8, [lr], {2}
    2990:	08d40000 	ldmeq	r4, {}^	; <UNPREDICTABLE>
    2994:	000c9c04 	andeq	r9, ip, r4, lsl #24
    2998:	de900200 	cdple	2, 9, cr0, cr0, cr0, {0}
    299c:	d800000c 	stmdale	r0, {r2, r3}
    29a0:	0a0d0408 	beq	3439c8 <_start-0xbfcc4638>
    29a4:	91020000 	mrsls	r0, (UNDEF: 2)
    29a8:	00000cde 	ldrdeq	r0, [r0], -lr
    29ac:	fc0408dc 	stc2	8, cr0, [r4], {220}	; 0xdc
    29b0:	0200000e 	andeq	r0, r0, #14
    29b4:	000cde92 	muleq	ip, r2, lr
    29b8:	0408e000 	streq	lr, [r8], #-0
    29bc:	00000ccc 	andeq	r0, r0, ip, asr #25
    29c0:	0cde9302 	ldcleq	3, cr9, [lr], {2}
    29c4:	08e40000 	stmiaeq	r4!, {}^	; <UNPREDICTABLE>
    29c8:	0007f304 	andeq	pc, r7, r4, lsl #6
    29cc:	de940200 	cdple	2, 9, cr0, cr4, cr0, {0}
    29d0:	e800000c 	stmda	r0, {r2, r3}
    29d4:	0a770408 	beq	1dc39fc <_start-0xbe244604>
    29d8:	95020000 	strls	r0, [r2, #-0]
    29dc:	00000cde 	ldrdeq	r0, [r0], -lr
    29e0:	000408ec 	andeq	r0, r4, ip, ror #17
    29e4:	02000006 	andeq	r0, r0, #6
    29e8:	000cde96 	muleq	ip, r6, lr
    29ec:	0408f000 	streq	pc, [r8], #-0
    29f0:	00000ec5 	andeq	r0, r0, r5, asr #29
    29f4:	0cde9702 	ldcleq	7, cr9, [lr], {2}
    29f8:	08f40000 	ldmeq	r4!, {}^	; <UNPREDICTABLE>
    29fc:	00053404 	andeq	r3, r5, r4, lsl #8
    2a00:	de980200 	cdple	2, 9, cr0, cr8, cr0, {0}
    2a04:	f800000c 			; <UNDEFINED> instruction: 0xf800000c
    2a08:	07260408 	streq	r0, [r6, -r8, lsl #8]!
    2a0c:	99020000 	stmdbls	r2, {}	; <UNPREDICTABLE>
    2a10:	00000cde 	ldrdeq	r0, [r0], -lr
    2a14:	e30408fc 	movw	r0, #18684	; 0x48fc
    2a18:	0200000e 	andeq	r0, r0, #14
    2a1c:	000cde9a 	muleq	ip, sl, lr
    2a20:	04090000 	streq	r0, [r9], #-0
    2a24:	00001005 	andeq	r1, r0, r5
    2a28:	0cde9b02 	vldmiaeq	lr, {d25}
    2a2c:	09040000 	stmdbeq	r4, {}	; <UNPREDICTABLE>
    2a30:	00082f04 	andeq	r2, r8, r4, lsl #30
    2a34:	089c0200 	ldmeq	ip, {r9}
    2a38:	0800000d 	stmdaeq	r0, {r0, r2, r3}
    2a3c:	083e0409 	ldmdaeq	lr!, {r0, r3, sl}
    2a40:	9d020000 	stcls	0, cr0, [r2, #-0]
    2a44:	00000cde 	ldrdeq	r0, [r0], -lr
    2a48:	ed04090c 	vstr.16	s0, [r4, #-24]	; 0xffffffe8
    2a4c:	02000004 	andeq	r0, r0, #4
    2a50:	000d089e 	muleq	sp, lr, r8
    2a54:	04091000 	streq	r1, [r9], #-0
    2a58:	00000d37 	andeq	r0, r0, r7, lsr sp
    2a5c:	0cde9f02 	ldcleq	15, cr9, [lr], {2}
    2a60:	09140000 	ldmdbeq	r4, {}	; <UNPREDICTABLE>
    2a64:	000bc604 	andeq	ip, fp, r4, lsl #12
    2a68:	dea00200 	cdple	2, 10, cr0, cr0, cr0, {0}
    2a6c:	1800000c 	stmdane	r0, {r2, r3}
    2a70:	0f660409 	svceq	0x00660409
    2a74:	a1020000 	mrsge	r0, (UNDEF: 2)
    2a78:	00000cde 	ldrdeq	r0, [r0], -lr
    2a7c:	cc04091c 			; <UNDEFINED> instruction: 0xcc04091c
    2a80:	02000008 	andeq	r0, r0, #8
    2a84:	000cdea2 	andeq	sp, ip, r2, lsr #29
    2a88:	04092000 	streq	r2, [r9], #-0
    2a8c:	000006f6 	strdeq	r0, [r0], -r6
    2a90:	0cdea302 	ldcleq	3, cr10, [lr], {2}
    2a94:	09240000 	stmdbeq	r4!, {}	; <UNPREDICTABLE>
    2a98:	000bd804 	andeq	sp, fp, r4, lsl #16
    2a9c:	dea40200 	cdple	2, 10, cr0, cr4, cr0, {0}
    2aa0:	2800000c 	stmdacs	r0, {r2, r3}
    2aa4:	06cb0409 	strbeq	r0, [fp], r9, lsl #8
    2aa8:	a5020000 	strge	r0, [r2, #-0]
    2aac:	00000cde 	ldrdeq	r0, [r0], -lr
    2ab0:	4304092c 	movwmi	r0, #18732	; 0x492c
    2ab4:	0200000d 	andeq	r0, r0, #13
    2ab8:	000cdea6 	andeq	sp, ip, r6, lsr #29
    2abc:	04093000 	streq	r3, [r9], #-0
    2ac0:	00000585 	andeq	r0, r0, r5, lsl #11
    2ac4:	0cdea702 	ldcleq	7, cr10, [lr], {2}
    2ac8:	09340000 	ldmdbeq	r4!, {}	; <UNPREDICTABLE>
    2acc:	0005f404 	andeq	pc, r5, r4, lsl #8
    2ad0:	efa80200 	svc	0x00a80200
    2ad4:	3800000d 	stmdacc	r0, {r0, r2, r3}
    2ad8:	0ad90409 	beq	ff643b04 <__bss_end__+0x3f63907c>
    2adc:	a9020000 	stmdbge	r2, {}	; <UNPREDICTABLE>
    2ae0:	00000cde 	ldrdeq	r0, [r0], -lr
    2ae4:	e6040980 	str	r0, [r4], -r0, lsl #19
    2ae8:	0200000d 	andeq	r0, r0, #13
    2aec:	000cdeaa 	andeq	sp, ip, sl, lsr #29
    2af0:	04098400 	streq	r8, [r9], #-1024	; 0xfffffc00
    2af4:	00000741 	andeq	r0, r0, r1, asr #14
    2af8:	0cdeab02 	vldmiaeq	lr, {d26}
    2afc:	09880000 	stmibeq	r8, {}	; <UNPREDICTABLE>
    2b00:	00063004 	andeq	r3, r6, r4
    2b04:	deac0200 	cdple	2, 10, cr0, cr12, cr0, {0}
    2b08:	8c00000c 	stchi	0, cr0, [r0], {12}
    2b0c:	08f20409 	ldmeq	r2!, {r0, r3, sl}^
    2b10:	ad020000 	stcge	0, cr0, [r2, #-0]
    2b14:	00000cde 	ldrdeq	r0, [r0], -lr
    2b18:	41040990 			; <UNDEFINED> instruction: 0x41040990
    2b1c:	0200000e 	andeq	r0, r0, #14
    2b20:	000cdeae 	andeq	sp, ip, lr, lsr #29
    2b24:	04099400 	streq	r9, [r9], #-1024	; 0xfffffc00
    2b28:	000007b0 			; <UNDEFINED> instruction: 0x000007b0
    2b2c:	0cdeaf02 	ldcleq	15, cr10, [lr], {2}
    2b30:	09980000 	ldmibeq	r8, {}	; <UNPREDICTABLE>
    2b34:	000da604 	andeq	sl, sp, r4, lsl #12
    2b38:	deb00200 	cdple	2, 11, cr0, cr0, cr0, {0}
    2b3c:	9c00000c 	stcls	0, cr0, [r0], {12}
    2b40:	09190409 	ldmdbeq	r9, {r0, r3, sl}
    2b44:	b1020000 	mrslt	r0, (UNDEF: 2)
    2b48:	00000cde 	ldrdeq	r0, [r0], -lr
    2b4c:	c70409a0 	strgt	r0, [r4, -r0, lsr #19]
    2b50:	02000009 	andeq	r0, r0, #9
    2b54:	000cdeb2 			; <UNDEFINED> instruction: 0x000cdeb2
    2b58:	0409a400 	streq	sl, [r9], #-1024	; 0xfffffc00
    2b5c:	00000d9a 	muleq	r0, sl, sp
    2b60:	0cdeb302 	ldcleq	3, cr11, [lr], {2}
    2b64:	09a80000 	stmibeq	r8!, {}	; <UNPREDICTABLE>
    2b68:	0006a804 	andeq	sl, r6, r4, lsl #16
    2b6c:	deb40200 	cdple	2, 11, cr0, cr4, cr0, {0}
    2b70:	ac00000c 	stcge	0, cr0, [r0], {12}
    2b74:	05fa0409 	ldrbeq	r0, [sl, #1033]!	; 0x409
    2b78:	b5020000 	strlt	r0, [r2, #-0]
    2b7c:	00000e04 	andeq	r0, r0, r4, lsl #28
    2b80:	ab0409b0 	blge	105248 <_start-0xbff02db8>
    2b84:	02000009 	andeq	r0, r0, #9
    2b88:	000cdeb6 			; <UNDEFINED> instruction: 0x000cdeb6
    2b8c:	040a0000 	streq	r0, [sl], #-0
    2b90:	00000c87 	andeq	r0, r0, r7, lsl #25
    2b94:	0cdeb702 	ldcleq	7, cr11, [lr], {2}
    2b98:	0a040000 	beq	102ba0 <_start-0xbff05460>
    2b9c:	000ab104 	andeq	fp, sl, r4, lsl #2
    2ba0:	deb80200 	cdple	2, 11, cr0, cr8, cr0, {0}
    2ba4:	0800000c 	stmdaeq	r0, {r2, r3}
    2ba8:	0d18040a 	cfldrseq	mvf0, [r8, #-40]	; 0xffffffd8
    2bac:	b9020000 	stmdblt	r2, {}	; <UNPREDICTABLE>
    2bb0:	00000cde 	ldrdeq	r0, [r0], -lr
    2bb4:	d8040a0c 	stmdale	r4, {r2, r3, r9, fp}
    2bb8:	0200000d 	andeq	r0, r0, #13
    2bbc:	000cdeba 			; <UNDEFINED> instruction: 0x000cdeba
    2bc0:	040a1000 	streq	r1, [sl], #-0
    2bc4:	00000499 	muleq	r0, r9, r4
    2bc8:	0cdebb02 	vldmiaeq	lr, {d27}
    2bcc:	0a140000 	beq	502bd4 <_start-0xbfb0542c>
    2bd0:	000dba04 	andeq	fp, sp, r4, lsl #20
    2bd4:	debc0200 	cdple	2, 11, cr0, cr12, cr0, {0}
    2bd8:	1800000c 	stmdane	r0, {r2, r3}
    2bdc:	0467040a 	strbteq	r0, [r7], #-1034	; 0xfffffbf6
    2be0:	bd020000 	stclt	0, cr0, [r2, #-0]
    2be4:	00000cde 	ldrdeq	r0, [r0], -lr
    2be8:	48040a1c 	stmdami	r4, {r2, r3, r4, r9, fp}
    2bec:	0200000b 	andeq	r0, r0, #11
    2bf0:	000cdebe 			; <UNDEFINED> instruction: 0x000cdebe
    2bf4:	040a2000 	streq	r2, [sl], #-0
    2bf8:	00000e33 	andeq	r0, r0, r3, lsr lr
    2bfc:	0cdebf02 	ldcleq	15, cr11, [lr], {2}
    2c00:	0a240000 	beq	902c08 <_start-0xbf7053f8>
    2c04:	00054104 	andeq	r4, r5, r4, lsl #2
    2c08:	dec00200 	cdple	2, 12, cr0, cr0, cr0, {0}
    2c0c:	2800000c 	stmdacs	r0, {r2, r3}
    2c10:	0766040a 	strbeq	r0, [r6, -sl, lsl #8]!
    2c14:	c1020000 	mrsgt	r0, (UNDEF: 2)
    2c18:	00000cde 	ldrdeq	r0, [r0], -lr
    2c1c:	30040a2c 	andcc	r0, r4, ip, lsr #20
    2c20:	02000010 	andeq	r0, r0, #16
    2c24:	000cf3c2 	andeq	pc, ip, r2, asr #7
    2c28:	040a3000 	streq	r3, [sl], #-0
    2c2c:	00000621 	andeq	r0, r0, r1, lsr #12
    2c30:	0cdec302 	ldcleq	3, cr12, [lr], {2}
    2c34:	0a380000 	beq	e02c3c <_start-0xbf2053c4>
    2c38:	0008d704 	andeq	sp, r8, r4, lsl #14
    2c3c:	dec40200 	cdple	2, 12, cr0, cr4, cr0, {0}
    2c40:	3c00000c 	stccc	0, cr0, [r0], {12}
    2c44:	060d040a 	streq	r0, [sp], -sl, lsl #8
    2c48:	c5020000 	strgt	r0, [r2, #-0]
    2c4c:	00000dda 	ldrdeq	r0, [r0], -sl
    2c50:	9b040a40 	blls	105558 <_start-0xbff02aa8>
    2c54:	0200000b 	andeq	r0, r0, #11
    2c58:	000cdec6 	andeq	sp, ip, r6, asr #29
    2c5c:	040a8000 	streq	r8, [sl], #-0
    2c60:	00000e7e 	andeq	r0, r0, lr, ror lr
    2c64:	0cdec702 	ldcleq	7, cr12, [lr], {2}
    2c68:	0a840000 	beq	fe102c70 <__bss_end__+0x3e0f81e8>
    2c6c:	00059204 	andeq	r9, r5, r4, lsl #4
    2c70:	dec80200 	cdple	2, 12, cr0, cr8, cr0, {0}
    2c74:	8800000c 	stmdahi	r0, {r2, r3}
    2c78:	0865040a 	stmdaeq	r5!, {r1, r3, sl}^
    2c7c:	c9020000 	stmdbgt	r2, {}	; <UNPREDICTABLE>
    2c80:	00000cde 	ldrdeq	r0, [r0], -lr
    2c84:	e2040a8c 	and	r0, r4, #140, 20	; 0x8c000
    2c88:	0200000b 	andeq	r0, r0, #11
    2c8c:	000cdeca 	andeq	sp, ip, sl, asr #29
    2c90:	040a9000 	streq	r9, [sl], #-0
    2c94:	00000a92 	muleq	r0, r2, sl
    2c98:	0cdecb02 	vldmiaeq	lr, {d28}
    2c9c:	0a940000 	beq	fe502ca4 <__bss_end__+0x3e4f821c>
    2ca0:	000c4804 	andeq	r4, ip, r4, lsl #16
    2ca4:	decc0200 	cdple	2, 12, cr0, cr12, cr0, {0}
    2ca8:	9800000c 	stmdals	r0, {r2, r3}
    2cac:	0526040a 	streq	r0, [r6, #-1034]!	; 0xfffffbf6
    2cb0:	cd020000 	stcgt	0, cr0, [r2, #-0]
    2cb4:	00000cde 	ldrdeq	r0, [r0], -lr
    2cb8:	89040a9c 	stmdbhi	r4, {r2, r3, r4, r7, r9, fp}
    2cbc:	02000009 	andeq	r0, r0, #9
    2cc0:	000cdece 	andeq	sp, ip, lr, asr #29
    2cc4:	040aa000 	streq	sl, [sl], #-0
    2cc8:	00000c66 	andeq	r0, r0, r6, ror #24
    2ccc:	0cdecf02 	ldcleq	15, cr12, [lr], {2}
    2cd0:	0aa40000 	beq	fe902cd8 <__bss_end__+0x3e8f8250>
    2cd4:	000ff704 	andeq	pc, pc, r4, lsl #14
    2cd8:	ded00200 	cdple	2, 13, cr0, cr0, cr0, {0}
    2cdc:	a800000c 	stmdage	r0, {r2, r3}
    2ce0:	07a2040a 	streq	r0, [r2, sl, lsl #8]!
    2ce4:	d1020000 	mrsle	r0, (UNDEF: 2)
    2ce8:	00000cde 	ldrdeq	r0, [r0], -lr
    2cec:	ee040aac 	vmla.f32	s0, s9, s25
    2cf0:	0200000e 	andeq	r0, r0, #14
    2cf4:	000cded2 	ldrdeq	sp, [ip], -r2
    2cf8:	040ab000 	streq	fp, [sl], #-0
    2cfc:	00000794 	muleq	r0, r4, r7
    2d00:	0cded302 	ldcleq	3, cr13, [lr], {2}
    2d04:	0ab40000 	beq	fed02d0c <__bss_end__+0x3ecf8284>
    2d08:	00097a04 	andeq	r7, r9, r4, lsl #20
    2d0c:	ded40200 	cdple	2, 13, cr0, cr4, cr0, {0}
    2d10:	b800000c 	stmdalt	r0, {r2, r3}
    2d14:	06e7040a 	strbteq	r0, [r7], sl, lsl #8
    2d18:	d5020000 	strle	r0, [r2, #-0]
    2d1c:	00000cde 	ldrdeq	r0, [r0], -lr
    2d20:	32040abc 	andcc	r0, r4, #188, 20	; 0xbc000
    2d24:	0200000b 	andeq	r0, r0, #11
    2d28:	000ddad6 	ldrdeq	sp, [sp], -r6
    2d2c:	040ac000 	streq	ip, [sl], #-0
    2d30:	00000f08 	andeq	r0, r0, r8, lsl #30
    2d34:	0cded702 	ldcleq	7, cr13, [lr], {2}
    2d38:	0b000000 	bleq	2d40 <_start-0xc00052c0>
    2d3c:	000fb104 	andeq	fp, pc, r4, lsl #2
    2d40:	ded80200 	cdple	2, 13, cr0, cr8, cr0, {0}
    2d44:	0400000c 	streq	r0, [r0], #-12
    2d48:	0fcb040b 	svceq	0x00cb040b
    2d4c:	d9020000 	stmdble	r2, {}	; <UNPREDICTABLE>
    2d50:	00000cde 	ldrdeq	r0, [r0], -lr
    2d54:	c9040b08 	stmdbgt	r4, {r3, r8, r9, fp}
    2d58:	0200000a 	andeq	r0, r0, #10
    2d5c:	000cdeda 	ldrdeq	sp, [ip], -sl
    2d60:	040b0c00 	streq	r0, [fp], #-3072	; 0xfffff400
    2d64:	000009f3 	strdeq	r0, [r0], -r3
    2d68:	0cdedb02 	vldmiaeq	lr, {d29}
    2d6c:	0b100000 	bleq	402d74 <_start-0xbfc0528c>
    2d70:	000ce604 	andeq	lr, ip, r4, lsl #12
    2d74:	dedc0200 	cdple	2, 13, cr0, cr12, cr0, {0}
    2d78:	1400000c 	strne	r0, [r0], #-12
    2d7c:	063c040b 	ldrteq	r0, [ip], -fp, lsl #8
    2d80:	dd020000 	stcle	0, cr0, [r2, #-0]
    2d84:	00000cde 	ldrdeq	r0, [r0], -lr
    2d88:	81040b18 	tsthi	r4, r8, lsl fp
    2d8c:	02000008 	andeq	r0, r0, #8
    2d90:	000cdede 	ldrdeq	sp, [ip], -lr
    2d94:	040b1c00 	streq	r1, [fp], #-3072	; 0xfffff400
    2d98:	00000784 	andeq	r0, r0, r4, lsl #15
    2d9c:	0cdedf02 	ldcleq	15, cr13, [lr], {2}
    2da0:	0b200000 	bleq	802da8 <_start-0xbf805258>
    2da4:	000cbc04 	andeq	fp, ip, r4, lsl #24
    2da8:	dee00200 	cdple	2, 14, cr0, cr0, cr0, {0}
    2dac:	2400000c 	strcs	r0, [r0], #-12
    2db0:	095e040b 	ldmdbeq	lr, {r0, r1, r3, sl}^
    2db4:	e1020000 	mrs	r0, (UNDEF: 2)
    2db8:	00000cde 	ldrdeq	r0, [r0], -lr
    2dbc:	16040b28 	strne	r0, [r4], -r8, lsr #22
    2dc0:	02000005 	andeq	r0, r0, #5
    2dc4:	000cdee2 	andeq	sp, ip, r2, ror #29
    2dc8:	040b2c00 	streq	r2, [fp], #-3072	; 0xfffff400
    2dcc:	00000b7b 	andeq	r0, r0, fp, ror fp
    2dd0:	0cdee302 	ldcleq	3, cr14, [lr], {2}
    2dd4:	0b300000 	bleq	c02ddc <_start-0xbf405224>
    2dd8:	00045704 	andeq	r5, r4, r4, lsl #14
    2ddc:	dee40200 	cdple	2, 14, cr0, cr4, cr0, {0}
    2de0:	3400000c 	strcc	r0, [r0], #-12
    2de4:	0574040b 	ldrbeq	r0, [r4, #-1035]!	; 0xfffffbf5
    2de8:	e5020000 	str	r0, [r2, #-0]
    2dec:	00000cde 	ldrdeq	r0, [r0], -lr
    2df0:	54040b38 	strpl	r0, [r4], #-2872	; 0xfffff4c8
    2df4:	02000008 	andeq	r0, r0, #8
    2df8:	000cdee6 	andeq	sp, ip, r6, ror #29
    2dfc:	040b3c00 	streq	r3, [fp], #-3072	; 0xfffff400
    2e00:	00000720 	andeq	r0, r0, r0, lsr #14
    2e04:	0ddae702 	ldcleq	7, cr14, [sl, #8]
    2e08:	0b400000 	bleq	1002e10 <_start-0xbf0051f0>
    2e0c:	00050604 	andeq	r0, r5, r4, lsl #12
    2e10:	dee80200 	cdple	2, 14, cr0, cr8, cr0, {0}
    2e14:	8000000c 	andhi	r0, r0, ip
    2e18:	07d9040b 	ldrbeq	r0, [r9, fp, lsl #8]
    2e1c:	e9020000 	stmdb	r2, {}	; <UNPREDICTABLE>
    2e20:	00000cde 	ldrdeq	r0, [r0], -lr
    2e24:	09040b84 	stmdbeq	r4, {r2, r7, r8, r9, fp}
    2e28:	02000008 	andeq	r0, r0, #8
    2e2c:	000cdeea 	andeq	sp, ip, sl, ror #29
    2e30:	040b8800 	streq	r8, [fp], #-2048	; 0xfffff800
    2e34:	00000d61 	andeq	r0, r0, r1, ror #26
    2e38:	0cdeeb02 	vldmiaeq	lr, {d30}
    2e3c:	0b8c0000 	bleq	fe302e44 <__bss_end__+0x3e2f83bc>
    2e40:	000a2c04 	andeq	r2, sl, r4, lsl #24
    2e44:	deec0200 	cdple	2, 14, cr0, cr12, cr0, {0}
    2e48:	9000000c 	andls	r0, r0, ip
    2e4c:	0b8b040b 	bleq	fe2c3e80 <__bss_end__+0x3e2b93f8>
    2e50:	ed020000 	stc	0, cr0, [r2, #-0]
    2e54:	00000cde 	ldrdeq	r0, [r0], -lr
    2e58:	6b040b94 	blvs	105cb0 <_start-0xbff02350>
    2e5c:	0200000b 	andeq	r0, r0, #11
    2e60:	000cdeee 	andeq	sp, ip, lr, ror #29
    2e64:	040b9800 	streq	r9, [fp], #-2048	; 0xfffff800
    2e68:	00000ed3 	ldrdeq	r0, [r0], -r3
    2e6c:	0cdeef02 	ldcleq	15, cr14, [lr], {2}
    2e70:	0b9c0000 	bleq	fe702e78 <__bss_end__+0x3e6f83f0>
    2e74:	000ae504 	andeq	lr, sl, r4, lsl #10
    2e78:	def00200 	cdple	2, 15, cr0, cr0, cr0, {0}
    2e7c:	a000000c 	andge	r0, r0, ip
    2e80:	0564040b 	strbeq	r0, [r4, #-1035]!	; 0xfffffbf5
    2e84:	f1020000 	cps	#0
    2e88:	00000cde 	ldrdeq	r0, [r0], -lr
    2e8c:	db040ba4 	blle	105d24 <_start-0xbff022dc>
    2e90:	0200000f 	andeq	r0, r0, #15
    2e94:	000cdef2 	strdeq	sp, [ip], -r2
    2e98:	040ba800 	streq	sl, [fp], #-2048	; 0xfffff800
    2e9c:	00000756 	andeq	r0, r0, r6, asr r7
    2ea0:	0cdef302 	ldcleq	3, cr15, [lr], {2}
    2ea4:	0bac0000 	bleq	feb02eac <__bss_end__+0x3eaf8424>
    2ea8:	00077404 	andeq	r7, r7, r4, lsl #8
    2eac:	def40200 	cdple	2, 15, cr0, cr4, cr0, {0}
    2eb0:	b000000c 	andlt	r0, r0, ip
    2eb4:	0c13040b 	cfldrseq	mvf0, [r3], {11}
    2eb8:	f5020000 			; <UNDEFINED> instruction: 0xf5020000
    2ebc:	00000cde 	ldrdeq	r0, [r0], -lr
    2ec0:	30040bb4 			; <UNDEFINED> instruction: 0x30040bb4
    2ec4:	02000007 	andeq	r0, r0, #7
    2ec8:	000cdef6 	strdeq	sp, [ip], -r6
    2ecc:	040bb800 	streq	fp, [fp], #-2048	; 0xfffff800
    2ed0:	000008a5 	andeq	r0, r0, r5, lsr #17
    2ed4:	0cdef702 	ldcleq	7, cr15, [lr], {2}
    2ed8:	0bbc0000 	bleq	fef02ee0 <__bss_end__+0x3eef8458>
    2edc:	00092504 	andeq	r2, r9, r4, lsl #10
    2ee0:	daf80200 	ble	ffe036e8 <__bss_end__+0x3fdf8c60>
    2ee4:	c000000d 	andgt	r0, r0, sp
    2ee8:	092b040b 	stmdbeq	fp!, {r0, r1, r3, sl}
    2eec:	f9020000 			; <UNDEFINED> instruction: 0xf9020000
    2ef0:	00000cde 	ldrdeq	r0, [r0], -lr
    2ef4:	93040c00 	movwls	r0, #19456	; 0x4c00
    2ef8:	02000004 	andeq	r0, r0, #4
    2efc:	000dc5fa 	strdeq	ip, [sp], -sl
    2f00:	040c0400 	streq	r0, [ip], #-1024	; 0xfffffc00
    2f04:	00000e76 	andeq	r0, r0, r6, ror lr
    2f08:	0cdefb02 	vldmiaeq	lr, {d31}
    2f0c:	0c140000 	ldceq	0, cr0, [r4], {-0}
    2f10:	00102804 	andseq	r2, r0, r4, lsl #16
    2f14:	defc0200 	cdple	2, 15, cr0, cr12, cr0, {0}
    2f18:	1800000c 	stmdane	r0, {r2, r3}
    2f1c:	04a7040c 	strteq	r0, [r7], #1036	; 0x40c
    2f20:	fd020000 	stc2	0, cr0, [r2, #-0]
    2f24:	00000e19 	andeq	r0, r0, r9, lsl lr
    2f28:	2c040c1c 	stccs	12, cr0, [r4], {28}
    2f2c:	0200000c 	andeq	r0, r0, #12
    2f30:	000cdefe 	strdeq	sp, [ip], -lr
    2f34:	050ff400 	streq	pc, [pc, #-1024]	; 2b3c <_start-0xc00054c4>
    2f38:	00524449 	subseq	r4, r2, r9, asr #8
    2f3c:	0cdeff02 	ldcleq	15, cr15, [lr], {2}
    2f40:	0ff80000 	svceq	0x00f80000
    2f44:	00093706 	andeq	r3, r9, r6, lsl #14
    2f48:	01000200 	mrseq	r0, R8_usr
    2f4c:	00000cde 	ldrdeq	r0, [r0], -lr
    2f50:	07000ffc 			; <UNDEFINED> instruction: 0x07000ffc
    2f54:	00f60704 	rscseq	r0, r6, r4, lsl #14
    2f58:	d7080000 	strle	r0, [r8, -r0]
    2f5c:	0900000c 	stmdbeq	r0, {r2, r3}
    2f60:	00000cde 	ldrdeq	r0, [r0], -lr
    2f64:	00000cf3 	strdeq	r0, [r0], -r3
    2f68:	000cd70a 	andeq	sp, ip, sl, lsl #14
    2f6c:	08000100 	stmdaeq	r0, {r8}
    2f70:	00000ce3 	andeq	r0, r0, r3, ror #25
    2f74:	000cde09 	andeq	sp, ip, r9, lsl #28
    2f78:	000d0800 	andeq	r0, sp, r0, lsl #16
    2f7c:	0cd70a00 	vldmiaeq	r7, {s1-s0}
    2f80:	00000000 	andeq	r0, r0, r0
    2f84:	000cf808 	andeq	pc, ip, r8, lsl #16
    2f88:	0cde0900 			; <UNDEFINED> instruction: 0x0cde0900
    2f8c:	0d1d0000 	ldceq	0, cr0, [sp, #-0]
    2f90:	d70a0000 	strle	r0, [sl, -r0]
    2f94:	0c00000c 	stceq	0, cr0, [r0], {12}
    2f98:	0d0d0800 	stceq	8, cr0, [sp, #-0]
    2f9c:	de090000 	cdple	0, 0, cr0, cr9, cr0, {0}
    2fa0:	3200000c 	andcc	r0, r0, #12
    2fa4:	0a00000d 	beq	2fe0 <_start-0xc0005020>
    2fa8:	00000cd7 	ldrdeq	r0, [r0], -r7
    2fac:	22080005 	andcs	r0, r8, #5
    2fb0:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    2fb4:	00000cde 	ldrdeq	r0, [r0], -lr
    2fb8:	00000d47 	andeq	r0, r0, r7, asr #26
    2fbc:	000cd70a 	andeq	sp, ip, sl, lsl #14
    2fc0:	08000800 	stmdaeq	r0, {fp}
    2fc4:	00000d37 	andeq	r0, r0, r7, lsr sp
    2fc8:	000cde09 	andeq	sp, ip, r9, lsl #28
    2fcc:	000d5c00 	andeq	r5, sp, r0, lsl #24
    2fd0:	0cd70a00 	vldmiaeq	r7, {s1-s0}
    2fd4:	00090000 	andeq	r0, r9, r0
    2fd8:	000d4c08 	andeq	r4, sp, r8, lsl #24
    2fdc:	0cde0900 			; <UNDEFINED> instruction: 0x0cde0900
    2fe0:	0d710000 	ldcleq	0, cr0, [r1, #-0]
    2fe4:	d70a0000 	strle	r0, [sl, -r0]
    2fe8:	0d00000c 	stceq	0, cr0, [r0, #-48]	; 0xffffffd0
    2fec:	0d610800 	stcleq	8, cr0, [r1, #-0]
    2ff0:	de090000 	cdple	0, 0, cr0, cr9, cr0, {0}
    2ff4:	8600000c 	strhi	r0, [r0], -ip
    2ff8:	0a00000d 	beq	3034 <_start-0xc0004fcc>
    2ffc:	00000cd7 	ldrdeq	r0, [r0], -r7
    3000:	76080015 			; <UNDEFINED> instruction: 0x76080015
    3004:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    3008:	00000cde 	ldrdeq	r0, [r0], -lr
    300c:	00000d9b 	muleq	r0, fp, sp
    3010:	000cd70a 	andeq	sp, ip, sl, lsl #14
    3014:	08001700 	stmdaeq	r0, {r8, r9, sl, ip}
    3018:	00000d8b 	andeq	r0, r0, fp, lsl #27
    301c:	000cde09 	andeq	sp, ip, r9, lsl #28
    3020:	000db000 	andeq	fp, sp, r0
    3024:	0cd70a00 	vldmiaeq	r7, {s1-s0}
    3028:	00f60000 	rscseq	r0, r6, r0
    302c:	000da008 	andeq	sl, sp, r8
    3030:	0cde0900 			; <UNDEFINED> instruction: 0x0cde0900
    3034:	0dc50000 	stcleq	0, cr0, [r5]
    3038:	d70a0000 	strle	r0, [sl, -r0]
    303c:	0300000c 	movweq	r0, #12
    3040:	0db50800 	ldceq	8, cr0, [r5]
    3044:	de090000 	cdple	0, 0, cr0, cr9, cr0, {0}
    3048:	da00000c 	ble	3080 <_start-0xc0004f80>
    304c:	0a00000d 	beq	3088 <_start-0xc0004f78>
    3050:	00000cd7 	ldrdeq	r0, [r0], -r7
    3054:	ca08000f 	bgt	203098 <_start-0xbfe04f68>
    3058:	0900000d 	stmdbeq	r0, {r0, r2, r3}
    305c:	00000cde 	ldrdeq	r0, [r0], -lr
    3060:	00000def 	andeq	r0, r0, pc, ror #27
    3064:	000cd70a 	andeq	sp, ip, sl, lsl #14
    3068:	08001100 	stmdaeq	r0, {r8, ip}
    306c:	00000ddf 	ldrdeq	r0, [r0], -pc	; <UNPREDICTABLE>
    3070:	000cde09 	andeq	sp, ip, r9, lsl #28
    3074:	000e0400 	andeq	r0, lr, r0, lsl #8
    3078:	0cd70a00 	vldmiaeq	r7, {s1-s0}
    307c:	00130000 	andseq	r0, r3, r0
    3080:	000df408 	andeq	pc, sp, r8, lsl #8
    3084:	0cde0900 			; <UNDEFINED> instruction: 0x0cde0900
    3088:	0e190000 	cdpeq	0, 1, cr0, cr9, cr0, {0}
    308c:	d70a0000 	strle	r0, [sl, -r0]
    3090:	f500000c 			; <UNDEFINED> instruction: 0xf500000c
    3094:	0e090800 	cdpeq	8, 0, cr0, cr9, cr0, {0}
    3098:	190b0000 	stmdbne	fp, {}	; <UNPREDICTABLE>
    309c:	02000008 	andeq	r0, r0, #8
    30a0:	00250101 	eoreq	r0, r5, r1, lsl #2
    30a4:	340c0000 	strcc	r0, [ip], #-0
    30a8:	0ecf0403 	cdpeq	4, 12, cr0, cr15, cr3, {0}
    30ac:	08030000 	stmdaeq	r3, {}	; <UNPREDICTABLE>
    30b0:	03000002 	movweq	r0, #2
    30b4:	000cde05 	andeq	sp, ip, r5, lsl #28
    30b8:	45030000 	strmi	r0, [r3, #-0]
    30bc:	03000002 	movweq	r0, #2
    30c0:	000cde06 	andeq	sp, ip, r6, lsl #28
    30c4:	0e030400 	cfcpyseq	mvf0, mvf3
    30c8:	03000002 	movweq	r0, #2
    30cc:	000cde07 	andeq	sp, ip, r7, lsl #28
    30d0:	02030800 	andeq	r0, r3, #0, 16
    30d4:	03000002 	movweq	r0, #2
    30d8:	000cde08 	andeq	sp, ip, r8, lsl #28
    30dc:	490d0c00 	stmdbmi	sp, {sl, fp}
    30e0:	03005244 	movweq	r5, #580	; 0x244
    30e4:	000cde09 	andeq	sp, ip, r9, lsl #28
    30e8:	4f0d1000 	svcmi	0x000d1000
    30ec:	03005244 	movweq	r5, #580	; 0x244
    30f0:	000cde0a 	andeq	sp, ip, sl, lsl #28
    30f4:	fd031400 	stc2	4, cr1, [r3, #-0]
    30f8:	03000001 	movweq	r0, #1
    30fc:	000cde0b 	andeq	sp, ip, fp, lsl #28
    3100:	39031800 	stmdbcc	r3, {fp, ip}
    3104:	03000002 	movweq	r0, #2
    3108:	000cde0c 	andeq	sp, ip, ip, lsl #28
    310c:	4c031c00 	stcmi	12, cr1, [r3], {-0}
    3110:	03000002 	movweq	r0, #2
    3114:	000cde0d 	andeq	sp, ip, sp, lsl #28
    3118:	5d032000 	stcpl	0, cr2, [r3, #-0]
    311c:	03000002 	movweq	r0, #2
    3120:	000cde0e 	andeq	sp, ip, lr, lsl #28
    3124:	420d2400 	andmi	r2, sp, #0, 8
    3128:	03005252 	movweq	r5, #594	; 0x252
    312c:	000cde0f 	andeq	sp, ip, pc, lsl #28
    3130:	720d2800 	andvc	r2, sp, #0, 16
    3134:	03007365 	movweq	r7, #869	; 0x365
    3138:	000cde10 	andeq	sp, ip, r0, lsl lr
    313c:	df032c00 	svcle	0x00032c00
    3140:	03000001 	movweq	r0, #1
    3144:	000cde11 	andeq	sp, ip, r1, lsl lr
    3148:	0e003000 	cdpeq	0, 0, cr3, cr0, cr0, {0}
    314c:	00000232 	andeq	r0, r0, r2, lsr r2
    3150:	0e2a1303 	cdpeq	3, 2, cr1, cr10, cr3, {0}
    3154:	540f0000 	strpl	r0, [pc], #-0	; 315c <_start-0xc0004ea4>
    3158:	01000010 	tsteq	r0, r0, lsl r0
    315c:	009f4028 	addseq	r4, pc, r8, lsr #32
    3160:	0000a0c0 	andeq	sl, r0, r0, asr #1
    3164:	fe9c0100 	cdp2	1, 9, cr0, cr12, cr0, {0}
    3168:	1000000e 	andne	r0, r0, lr
    316c:	0000104d 	andeq	r1, r0, sp, asr #32
    3170:	0efe2801 	cdpeq	8, 15, cr2, cr14, cr1, {0}
    3174:	91020000 	mrsls	r0, (UNDEF: 2)
    3178:	04110078 	ldreq	r0, [r1], #-120	; 0xffffff88
    317c:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    3180:	10691200 	rsbne	r1, r9, r0, lsl #4
    3184:	08010000 	stmdaeq	r1, {}	; <UNPREDICTABLE>
    3188:	c0009d70 	andgt	r9, r0, r0, ror sp
    318c:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
    3190:	80009c01 	andhi	r9, r0, r1, lsl #24
    3194:	04000000 	streq	r0, [r0], #-0
    3198:	0005d300 	andeq	sp, r5, r0, lsl #6
    319c:	57010400 	strpl	r0, [r1, -r0, lsl #8]
    31a0:	0c000000 	stceq	0, cr0, [r0], {-0}
    31a4:	00001072 	andeq	r1, r0, r2, ror r0
    31a8:	0000018a 	andeq	r0, r0, sl, lsl #3
    31ac:	c0009fe0 	andgt	r9, r0, r0, ror #31
    31b0:	00000098 	muleq	r0, r8, r0
    31b4:	00000661 	andeq	r0, r0, r1, ror #12
    31b8:	f6070402 			; <UNDEFINED> instruction: 0xf6070402
    31bc:	03000000 	movweq	r0, #0
    31c0:	0000107e 	andeq	r1, r0, lr, ror r0
    31c4:	a0081e01 	andge	r1, r8, r1, lsl #28
    31c8:	0070c000 	rsbseq	ip, r0, r0
    31cc:	9c010000 	stcls	0, cr0, [r1], {-0}
    31d0:	00000067 	andeq	r0, r0, r7, rrx
    31d4:	00736d04 	rsbseq	r6, r3, r4, lsl #26
    31d8:	00671e01 	rsbeq	r1, r7, r1, lsl #28
    31dc:	91020000 	mrsls	r0, (UNDEF: 2)
    31e0:	00690570 	rsbeq	r0, r9, r0, ror r5
    31e4:	00672001 	rsbeq	r2, r7, r1
    31e8:	91020000 	mrsls	r0, (UNDEF: 2)
    31ec:	006a0578 	rsbeq	r0, sl, r8, ror r5
    31f0:	00672001 	rsbeq	r2, r7, r1
    31f4:	91020000 	mrsls	r0, (UNDEF: 2)
    31f8:	04060074 	streq	r0, [r6], #-116	; 0xffffff8c
    31fc:	746e6905 	strbtvc	r6, [lr], #-2309	; 0xfffff6fb
    3200:	10790700 	rsbsne	r0, r9, r0, lsl #14
    3204:	0c010000 	stceq	0, cr0, [r1], {-0}
    3208:	00000067 	andeq	r0, r0, r7, rrx
    320c:	c0009fe0 	andgt	r9, r0, r0, ror #31
    3210:	00000028 	andeq	r0, r0, r8, lsr #32
    3214:	地址 0x00003214 越界。


Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	10001101 	andne	r1, r0, r1, lsl #2
   4:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
   8:	1b080301 	blne	200c14 <_start-0xbfe073ec>
   c:	13082508 	movwne	r2, #34056	; 0x8508
  10:	00000005 	andeq	r0, r0, r5
  14:	10001101 	andne	r1, r0, r1, lsl #2
  18:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
  1c:	1b080301 	blne	200c28 <_start-0xbfe073d8>
  20:	13082508 	movwne	r2, #34056	; 0x8508
  24:	00000005 	andeq	r0, r0, r5
  28:	10001101 	andne	r1, r0, r1, lsl #2
  2c:	12011106 	andne	r1, r1, #-2147483647	; 0x80000001
  30:	1b080301 	blne	200c3c <_start-0xbfe073c4>
  34:	13082508 	movwne	r2, #34056	; 0x8508
  38:	00000005 	andeq	r0, r0, r5
  3c:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
  40:	030b130e 	movweq	r1, #45838	; 0xb30e
  44:	110e1b0e 	tstne	lr, lr, lsl #22
  48:	10061201 	andne	r1, r6, r1, lsl #4
  4c:	02000017 	andeq	r0, r0, #23
  50:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
  54:	0b3b0b3a 	bleq	ec2d44 <_start-0xbf1452bc>
  58:	00001349 	andeq	r1, r0, r9, asr #6
  5c:	0b000f03 	bleq	3c70 <_start-0xc0004390>
  60:	000e030b 	andeq	r0, lr, fp, lsl #6
  64:	01010400 	tsteq	r1, r0, lsl #8
  68:	13011349 	movwne	r1, #4937	; 0x1349
  6c:	21050000 	mrscs	r0, (UNDEF: 5)
  70:	2f134900 	svccs	0x00134900
  74:	0600000b 	streq	r0, [r0], -fp
  78:	0b0b0024 	bleq	2c0110 <_start-0xbfd47ef0>
  7c:	0e030b3e 	vmoveq.16	d3[0], r0
  80:	34070000 	strcc	r0, [r7], #-0
  84:	3a0e0300 	bcc	380c8c <_start-0xbfc87374>
  88:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  8c:	02193f13 	andseq	r3, r9, #19, 30	; 0x4c
  90:	08000018 	stmdaeq	r0, {r3, r4}
  94:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
  98:	0b3a0e03 	bleq	e838ac <_start-0xbf184754>
  9c:	1927053b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, sl}
  a0:	06120111 			; <UNDEFINED> instruction: 0x06120111
  a4:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  a8:	00130119 	andseq	r0, r3, r9, lsl r1
  ac:	00050900 	andeq	r0, r5, r0, lsl #18
  b0:	0b3a0803 	bleq	e820c4 <_start-0xbf185f3c>
  b4:	1349053b 	movtne	r0, #38203	; 0x953b
  b8:	00001802 	andeq	r1, r0, r2, lsl #16
  bc:	0000180a 	andeq	r1, r0, sl, lsl #16
  c0:	00340b00 	eorseq	r0, r4, r0, lsl #22
  c4:	0b3a0e03 	bleq	e838d8 <_start-0xbf184728>
  c8:	1349053b 	movtne	r0, #38203	; 0x953b
  cc:	00001802 	andeq	r1, r0, r2, lsl #16
  d0:	0b000f0c 	bleq	3d08 <_start-0xc00042f8>
  d4:	0013490b 	andseq	r4, r3, fp, lsl #18
  d8:	00260d00 	eoreq	r0, r6, r0, lsl #26
  dc:	00001349 	andeq	r1, r0, r9, asr #6
  e0:	3f012e0e 	svccc	0x00012e0e
  e4:	3a0e0319 	bcc	380d50 <_start-0xbfc872b0>
  e8:	27053b0b 	strcs	r3, [r5, -fp, lsl #22]
  ec:	11134919 	tstne	r3, r9, lsl r9
  f0:	40061201 	andmi	r1, r6, r1, lsl #4
  f4:	19429618 	stmdbne	r2, {r3, r4, r9, sl, ip, pc}^
  f8:	00001301 	andeq	r1, r0, r1, lsl #6
  fc:	0300340f 	movweq	r3, #1039	; 0x40f
 100:	3b0b3a08 	blcc	2ce928 <_start-0xbfd396d8>
 104:	02134905 	andseq	r4, r3, #81920	; 0x14000
 108:	10000018 	andne	r0, r0, r8, lsl r0
 10c:	0b0b0024 	bleq	2c01a4 <_start-0xbfd47e5c>
 110:	08030b3e 	stmdaeq	r3, {r1, r2, r3, r4, r5, r8, r9, fp}
 114:	2e110000 	cdpcs	0, 1, cr0, cr1, cr0, {0}
 118:	03193f01 	tsteq	r9, #1, 30
 11c:	3b0b3a0e 	blcc	2ce95c <_start-0xbfd396a4>
 120:	4919270b 	ldmdbmi	r9, {r0, r1, r3, r8, r9, sl, sp}
 124:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 128:	96184006 	ldrls	r4, [r8], -r6
 12c:	13011942 	movwne	r1, #6466	; 0x1942
 130:	05120000 	ldreq	r0, [r2, #-0]
 134:	3a080300 	bcc	200d3c <_start-0xbfe072c4>
 138:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 13c:	00180213 	andseq	r0, r8, r3, lsl r2
 140:	00051300 	andeq	r1, r5, r0, lsl #6
 144:	0b3a0e03 	bleq	e83958 <_start-0xbf1846a8>
 148:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 14c:	00001802 	andeq	r1, r0, r2, lsl #16
 150:	03003414 	movweq	r3, #1044	; 0x414
 154:	3b0b3a08 	blcc	2ce97c <_start-0xbfd39684>
 158:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 15c:	15000018 	strne	r0, [r0, #-24]	; 0xffffffe8
 160:	0e030034 	mcreq	0, 0, r0, cr3, cr4, {1}
 164:	0b3b0b3a 	bleq	ec2e54 <_start-0xbf1451ac>
 168:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 16c:	0a160000 	beq	580174 <_start-0xbfa87e8c>
 170:	3a0e0300 	bcc	380d78 <_start-0xbfc87288>
 174:	110b3b0b 	tstne	fp, fp, lsl #22
 178:	17000001 	strne	r0, [r0, -r1]
 17c:	0111010b 	tsteq	r1, fp, lsl #2
 180:	13010612 	movwne	r0, #5650	; 0x1612
 184:	0b180000 	bleq	60018c <_start-0xbfa07e74>
 188:	12011101 	andne	r1, r1, #1073741824	; 0x40000000
 18c:	19000006 	stmdbne	r0, {r1, r2}
 190:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 194:	0b3a0e03 	bleq	e839a8 <_start-0xbf184658>
 198:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 19c:	01111349 	tsteq	r1, r9, asr #6
 1a0:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 1a4:	01194297 			; <UNDEFINED> instruction: 0x01194297
 1a8:	1a000013 	bne	1fc <_start-0xc0007e04>
 1ac:	0e03012e 	adfeqsp	f0, f3, #0.5
 1b0:	0b3b0b3a 	bleq	ec2ea0 <_start-0xbf145160>
 1b4:	13491927 	movtne	r1, #39207	; 0x9927
 1b8:	06120111 			; <UNDEFINED> instruction: 0x06120111
 1bc:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 1c0:	00130119 	andseq	r0, r3, r9, lsl r1
 1c4:	012e1b00 			; <UNDEFINED> instruction: 0x012e1b00
 1c8:	0b3a0e03 	bleq	e839dc <_start-0xbf184624>
 1cc:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 1d0:	01111349 	tsteq	r1, r9, asr #6
 1d4:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 1d8:	01194297 			; <UNDEFINED> instruction: 0x01194297
 1dc:	1c000013 	stcne	0, cr0, [r0], {19}
 1e0:	0e03012e 	adfeqsp	f0, f3, #0.5
 1e4:	0b3b0b3a 	bleq	ec2ed4 <_start-0xbf14512c>
 1e8:	13491927 	movtne	r1, #39207	; 0x9927
 1ec:	06120111 			; <UNDEFINED> instruction: 0x06120111
 1f0:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 1f4:	00000019 	andeq	r0, r0, r9, lsl r0
 1f8:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 1fc:	030b130e 	movweq	r1, #45838	; 0xb30e
 200:	110e1b0e 	tstne	lr, lr, lsl #22
 204:	10061201 	andne	r1, r6, r1, lsl #4
 208:	02000017 	andeq	r0, r0, #23
 20c:	0b0b0113 	bleq	2c0660 <_start-0xbfd479a0>
 210:	0b3b0b3a 	bleq	ec2f00 <_start-0xbf145100>
 214:	00001301 	andeq	r1, r0, r1, lsl #6
 218:	03000d03 	movweq	r0, #3331	; 0xd03
 21c:	3b0b3a0e 	blcc	2cea5c <_start-0xbfd395a4>
 220:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 224:	0400000b 	streq	r0, [r0], #-11
 228:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 22c:	0b3b0b3a 	bleq	ec2f1c <_start-0xbf1450e4>
 230:	0b381349 	bleq	e04f5c <_start-0xbf2030a4>
 234:	24050000 	strcs	r0, [r5], #-0
 238:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 23c:	000e030b 	andeq	r0, lr, fp, lsl #6
 240:	00350600 	eorseq	r0, r5, r0, lsl #12
 244:	00001349 	andeq	r1, r0, r9, asr #6
 248:	03001607 	movweq	r1, #1543	; 0x607
 24c:	3b0b3a0e 	blcc	2cea8c <_start-0xbfd39574>
 250:	0013490b 	andseq	r4, r3, fp, lsl #18
 254:	012e0800 			; <UNDEFINED> instruction: 0x012e0800
 258:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 25c:	0b3b0b3a 	bleq	ec2f4c <_start-0xbf1450b4>
 260:	13491927 	movtne	r1, #39207	; 0x9927
 264:	06120111 			; <UNDEFINED> instruction: 0x06120111
 268:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 26c:	00130119 	andseq	r0, r3, r9, lsl r1
 270:	00340900 	eorseq	r0, r4, r0, lsl #18
 274:	0b3a0803 	bleq	e82288 <_start-0xbf185d78>
 278:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 27c:	00001802 	andeq	r1, r0, r2, lsl #16
 280:	4900260a 	stmdbmi	r0, {r1, r3, r9, sl, sp}
 284:	0b000013 	bleq	2d8 <_start-0xc0007d28>
 288:	193f012e 	ldmdbne	pc!, {r1, r2, r3, r5, r8}	; <UNPREDICTABLE>
 28c:	0b3a0e03 	bleq	e83aa0 <_start-0xbf184560>
 290:	19270b3b 	stmdbne	r7!, {r0, r1, r3, r4, r5, r8, r9, fp}
 294:	06120111 			; <UNDEFINED> instruction: 0x06120111
 298:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
 29c:	00130119 	andseq	r0, r3, r9, lsl r1
 2a0:	00050c00 	andeq	r0, r5, r0, lsl #24
 2a4:	0b3a0e03 	bleq	e83ab8 <_start-0xbf184548>
 2a8:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 2ac:	00001802 	andeq	r1, r0, r2, lsl #16
 2b0:	0b000f0d 	bleq	3eec <_start-0xc0004114>
 2b4:	0013490b 	andseq	r4, r3, fp, lsl #18
 2b8:	002e0e00 	eoreq	r0, lr, r0, lsl #28
 2bc:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 2c0:	0b3b0b3a 	bleq	ec2fb0 <_start-0xbf145050>
 2c4:	06120111 			; <UNDEFINED> instruction: 0x06120111
 2c8:	42971840 	addsmi	r1, r7, #64, 16	; 0x400000
 2cc:	00000019 	andeq	r0, r0, r9, lsl r0
 2d0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
 2d4:	030b130e 	movweq	r1, #45838	; 0xb30e
 2d8:	110e1b0e 	tstne	lr, lr, lsl #22
 2dc:	10061201 	andne	r1, r6, r1, lsl #4
 2e0:	02000017 	andeq	r0, r0, #23
 2e4:	0b0b0024 	bleq	2c037c <_start-0xbfd47c84>
 2e8:	0e030b3e 	vmoveq.16	d3[0], r0
 2ec:	35030000 	strcc	r0, [r3, #-0]
 2f0:	00134900 	andseq	r4, r3, r0, lsl #18
 2f4:	01010400 	tsteq	r1, r0, lsl #8
 2f8:	13011349 	movwne	r1, #4937	; 0x1349
 2fc:	21050000 	mrscs	r0, (UNDEF: 5)
 300:	2f134900 	svccs	0x00134900
 304:	0600000b 	streq	r0, [r0], -fp
 308:	0b0b0113 	bleq	2c075c <_start-0xbfd478a4>
 30c:	0b3b0b3a 	bleq	ec2ffc <_start-0xbf145004>
 310:	00001301 	andeq	r1, r0, r1, lsl #6
 314:	03000d07 	movweq	r0, #3335	; 0xd07
 318:	3b0b3a0e 	blcc	2ceb58 <_start-0xbfd394a8>
 31c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 320:	0800000b 	stmdaeq	r0, {r0, r1, r3}
 324:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 328:	0b3b0b3a 	bleq	ec3018 <_start-0xbf144fe8>
 32c:	00001349 	andeq	r1, r0, r9, asr #6
 330:	0b011309 	bleq	44f5c <_start-0xbffc30a4>
 334:	3b0b3a05 	blcc	2ceb50 <_start-0xbfd394b0>
 338:	0013010b 	andseq	r0, r3, fp, lsl #2
 33c:	000d0a00 	andeq	r0, sp, r0, lsl #20
 340:	0b3a0e03 	bleq	e83b54 <_start-0xbf1844ac>
 344:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 348:	00000538 	andeq	r0, r0, r8, lsr r5
 34c:	03000d0b 	movweq	r0, #3339	; 0xd0b
 350:	3b0b3a08 	blcc	2ceb78 <_start-0xbfd39488>
 354:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 358:	0c00000b 	stceq	0, cr0, [r0], {11}
 35c:	13490021 	movtne	r0, #36897	; 0x9021
 360:	0000052f 	andeq	r0, r0, pc, lsr #10
 364:	0300340d 	movweq	r3, #1037	; 0x40d
 368:	3b0b3a08 	blcc	2ceb90 <_start-0xbfd39470>
 36c:	3f13490b 	svccc	0x0013490b
 370:	00180219 	andseq	r0, r8, r9, lsl r2
 374:	012e0e00 			; <UNDEFINED> instruction: 0x012e0e00
 378:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 37c:	0b3b0b3a 	bleq	ec306c <_start-0xbf144f94>
 380:	01111927 	tsteq	r1, r7, lsr #18
 384:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 388:	00194296 	mulseq	r9, r6, r2
 38c:	00340f00 	eorseq	r0, r4, r0, lsl #30
 390:	0b3a0e03 	bleq	e83ba4 <_start-0xbf18445c>
 394:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 398:	00001802 	andeq	r1, r0, r2, lsl #16
 39c:	01110100 	tsteq	r1, r0, lsl #2
 3a0:	0b130e25 	bleq	4c3c3c <_start-0xbfb443c4>
 3a4:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 3a8:	06120111 			; <UNDEFINED> instruction: 0x06120111
 3ac:	00001710 	andeq	r1, r0, r0, lsl r7
 3b0:	0b011302 	bleq	44fc0 <_start-0xbffc3040>
 3b4:	3b0b3a05 	blcc	2cebd0 <_start-0xbfd39430>
 3b8:	0013010b 	andseq	r0, r3, fp, lsl #2
 3bc:	000d0300 	andeq	r0, sp, r0, lsl #6
 3c0:	0b3a0e03 	bleq	e83bd4 <_start-0xbf18442c>
 3c4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 3c8:	00000b38 	andeq	r0, r0, r8, lsr fp
 3cc:	03000d04 	movweq	r0, #3332	; 0xd04
 3d0:	3b0b3a0e 	blcc	2cec10 <_start-0xbfd393f0>
 3d4:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 3d8:	05000005 	streq	r0, [r0, #-5]
 3dc:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 3e0:	0b3b0b3a 	bleq	ec30d0 <_start-0xbf144f30>
 3e4:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
 3e8:	0d060000 	stceq	0, cr0, [r6, #-0]
 3ec:	3a0e0300 	bcc	380ff4 <_start-0xbfc8700c>
 3f0:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 3f4:	00053813 	andeq	r3, r5, r3, lsl r8
 3f8:	00240700 	eoreq	r0, r4, r0, lsl #14
 3fc:	0b3e0b0b 	bleq	f83030 <_start-0xbf084fd0>
 400:	00000e03 	andeq	r0, r0, r3, lsl #28
 404:	49003508 	stmdbmi	r0, {r3, r8, sl, ip, sp}
 408:	09000013 	stmdbeq	r0, {r0, r1, r4}
 40c:	13490101 	movtne	r0, #37121	; 0x9101
 410:	00001301 	andeq	r1, r0, r1, lsl #6
 414:	4900210a 	stmdbmi	r0, {r1, r3, r8, sp}
 418:	000b2f13 	andeq	r2, fp, r3, lsl pc
 41c:	00160b00 	andseq	r0, r6, r0, lsl #22
 420:	0b3a0e03 	bleq	e83c34 <_start-0xbf1843cc>
 424:	1349053b 	movtne	r0, #38203	; 0x953b
 428:	130c0000 	movwne	r0, #49152	; 0xc000
 42c:	3a0b0b01 	bcc	2c3038 <_start-0xbfd44fc8>
 430:	010b3b0b 	tsteq	fp, fp, lsl #22
 434:	0d000013 	stceq	0, cr0, [r0, #-76]	; 0xffffffb4
 438:	0803000d 	stmdaeq	r3, {r0, r2, r3}
 43c:	0b3b0b3a 	bleq	ec312c <_start-0xbf144ed4>
 440:	0b381349 	bleq	e0516c <_start-0xbf202e94>
 444:	160e0000 	strne	r0, [lr], -r0
 448:	3a0e0300 	bcc	381050 <_start-0xbfc86fb0>
 44c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 450:	0f000013 	svceq	0x00000013
 454:	13490021 	movtne	r0, #36897	; 0x9021
 458:	0000052f 	andeq	r0, r0, pc, lsr #10
 45c:	3e010410 	cfmvdlrcc	mvd1, r0
 460:	490b0b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp}
 464:	3b0b3a13 	blcc	2cecb8 <_start-0xbfd39348>
 468:	0013010b 	andseq	r0, r3, fp, lsl #2
 46c:	00281100 	eoreq	r1, r8, r0, lsl #2
 470:	0b1c0e03 	bleq	703c84 <_start-0xbf90437c>
 474:	2e120000 	cdpcs	0, 1, cr0, cr2, cr0, {0}
 478:	3a0e0301 	bcc	381084 <_start-0xbfc86f7c>
 47c:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 480:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 484:	97184006 	ldrls	r4, [r8, -r6]
 488:	13011942 	movwne	r1, #6466	; 0x1942
 48c:	05130000 	ldreq	r0, [r3, #-0]
 490:	3a0e0300 	bcc	381098 <_start-0xbfc86f68>
 494:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 498:	00180213 	andseq	r0, r8, r3, lsl r2
 49c:	00341400 	eorseq	r1, r4, r0, lsl #8
 4a0:	0b3a0803 	bleq	e824b4 <_start-0xbf185b4c>
 4a4:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 4a8:	00001802 	andeq	r1, r0, r2, lsl #16
 4ac:	03003415 	movweq	r3, #1045	; 0x415
 4b0:	3b0b3a0e 	blcc	2cecf0 <_start-0xbfd39310>
 4b4:	0213490b 	andseq	r4, r3, #180224	; 0x2c000
 4b8:	16000018 			; <UNDEFINED> instruction: 0x16000018
 4bc:	193f002e 	ldmdbne	pc!, {r1, r2, r3, r5}	; <UNPREDICTABLE>
 4c0:	0b3a0e03 	bleq	e83cd4 <_start-0xbf18432c>
 4c4:	01110b3b 	tsteq	r1, fp, lsr fp
 4c8:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 4cc:	00194296 	mulseq	r9, r6, r2
 4d0:	11010000 	mrsne	r0, (UNDEF: 1)
 4d4:	130e2501 	movwne	r2, #58625	; 0xe501
 4d8:	1b0e030b 	blne	38110c <_start-0xbfc86ef4>
 4dc:	1201110e 	andne	r1, r1, #-2147483645	; 0x80000003
 4e0:	00171006 	andseq	r1, r7, r6
 4e4:	01130200 	tsteq	r3, r0, lsl #4
 4e8:	0b3a050b 	bleq	e8191c <_start-0xbf1866e4>
 4ec:	13010b3b 	movwne	r0, #6971	; 0x1b3b
 4f0:	0d030000 	stceq	0, cr0, [r3, #-0]
 4f4:	3a0e0300 	bcc	3810fc <_start-0xbfc86f04>
 4f8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 4fc:	000b3813 	andeq	r3, fp, r3, lsl r8
 500:	000d0400 	andeq	r0, sp, r0, lsl #8
 504:	0b3a0e03 	bleq	e83d18 <_start-0xbf1842e8>
 508:	13490b3b 	movtne	r0, #39739	; 0x9b3b
 50c:	00000538 	andeq	r0, r0, r8, lsr r5
 510:	03000d05 	movweq	r0, #3333	; 0xd05
 514:	3b0b3a08 	blcc	2ced3c <_start-0xbfd392c4>
 518:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 51c:	06000005 	streq	r0, [r0], -r5
 520:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
 524:	053b0b3a 	ldreq	r0, [fp, #-2874]!	; 0xfffff4c6
 528:	05381349 	ldreq	r1, [r8, #-841]!	; 0xfffffcb7
 52c:	24070000 	strcs	r0, [r7], #-0
 530:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 534:	000e030b 	andeq	r0, lr, fp, lsl #6
 538:	00350800 	eorseq	r0, r5, r0, lsl #16
 53c:	00001349 	andeq	r1, r0, r9, asr #6
 540:	49010109 	stmdbmi	r1, {r0, r3, r8}
 544:	00130113 	andseq	r0, r3, r3, lsl r1
 548:	00210a00 	eoreq	r0, r1, r0, lsl #20
 54c:	0b2f1349 	bleq	bc5278 <_start-0xbf442d88>
 550:	160b0000 	strne	r0, [fp], -r0
 554:	3a0e0300 	bcc	38115c <_start-0xbfc86ea4>
 558:	49053b0b 	stmdbmi	r5, {r0, r1, r3, r8, r9, fp, ip, sp}
 55c:	0c000013 	stceq	0, cr0, [r0], {19}
 560:	0b0b0113 	bleq	2c09b4 <_start-0xbfd4764c>
 564:	0b3b0b3a 	bleq	ec3254 <_start-0xbf144dac>
 568:	00001301 	andeq	r1, r0, r1, lsl #6
 56c:	03000d0d 	movweq	r0, #3341	; 0xd0d
 570:	3b0b3a08 	blcc	2ced98 <_start-0xbfd39268>
 574:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
 578:	0e00000b 	cdpeq	0, 0, cr0, cr0, cr11, {0}
 57c:	0e030016 	mcreq	0, 0, r0, cr3, cr6, {0}
 580:	0b3b0b3a 	bleq	ec3270 <_start-0xbf144d90>
 584:	00001349 	andeq	r1, r0, r9, asr #6
 588:	3f012e0f 	svccc	0x00012e0f
 58c:	3a0e0319 	bcc	3811f8 <_start-0xbfc86e08>
 590:	270b3b0b 	strcs	r3, [fp, -fp, lsl #22]
 594:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 598:	97184006 	ldrls	r4, [r8, -r6]
 59c:	13011942 	movwne	r1, #6466	; 0x1942
 5a0:	05100000 	ldreq	r0, [r0, #-0]
 5a4:	3a0e0300 	bcc	3811ac <_start-0xbfc86e54>
 5a8:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 5ac:	00180213 	andseq	r0, r8, r3, lsl r2
 5b0:	00241100 	eoreq	r1, r4, r0, lsl #2
 5b4:	0b3e0b0b 	bleq	f831e8 <_start-0xbf084e18>
 5b8:	00000803 	andeq	r0, r0, r3, lsl #16
 5bc:	3f002e12 	svccc	0x00002e12
 5c0:	3a0e0319 	bcc	38122c <_start-0xbfc86dd4>
 5c4:	110b3b0b 	tstne	fp, fp, lsl #22
 5c8:	40061201 	andmi	r1, r6, r1, lsl #4
 5cc:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 5d0:	01000000 	mrseq	r0, (UNDEF: 0)
 5d4:	0e250111 	mcreq	1, 1, r0, cr5, cr1, {0}
 5d8:	0e030b13 	vmoveq.32	d3[0], r0
 5dc:	01110e1b 	tsteq	r1, fp, lsl lr
 5e0:	17100612 			; <UNDEFINED> instruction: 0x17100612
 5e4:	24020000 	strcs	r0, [r2], #-0
 5e8:	3e0b0b00 	vmlacc.f64	d0, d11, d0
 5ec:	000e030b 	andeq	r0, lr, fp, lsl #6
 5f0:	012e0300 			; <UNDEFINED> instruction: 0x012e0300
 5f4:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
 5f8:	0b3b0b3a 	bleq	ec32e8 <_start-0xbf144d18>
 5fc:	01111927 	tsteq	r1, r7, lsr #18
 600:	18400612 	stmdane	r0, {r1, r4, r9, sl}^
 604:	01194297 			; <UNDEFINED> instruction: 0x01194297
 608:	04000013 	streq	r0, [r0], #-19	; 0xffffffed
 60c:	08030005 	stmdaeq	r3, {r0, r2}
 610:	0b3b0b3a 	bleq	ec3300 <_start-0xbf144d00>
 614:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
 618:	34050000 	strcc	r0, [r5], #-0
 61c:	3a080300 	bcc	201224 <_start-0xbfe06ddc>
 620:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 624:	00180213 	andseq	r0, r8, r3, lsl r2
 628:	00240600 	eoreq	r0, r4, r0, lsl #12
 62c:	0b3e0b0b 	bleq	f83260 <_start-0xbf084da0>
 630:	00000803 	andeq	r0, r0, r3, lsl #16
 634:	3f002e07 	svccc	0x00002e07
 638:	3a0e0319 	bcc	3812a4 <_start-0xbfc86d5c>
 63c:	490b3b0b 	stmdbmi	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 640:	12011113 	andne	r1, r1, #-1073741820	; 0xc0000004
 644:	96184006 	ldrls	r4, [r8], -r6
 648:	00001942 	andeq	r1, r0, r2, asr #18
	...

Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	c0008000 	andgt	r8, r0, r0
  14:	00000218 	andeq	r0, r0, r8, lsl r2
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	00620002 	rsbeq	r0, r2, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	c0008218 	andgt	r8, r0, r8, lsl r2
  34:	000000b0 	strheq	r0, [r0], -r0	; <UNPREDICTABLE>
	...
  40:	0000001c 	andeq	r0, r0, ip, lsl r0
  44:	00cc0002 	sbceq	r0, ip, r2
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	c00082c8 	andgt	r8, r0, r8, asr #5
  54:	00000094 	muleq	r0, r4, r0
	...
  60:	0000001c 	andeq	r0, r0, ip, lsl r0
  64:	01360002 	teqeq	r6, r2
  68:	00040000 	andeq	r0, r4, r0
  6c:	00000000 	andeq	r0, r0, r0
  70:	c000835c 	andgt	r8, r0, ip, asr r3
  74:	000010b8 	strheq	r1, [r0], -r8
	...
  80:	0000001c 	andeq	r0, r0, ip, lsl r0
  84:	05b80002 	ldreq	r0, [r8, #2]!
  88:	00040000 	andeq	r0, r4, r0
  8c:	00000000 	andeq	r0, r0, r0
  90:	c0009414 	andgt	r9, r0, r4, lsl r4
  94:	000002dc 	ldrdeq	r0, [r0], -ip
	...
  a0:	0000001c 	andeq	r0, r0, ip, lsl r0
  a4:	07d00002 	ldrbeq	r0, [r0, r2]
  a8:	00040000 	andeq	r0, r4, r0
  ac:	00000000 	andeq	r0, r0, r0
  b0:	c00096f0 	strdgt	r9, [r0], -r0
  b4:	00000170 	andeq	r0, r0, r0, ror r1
	...
  c0:	0000001c 	andeq	r0, r0, ip, lsl r0
  c4:	0da90002 	stceq	0, cr0, [r9, #8]!
  c8:	00040000 	andeq	r0, r4, r0
  cc:	00000000 	andeq	r0, r0, r0
  d0:	c0009860 	andgt	r9, r0, r0, ror #16
  d4:	00000510 	andeq	r0, r0, r0, lsl r5
	...
  e0:	0000001c 	andeq	r0, r0, ip, lsl r0
  e4:	227c0002 	rsbscs	r0, ip, #2
  e8:	00040000 	andeq	r0, r4, r0
  ec:	00000000 	andeq	r0, r0, r0
  f0:	c0009d70 	andgt	r9, r0, r0, ror sp
  f4:	00000270 	andeq	r0, r0, r0, ror r2
	...
 100:	0000001c 	andeq	r0, r0, ip, lsl r0
 104:	31930002 	orrscc	r0, r3, r2
 108:	00040000 	andeq	r0, r4, r0
 10c:	00000000 	andeq	r0, r0, r0
 110:	c0009fe0 	andgt	r9, r0, r0, ror #31
 114:	00000098 	muleq	r0, r8, r0
	...

Disassembly of section .debug_str:

00000000 <.debug_str>:
       0:	69676964 	stmdbvs	r7!, {r2, r5, r6, r8, fp, sp, lr}^
       4:	5f007374 	svcpl	0x00007374
       8:	6975625f 	ldmdbvs	r5!, {r0, r1, r2, r3, r4, r6, r9, sp, lr}^
       c:	6e69746c 	cdpvs	4, 6, cr7, cr9, cr12, {3}
      10:	5f61765f 	svcpl	0x0061765f
      14:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
      18:	696b7300 	stmdbvs	fp!, {r8, r9, ip, sp, lr}^
      1c:	74615f70 	strbtvc	r5, [r1], #-3952	; 0xfffff090
      20:	6100696f 	tstvs	r0, pc, ror #18
      24:	00736772 	rsbseq	r6, r3, r2, ror r7
      28:	756c6176 	strbvc	r6, [ip, #-374]!	; 0xfffffe8a
      2c:	6f630065 	svcvs	0x00630065
      30:	00746e75 	rsbseq	r6, r4, r5, ror lr
      34:	6f745f5f 	svcvs	0x00745f5f
      38:	65707075 	ldrbvs	r7, [r0, #-117]!	; 0xffffff8b
      3c:	5f5f0072 	svcpl	0x005f0072
      40:	63756e67 	cmnvs	r5, #1648	; 0x670
      44:	5f61765f 	svcpl	0x0061765f
      48:	7473696c 	ldrbtvc	r6, [r3], #-2412	; 0xfffff694
      4c:	65727000 	ldrbvs	r7, [r2, #-0]!
      50:	69736963 	ldmdbvs	r3!, {r0, r1, r5, r6, r8, fp, sp, lr}^
      54:	47006e6f 	strmi	r6, [r0, -pc, ror #28]
      58:	4320554e 			; <UNDEFINED> instruction: 0x4320554e
      5c:	37203131 			; <UNDEFINED> instruction: 0x37203131
      60:	302e352e 	eorcc	r3, lr, lr, lsr #10
      64:	616d2d20 	cmnvs	sp, r0, lsr #26
      68:	2d206d72 	stccs	13, cr6, [r0, #-456]!	; 0xfffffe38
      6c:	6962616d 	stmdbvs	r2!, {r0, r2, r3, r5, r6, r8, sp, lr}^
      70:	6370613d 	cmnvs	r0, #1073741839	; 0x4000000f
      74:	6e672d73 	mcrvs	13, 3, r2, cr7, cr3, {3}
      78:	6d2d2075 	stcvs	0, cr2, [sp, #-468]!	; 0xfffffe2c
      7c:	3d757066 	ldclcc	0, cr7, [r5, #-408]!	; 0xfffffe68
      80:	6e6f656e 	cdpvs	5, 6, cr6, cr15, cr14, {3}
      84:	666d2d20 	strbtvs	r2, [sp], -r0, lsr #26
      88:	74616f6c 	strbtvc	r6, [r1], #-3948	; 0xfffff094
      8c:	6962612d 	stmdbvs	r2!, {r0, r2, r3, r5, r8, sp, lr}^
      90:	666f733d 			; <UNDEFINED> instruction: 0x666f733d
      94:	20706674 	rsbscs	r6, r0, r4, ror r6
      98:	72616d2d 	rsbvc	r6, r1, #2880	; 0xb40
      9c:	613d6863 	teqvs	sp, r3, ror #16
      a0:	37766d72 			; <UNDEFINED> instruction: 0x37766d72
      a4:	2d20612d 	stfcss	f6, [r0, #-180]!	; 0xffffff4c
      a8:	6e75746d 	cdpvs	4, 7, cr7, cr5, cr13, {3}
      ac:	6f633d65 	svcvs	0x00633d65
      b0:	78657472 	stmdavc	r5!, {r1, r4, r5, r6, sl, ip, sp, lr}^
      b4:	2039612d 	eorscs	r6, r9, sp, lsr #2
      b8:	6c746d2d 	ldclvs	13, cr6, [r4], #-180	; 0xffffff4c
      bc:	69642d73 	stmdbvs	r4!, {r0, r1, r4, r5, r6, r8, sl, fp, sp}^
      c0:	63656c61 	cmnvs	r5, #24832	; 0x6100
      c4:	6e673d74 	mcrvs	13, 3, r3, cr7, cr4, {3}
      c8:	672d2075 			; <UNDEFINED> instruction: 0x672d2075
      cc:	304f2d20 	subcc	r2, pc, r0, lsr #26
      d0:	6e662d20 	cdpvs	13, 6, cr2, cr6, cr0, {1}
      d4:	75622d6f 	strbvc	r2, [r2, #-3439]!	; 0xfffff291
      d8:	69746c69 	ldmdbvs	r4!, {r0, r3, r5, r6, sl, fp, sp, lr}^
      dc:	6162006e 	cmnvs	r2, lr, rrx
      e0:	75006573 	strvc	r6, [r0, #-1395]	; 0xfffffa8d
      e4:	6769736e 	strbvs	r7, [r9, -lr, ror #6]!
      e8:	2064656e 	rsbcs	r6, r4, lr, ror #10
      ec:	72616863 	rsbvc	r6, r1, #6488064	; 0x630000
      f0:	6e6f6c00 	cdpvs	12, 6, cr6, cr15, cr0, {0}
      f4:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
      f8:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
      fc:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
     100:	6500746e 	strvs	r7, [r0, #-1134]	; 0xfffffb92
     104:	0070646e 	rsbseq	r6, r0, lr, ror #8
     108:	706d6973 	rsbvc	r6, sp, r3, ror r9
     10c:	735f656c 	cmpvc	pc, #108, 10	; 0x1b000000
     110:	6f747274 	svcvs	0x00747274
     114:	6f63006c 	svcvs	0x0063006c
     118:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
     11c:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
     120:	6972702f 	ldmdbvs	r2!, {r0, r1, r2, r3, r5, ip, sp, lr}^
     124:	2e66746e 	cdpcs	4, 6, cr7, cr6, cr14, {3}
     128:	6c660063 	stclvs	0, cr0, [r6], #-396	; 0xfffffe74
     12c:	00736761 	rsbseq	r6, r3, r1, ror #14
     130:	657a6973 	ldrbvs	r6, [sl, #-2419]!	; 0xfffff68d
     134:	61757100 	cmnvs	r5, r0, lsl #2
     138:	6966696c 	stmdbvs	r6!, {r2, r3, r5, r6, r8, fp, sp, lr}^
     13c:	73007265 	movwvc	r7, #613	; 0x265
     140:	6c706d69 	ldclvs	13, cr6, [r0], #-420	; 0xfffffe5c
     144:	74735f65 	ldrbtvc	r5, [r3], #-3941	; 0xfffff09b
     148:	756f7472 	strbvc	r7, [pc, #-1138]!	; fffffcde <__bss_end__+0x3fff5256>
     14c:	6572006c 	ldrbvs	r0, [r2, #-108]!	; 0xffffff94
     150:	746c7573 	strbtvc	r7, [ip], #-1395	; 0xfffffa8d
     154:	70657200 	rsbvc	r7, r5, r0, lsl #4
     158:	00746165 	rsbseq	r6, r4, r5, ror #2
     15c:	6e727473 	mrcvs	4, 3, r7, cr2, cr3, {3}
     160:	006e656c 	rsbeq	r6, lr, ip, ror #10
     164:	626d756e 	rsbvs	r7, sp, #461373440	; 0x1b800000
     168:	5f007265 	svcpl	0x00007265
     16c:	70797463 	rsbsvc	r7, r9, r3, ror #8
     170:	72700065 	rsbsvc	r0, r0, #101	; 0x65
     174:	62746e69 	rsbsvs	r6, r4, #1680	; 0x690
     178:	65666675 	strbvs	r6, [r6, #-1653]!	; 0xfffff98b
     17c:	69660072 	stmdbvs	r6!, {r1, r4, r5, r6}^
     180:	5f646c65 	svcpl	0x00646c65
     184:	74646977 	strbtvc	r6, [r4], #-2423	; 0xfffff689
     188:	682f0068 	stmdavs	pc!, {r3, r5, r6}	; <UNPREDICTABLE>
     18c:	2f656d6f 	svccs	0x00656d6f
     190:	6c656873 	stclvs	8, cr6, [r5], #-460	; 0xfffffe34
     194:	2f6e6f74 	svccs	0x006e6f74
     198:	6b736544 	blvs	1cd96b0 <_start-0xbe32e950>
     19c:	2f706f74 	svccs	0x00706f74
     1a0:	6a797168 	bvs	1e5c748 <_start-0xbe1ab8b8>
     1a4:	37304c2f 	ldrcc	r4, [r0, -pc, lsr #24]!
     1a8:	6d72615f 	ldfvse	f6, [r2, #-380]!	; 0xfffffe84
     1ac:	7961642f 	stmdbvc	r1!, {r0, r1, r2, r3, r5, sl, sp, lr}^
     1b0:	312d3630 			; <UNDEFINED> instruction: 0x312d3630
     1b4:	6f6c0033 	svcvs	0x006c0033
     1b8:	6920676e 	stmdbvs	r0!, {r1, r2, r3, r5, r6, r8, r9, sl, sp, lr}
     1bc:	7300746e 	movwvc	r7, #1134	; 0x46e
     1c0:	006e6769 	rsbeq	r6, lr, r9, ror #14
     1c4:	65725f5f 	ldrbvs	r5, [r2, #-3935]!	; 0xfffff0a1
     1c8:	73760073 	cmnvc	r6, #115	; 0x73
     1cc:	6e697270 	mcrvs	2, 3, r7, cr9, cr0, {3}
     1d0:	5f006674 	svcpl	0x00006674
     1d4:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
     1d8:	75705f74 	ldrbvc	r5, [r0, #-3956]!	; 0xfffff08c
     1dc:	53006374 	movwpl	r6, #884	; 0x374
     1e0:	46434345 	strbmi	r4, [r3], -r5, asr #6
     1e4:	5f005247 	svcpl	0x00005247
     1e8:	7261755f 	rsbvc	r7, r1, #398458880	; 0x17c00000
     1ec:	75705f74 	ldrbvc	r5, [r0, #-3956]!	; 0xfffff08c
     1f0:	64007374 	strvs	r7, [r0], #-884	; 0xfffffc8c
     1f4:	00617461 	rsbeq	r7, r1, r1, ror #8
     1f8:	524f5452 	subpl	r5, pc, #1375731712	; 0x52000000
     1fc:	52534200 	subspl	r4, r3, #0, 4
     200:	55500052 	ldrbpl	r0, [r0, #-82]	; 0xffffffae
     204:	00524450 	subseq	r4, r2, r0, asr r4
     208:	45444f4d 	strbmi	r4, [r4, #-3917]	; 0xfffff0b3
     20c:	534f0052 	movtpl	r0, #61522	; 0xf052
     210:	44454550 	strbmi	r4, [r5], #-1360	; 0xfffffab0
     214:	54470052 	strbpl	r0, [r7], #-82	; 0xffffffae
     218:	50005250 	andpl	r5, r0, r0, asr r2
     21c:	43534552 	cmpmi	r3, #343932928	; 0x14800000
     220:	74737000 	ldrbtvc	r7, [r3], #-0
     224:	5f5f0072 	svcpl	0x005f0072
     228:	74726175 	ldrbtvc	r6, [r2], #-373	; 0xfffffe8b
     22c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     230:	70670074 	rsbvc	r0, r7, r4, ror r0
     234:	745f6f69 	ldrbvc	r6, [pc], #-3945	; 23c <_start-0xc0007dc4>
     238:	4b434c00 	blmi	10d3240 <_start-0xbef34dc0>
     23c:	61750052 	cmnvs	r5, r2, asr r0
     240:	745f7472 	ldrbvc	r7, [pc], #-1138	; 248 <_start-0xc0007db8>
     244:	59544f00 	ldmdbpl	r4, {r8, r9, sl, fp, lr}^
     248:	00524550 	subseq	r4, r2, r0, asr r5
     24c:	4c524641 	mrrcmi	6, 4, r4, r2, cr1
     250:	755f5f00 	ldrbvc	r5, [pc, #-3840]	; fffff358 <__bss_end__+0x3fff48d0>
     254:	5f747261 	svcpl	0x00747261
     258:	63746567 	cmnvs	r4, #432013312	; 0x19c00000
     25c:	52464100 	subpl	r4, r6, #0, 2
     260:	6f630048 	svcvs	0x00630048
     264:	6e6f6d6d 	cdpvs	13, 6, cr6, cr15, cr13, {3}
     268:	6372732f 	cmnvs	r2, #-1140850688	; 0xbc000000
     26c:	7261752f 	rsbvc	r7, r1, #197132288	; 0xbc00000
     270:	00632e74 	rsbeq	r2, r3, r4, ror lr
     274:	38534552 	ldmdacc	r3, {r1, r4, r6, r8, sl, lr}^
     278:	53455200 	movtpl	r5, #20992	; 0x5200
     27c:	69670039 	stmdbvs	r7!, {r0, r3, r4, r5}^
     280:	745f6463 	ldrbvc	r6, [pc], #-1123	; 288 <_start-0xc0007d78>
     284:	53544600 	cmppl	r4, #0, 12
     288:	46003152 			; <UNDEFINED> instruction: 0x46003152
     28c:	32525354 	subscc	r5, r2, #84, 6	; 0x50000001
     290:	53544600 	cmppl	r4, #0, 12
     294:	53003352 	movwpl	r3, #850	; 0x352
     298:	52454957 	subpl	r4, r5, #1425408	; 0x15c000
     29c:	57530031 	smmlarpl	r3, r1, r0, r0
     2a0:	32524549 	subscc	r4, r2, #306184192	; 0x12400000
     2a4:	49575300 	ldmdbmi	r7, {r8, r9, ip, lr}^
     2a8:	00335245 	eorseq	r5, r3, r5, asr #4
     2ac:	65746e69 	ldrbvs	r6, [r4, #-3689]!	; 0xfffff197
     2b0:	70757272 	rsbsvc	r7, r5, r2, ror r2
     2b4:	64695f74 	strbtvs	r5, [r9], #-3956	; 0xfffff08c
     2b8:	4f454100 	svcmi	0x00454100
     2bc:	46005249 	strmi	r5, [r0], -r9, asr #4
     2c0:	00315250 	eorseq	r5, r1, r0, asr r2
     2c4:	32525046 	subscc	r5, r2, #70	; 0x46
     2c8:	52504600 	subspl	r4, r0, #0, 12
     2cc:	6f640033 	svcvs	0x00640033
     2d0:	7172695f 	cmnvc	r2, pc, asr r9
     2d4:	63696700 	cmnvs	r9, #0, 14
     2d8:	00745f63 	rsbseq	r5, r4, r3, ror #30
     2dc:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     2e0:	00315243 	eorseq	r5, r1, r3, asr #4
     2e4:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     2e8:	00325243 	eorseq	r5, r2, r3, asr #4
     2ec:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     2f0:	00335243 	eorseq	r5, r3, r3, asr #4
     2f4:	49545845 	ldmdbmi	r4, {r0, r2, r6, fp, ip, lr}^
     2f8:	00345243 	eorseq	r5, r4, r3, asr #4
     2fc:	5041534e 	subpl	r5, r1, lr, asr #6
     300:	43003052 	movwmi	r3, #82	; 0x52
     304:	524d4931 	subpl	r4, sp, #802816	; 0xc4000
     308:	31430031 	cmpcc	r3, r1, lsr r0
     30c:	33524d49 	cmpcc	r2, #4672	; 0x1240
     310:	41534900 	cmpmi	r3, r0, lsl #18
     314:	56495443 	strbpl	r5, [r9], -r3, asr #8
     318:	49005245 	stmdbmi	r0, {r0, r2, r6, r9, ip, lr}
     31c:	00524449 	subseq	r4, r2, r9, asr #8
     320:	4f524749 	svcmi	0x00524749
     324:	00525055 	subseq	r5, r2, r5, asr r0
     328:	4d453243 	sfmmi	f3, 2, [r5, #-268]	; 0xfffffef4
     32c:	43003152 	movwmi	r3, #338	; 0x152
     330:	524d4532 	subpl	r4, sp, #209715200	; 0xc800000
     334:	32430032 	subcc	r0, r3, #50	; 0x32
     338:	33524d45 	cmpcc	r2, #4416	; 0x1140
     33c:	74786500 	ldrbtvc	r6, [r8], #-1280	; 0xfffffb00
     340:	00745f69 	rsbseq	r5, r4, r9, ror #30
     344:	4e455349 	cdpmi	3, 4, cr5, cr5, cr9, {2}
     348:	454c4241 	strbmi	r4, [ip, #-577]	; 0xfffffdbf
     34c:	31430052 	qdaddcc	r0, r2, r3
     350:	32524d49 	subscc	r4, r2, #4672	; 0x1240
     354:	53545200 	cmppl	r4, #0, 4
     358:	52003152 	andpl	r3, r0, #-2147483628	; 0x80000014
     35c:	32525354 	subscc	r5, r2, #84, 6	; 0x50000001
     360:	53545200 	cmppl	r4, #0, 4
     364:	44003352 	strmi	r3, [r0], #-850	; 0xfffffcae
     368:	49445249 	stmdbmi	r4, {r0, r3, r6, r9, ip, lr}^
     36c:	50490052 	subpl	r0, r9, r2, asr r0
     370:	524f4952 	subpl	r4, pc, #1343488	; 0x148000
     374:	52595449 	subspl	r5, r9, #1224736768	; 0x49000000
     378:	50534900 	subspl	r4, r3, r0, lsl #18
     37c:	52444e45 	subpl	r4, r4, #1104	; 0x450
     380:	45314300 	ldrmi	r4, [r1, #-768]!	; 0xfffffd00
     384:	0031524d 	eorseq	r5, r1, sp, asr #4
     388:	4d453143 	stfmie	f3, [r5, #-268]	; 0xfffffef4
     38c:	43003252 	movwmi	r3, #594	; 0x252
     390:	524d4531 	subpl	r4, sp, #205520896	; 0xc400000
     394:	42410033 	submi	r0, r1, #51	; 0x33
     398:	49005250 	stmdbmi	r0, {r4, r6, r9, ip, lr}
     39c:	4e455043 	cdpmi	0, 4, cr5, cr5, cr3, {2}
     3a0:	41005244 	tstmi	r0, r4, asr #4
     3a4:	49505048 	ldmdbmi	r0, {r3, r6, ip, lr}^
     3a8:	43490052 	movtmi	r0, #36946	; 0x9052
     3ac:	42414e45 	submi	r4, r1, #1104	; 0x450
     3b0:	0052454c 	subseq	r4, r2, ip, asr #10
     3b4:	52414941 	subpl	r4, r1, #1064960	; 0x104000
     3b8:	41544900 	cmpmi	r4, r0, lsl #18
     3bc:	54454752 	strbpl	r4, [r5], #-1874	; 0xfffff8ae
     3c0:	43005253 	movwmi	r5, #595	; 0x253
     3c4:	004c5254 	subeq	r5, ip, r4, asr r2
     3c8:	31525052 	cmpcc	r2, r2, asr r0
     3cc:	52505200 	subspl	r5, r0, #0, 4
     3d0:	50520032 	subspl	r0, r2, r2, lsr r0
     3d4:	49003352 	stmdbmi	r0, {r1, r4, r6, r8, r9, ip, sp}
     3d8:	54434143 	strbpl	r4, [r3], #-323	; 0xfffffebd
     3dc:	52455649 	subpl	r5, r5, #76546048	; 0x4900000
     3e0:	63727300 	cmnvs	r2, #0, 6
     3e4:	5f6f642f 	svcpl	0x006f642f
     3e8:	2e717269 	cdpcs	2, 7, cr7, cr1, cr9, {3}
     3ec:	45520063 	ldrbmi	r0, [r2, #-99]	; 0xffffff9d
     3f0:	00303153 	eorseq	r3, r0, r3, asr r1
     3f4:	31534552 	cmpcc	r3, r2, asr r5
     3f8:	5a540031 	bpl	15004c4 <_start-0xbeb07b3c>
     3fc:	31524e45 	cmpcc	r2, r5, asr #28
     400:	455a5400 	ldrbmi	r5, [sl, #-1024]	; 0xfffffc00
     404:	0032524e 	eorseq	r5, r2, lr, asr #4
     408:	4e455a54 			; <UNDEFINED> instruction: 0x4e455a54
     40c:	43003352 	movwmi	r3, #850	; 0x352
     410:	524d4932 	subpl	r4, sp, #819200	; 0xc8000
     414:	32430031 	subcc	r0, r3, #49	; 0x31
     418:	32524d49 	subscc	r4, r2, #4672	; 0x1240
     41c:	49324300 	ldmdbmi	r2!, {r8, r9, lr}
     420:	0033524d 	eorseq	r5, r3, sp, asr #4
     424:	31534552 	cmpcc	r3, r2, asr r5
     428:	53455200 	movtpl	r5, #20992	; 0x5200
     42c:	45520032 	ldrbmi	r0, [r2, #-50]	; 0xffffffce
     430:	52003353 	andpl	r3, r0, #1275068417	; 0x4c000001
     434:	00345345 	eorseq	r5, r4, r5, asr #6
     438:	35534552 	ldrbcc	r4, [r3, #-1362]	; 0xfffffaae
     43c:	53455200 	movtpl	r5, #20992	; 0x5200
     440:	45520036 	ldrbmi	r0, [r2, #-54]	; 0xffffffca
     444:	4d003753 	stcmi	7, cr3, [r0, #-332]	; 0xfffffeb4
     448:	5a545f50 	bpl	1518190 <_start-0xbeaefe70>
     44c:	36424841 	strbcc	r4, [r2], -r1, asr #16
     450:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     454:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
     458:	58415f50 	stmdapl	r1, {r4, r6, r8, r9, sl, fp, ip, lr}^
     45c:	504c4d49 	subpl	r4, ip, r9, asr #26
     460:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     464:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
     468:	48415f50 	stmdami	r1, {r4, r6, r8, r9, sl, fp, ip, lr}^
     46c:	4e453242 	cdpmi	2, 4, cr3, cr5, cr2, {2}
     470:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     474:	5f504d00 	svcpl	0x00504d00
     478:	35425041 	strbcc	r5, [r2, #-65]	; 0xffffffbf
     47c:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     480:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     484:	5f504d00 	svcpl	0x00504d00
     488:	35424841 	strbcc	r4, [r2, #-2113]	; 0xfffff7bf
     48c:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     490:	72005254 	andvc	r5, r0, #84, 4	; 0x40000005
     494:	37327365 	ldrcc	r7, [r2, -r5, ror #6]!
     498:	5f504d00 	svcpl	0x00504d00
     49c:	33425041 	movtcc	r5, #8257	; 0x2041
     4a0:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     4a4:	72005252 	andvc	r5, r0, #536870917	; 0x20000005
     4a8:	38327365 	ldmdacc	r2!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     4ac:	49584100 	ldmdbmi	r8, {r8, lr}^
     4b0:	52564944 	subspl	r4, r6, #68, 18	; 0x110000
     4b4:	73657200 	cmnvc	r5, #0, 4
     4b8:	72003131 	andvc	r3, r0, #1073741836	; 0x4000000c
     4bc:	32317365 	eorscc	r7, r1, #-1811939327	; 0x94000001
     4c0:	73657200 	cmnvc	r5, #0, 4
     4c4:	72003331 	andvc	r3, r0, #-1006632960	; 0xc4000000
     4c8:	34317365 	ldrtcc	r7, [r1], #-869	; 0xfffffc9b
     4cc:	73657200 	cmnvc	r5, #0, 4
     4d0:	72003531 	andvc	r3, r0, #205520896	; 0xc400000
     4d4:	36317365 	ldrtcc	r7, [r1], -r5, ror #6
     4d8:	73657200 	cmnvc	r5, #0, 4
     4dc:	4d003731 	stcmi	7, cr3, [r0, #-196]	; 0xffffff3c
     4e0:	50415f50 	subpl	r5, r1, r0, asr pc
     4e4:	4e453542 	cdpmi	5, 4, cr3, cr5, cr2, {2}
     4e8:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     4ec:	73657200 	cmnvc	r5, #0, 4
     4f0:	4d003931 	vstrmi.16	s6, [r0, #-98]	; 0xffffff9e	; <UNPREDICTABLE>
     4f4:	4f425f50 	svcmi	0x00425f50
     4f8:	5243544f 	subpl	r5, r3, #1325400064	; 0x4f000000
     4fc:	42504100 	subsmi	r4, r0, #0, 2
     500:	56494434 			; <UNDEFINED> instruction: 0x56494434
     504:	434d0052 	movtmi	r0, #53330	; 0xd052
     508:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     50c:	45504c31 	ldrbmi	r4, [r0, #-3121]	; 0xfffff3cf
     510:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     514:	504d0052 	subpl	r0, sp, r2, asr r0
     518:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     51c:	45504c34 	ldrbmi	r4, [r0, #-3124]	; 0xfffff3cc
     520:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     524:	434d0052 	movtmi	r0, #53330	; 0xd052
     528:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     52c:	434e4532 	movtmi	r4, #58674	; 0xe532
     530:	0052524c 	subseq	r5, r2, ip, asr #4
     534:	4d4d4453 	cfstrdmi	mvd4, [sp, #-332]	; 0xfffffeb4
     538:	4b433343 	blmi	10cd24c <_start-0xbef3adb4>
     53c:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     540:	5f504d00 	svcpl	0x00504d00
     544:	34424841 	strbcc	r4, [r2], #-2113	; 0xfffff7bf
     548:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     54c:	75005254 	strvc	r5, [r0, #-596]	; 0xfffffdac
     550:	33746e69 	cmncc	r4, #1680	; 0x690
     554:	00745f32 	rsbseq	r5, r4, r2, lsr pc
     558:	525f5242 	subspl	r5, pc, #536870916	; 0x20000004
     55c:	43535453 	cmpmi	r3, #1392508928	; 0x53000000
     560:	0052524c 	subseq	r5, r2, ip, asr #4
     564:	415f434d 	cmpmi	pc, sp, asr #6
     568:	4c334248 	lfmmi	f4, 4, [r3], #-288	; 0xfffffee0
     56c:	434e4550 	movtmi	r4, #58704	; 0xe550
     570:	0052524c 	subseq	r5, r2, ip, asr #4
     574:	4d5f504d 	ldclmi	0, cr5, [pc, #-308]	; 448 <_start-0xc0007bb8>
     578:	4248414c 	submi	r4, r8, #76, 2
     57c:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     580:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     584:	54504c00 	ldrbpl	r4, [r0], #-3072	; 0xfffff400
     588:	43314d49 	teqmi	r1, #4672	; 0x1240
     58c:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
     590:	434d0052 	movtmi	r0, #53330	; 0xd052
     594:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     598:	534e4532 	movtpl	r4, #58674	; 0xe532
     59c:	00525445 	subseq	r5, r2, r5, asr #8
     5a0:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     5a4:	534b4331 	movtpl	r4, #45873	; 0xb331
     5a8:	00524c45 	subseq	r4, r2, r5, asr #24
     5ac:	415f504d 	cmpmi	pc, sp, asr #32
     5b0:	45364248 	ldrmi	r4, [r6, #-584]!	; 0xfffffdb8
     5b4:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     5b8:	41530052 	cmpmi	r3, r2, asr r0
     5bc:	4b433149 	blmi	10ccae8 <_start-0xbef3b518>
     5c0:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     5c4:	4c4c5000 	marmi	acc0, r5, ip
     5c8:	47464332 	smlaldxmi	r4, r6, r2, r3
     5cc:	4d003152 	stfmis	f3, [r0, #-328]	; 0xfffffeb8
     5d0:	50415f43 	subpl	r5, r1, r3, asr #30
     5d4:	4e453442 	cdpmi	4, 4, cr3, cr5, cr2, {2}
     5d8:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     5dc:	42484100 	submi	r4, r8, #0, 2
     5e0:	54535235 	ldrbpl	r5, [r3], #-565	; 0xfffffdcb
     5e4:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     5e8:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     5ec:	534b4336 	movtpl	r4, #45878	; 0xb336
     5f0:	00524c45 	subseq	r4, r2, r5, asr #24
     5f4:	32736572 	rsbscc	r6, r3, #478150656	; 0x1c800000
     5f8:	65720030 	ldrbvs	r0, [r2, #-48]!	; 0xffffffd0
     5fc:	00313273 	eorseq	r3, r1, r3, ror r2
     600:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     604:	4b433837 	blmi	10ce6e8 <_start-0xbef39918>
     608:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     60c:	73657200 	cmnvc	r5, #0, 4
     610:	54003332 	strpl	r3, [r0], #-818	; 0xfffffcce
     614:	4248415a 	submi	r4, r8, #-2147483626	; 0x80000016
     618:	54535236 	ldrbpl	r5, [r3], #-566	; 0xfffffdca
     61c:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     620:	5f504d00 	svcpl	0x00504d00
     624:	48414c4d 	stmdami	r1, {r0, r2, r3, r6, sl, fp, lr}^
     628:	534e4542 	movtpl	r4, #58690	; 0xe542
     62c:	00525445 	subseq	r5, r2, r5, asr #8
     630:	32425041 	subcc	r5, r2, #65	; 0x41
     634:	43545352 	cmpmi	r4, #1207959553	; 0x48000001
     638:	0052524c 	subseq	r5, r2, ip, asr #4
     63c:	415f504d 	cmpmi	pc, sp, asr #32
     640:	4c324248 	lfmmi	f4, 4, [r2], #-288	; 0xfffffee0
     644:	534e4550 	movtpl	r4, #58704	; 0xe550
     648:	00525445 	subseq	r5, r2, r5, asr #8
     64c:	31425041 	cmpcc	r2, r1, asr #32
     650:	52564944 	subspl	r4, r6, #68, 18	; 0x110000
     654:	5f434d00 	svcpl	0x00434d00
     658:	35424841 	strbcc	r4, [r2, #-2113]	; 0xfffff7bf
     65c:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     660:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     664:	42504100 	subsmi	r4, r0, #0, 2
     668:	54535234 	ldrbpl	r5, [r3], #-564	; 0xfffffdcc
     66c:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     670:	4c4c5000 	marmi	acc0, r5, ip
     674:	41524631 	cmpmi	r2, r1, lsr r6
     678:	72005243 	andvc	r5, r0, #805306372	; 0x30000004
     67c:	00317365 	eorseq	r7, r1, r5, ror #6
     680:	32736572 	rsbscc	r6, r3, #478150656	; 0x1c800000
     684:	73657200 	cmnvc	r5, #0, 4
     688:	65720033 	ldrbvs	r0, [r2, #-51]!	; 0xffffffcd
     68c:	72003473 	andvc	r3, r0, #1929379840	; 0x73000000
     690:	00357365 	eorseq	r7, r5, r5, ror #6
     694:	36736572 			; <UNDEFINED> instruction: 0x36736572
     698:	73657200 	cmnvc	r5, #0, 4
     69c:	65720037 	ldrbvs	r0, [r2, #-55]!	; 0xffffffc9
     6a0:	72003873 	andvc	r3, r0, #7536640	; 0x730000
     6a4:	00397365 	eorseq	r7, r9, r5, ror #6
     6a8:	34424841 	strbcc	r4, [r2], #-2113	; 0xfffff7bf
     6ac:	43545352 	cmpmi	r4, #1207959553	; 0x48000001
     6b0:	0052524c 	subseq	r5, r2, ip, asr #4
     6b4:	415f434d 	cmpmi	pc, sp, asr #6
     6b8:	45364248 	ldrmi	r4, [r6, #-584]!	; 0xfffffdb8
     6bc:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     6c0:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
     6c4:	5343344c 	movtpl	r3, #13388	; 0x344c
     6c8:	4c005247 	sfmmi	f5, 4, [r0], {71}	; 0x47
     6cc:	4d495450 	cfstrdmi	mvd5, [r9, #-320]	; 0xfffffec0
     6d0:	4b433534 	blmi	10cdba8 <_start-0xbef3a458>
     6d4:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     6d8:	6c616800 	stclvs	8, cr6, [r1], #-0
     6dc:	7478655f 	ldrbtvc	r6, [r8], #-1375	; 0xfffffaa1
     6e0:	6e695f69 	cdpvs	15, 6, cr5, cr9, cr9, {3}
     6e4:	4d007469 	cfstrsmi	mvf7, [r0, #-420]	; 0xfffffe5c
     6e8:	4c4d5f43 	mcrrmi	15, 4, r5, sp, cr3
     6ec:	45424841 	strbmi	r4, [r2, #-2113]	; 0xfffff7bf
     6f0:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     6f4:	53440052 	movtpl	r0, #16466	; 0x4052
     6f8:	534b4349 	movtpl	r4, #45897	; 0xb349
     6fc:	00524c45 	subseq	r4, r2, r5, asr #24
     700:	545f504d 	ldrbpl	r5, [pc], #-77	; 708 <_start-0xc00078f8>
     704:	4248415a 	submi	r4, r8, #-2147483626	; 0x80000016
     708:	45504c36 	ldrbmi	r4, [r0, #-3126]	; 0xfffff3ca
     70c:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     710:	69670052 	stmdbvs	r7!, {r1, r4, r6}^
     714:	705f6463 	subsvc	r6, pc, r3, ror #8
     718:	6f746972 	svcvs	0x00746972
     71c:	00797469 	rsbseq	r7, r9, r9, ror #8
     720:	32736572 	rsbscc	r6, r3, #478150656	; 0x1c800000
     724:	54450035 	strbpl	r0, [r5], #-53	; 0xffffffcb
     728:	534b4348 	movtpl	r4, #45896	; 0xb348
     72c:	00524c45 	subseq	r4, r2, r5, asr #24
     730:	4d5f434d 	ldclmi	3, cr4, [pc, #-308]	; 604 <_start-0xc00079fc>
     734:	4248414c 	submi	r4, r8, #76, 2
     738:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     73c:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     740:	42504100 	subsmi	r4, r0, #0, 2
     744:	54535232 	ldrbpl	r5, [r3], #-562	; 0xfffffdce
     748:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     74c:	45434f00 	strbmi	r4, [r3, #-3840]	; 0xfffff100
     750:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     754:	434d0052 	movtmi	r0, #53330	; 0xd052
     758:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     75c:	45504c34 	ldrbmi	r4, [r0, #-3124]	; 0xfffff3cc
     760:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     764:	504d0052 	subpl	r0, sp, r2, asr r0
     768:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     76c:	434e4534 	movtmi	r4, #58676	; 0xe534
     770:	0052524c 	subseq	r5, r2, ip, asr #4
     774:	415f434d 	cmpmi	pc, sp, asr #6
     778:	4c4d4958 	mcrrmi	9, 5, r4, sp, cr8	; <UNPREDICTABLE>
     77c:	534e4550 	movtpl	r4, #58704	; 0xe550
     780:	00525445 	subseq	r5, r2, r5, asr #8
     784:	415f504d 	cmpmi	pc, sp, asr #32
     788:	4c334248 	lfmmi	f4, 4, [r3], #-288	; 0xfffffee0
     78c:	534e4550 	movtpl	r4, #58704	; 0xe550
     790:	00525445 	subseq	r5, r2, r5, asr #8
     794:	415f434d 	cmpmi	pc, sp, asr #6
     798:	454d4958 	strbmi	r4, [sp, #-2392]	; 0xfffff6a8
     79c:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     7a0:	434d0052 	movtmi	r0, #53330	; 0xd052
     7a4:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     7a8:	434e4534 	movtmi	r4, #58676	; 0xe534
     7ac:	0052524c 	subseq	r5, r2, ip, asr #4
     7b0:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     7b4:	53545352 	cmppl	r4, #1207959553	; 0x48000001
     7b8:	00525445 	subseq	r5, r2, r5, asr #8
     7bc:	344b4352 	strbcc	r4, [fp], #-850	; 0xfffffcae
     7c0:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     7c4:	5f504d00 	svcpl	0x00504d00
     7c8:	34425041 	strbcc	r5, [r2], #-65	; 0xffffffbf
     7cc:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     7d0:	72005254 	andvc	r5, r0, #84, 4	; 0x40000005
     7d4:	30317365 	eorscc	r7, r1, r5, ror #6
     7d8:	5f434d00 	svcpl	0x00434d00
     7dc:	31425041 	cmpcc	r2, r1, asr #32
     7e0:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     7e4:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     7e8:	4c4c5000 	marmi	acc0, r5, ip
     7ec:	41524632 	cmpmi	r2, r2, lsr r6
     7f0:	55005243 	strpl	r5, [r0, #-579]	; 0xfffffdbd
     7f4:	32545241 	subscc	r5, r4, #268435460	; 0x10000004
     7f8:	534b4334 	movtpl	r4, #45876	; 0xb334
     7fc:	00524c45 	subseq	r4, r2, r5, asr #24
     800:	314f434d 	cmpcc	pc, sp, asr #6
     804:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     808:	5f434d00 	svcpl	0x00434d00
     80c:	32425041 	subcc	r5, r2, #65	; 0x41
     810:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     814:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     818:	63637200 	cmnvs	r3, #0, 4
     81c:	4d00745f 	cfstrsmi	mvf7, [r0, #-380]	; 0xfffffe84
     820:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     824:	504c3642 	subpl	r3, ip, r2, asr #12
     828:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     82c:	72005254 	andvc	r5, r0, #84, 4	; 0x40000005
     830:	38317365 	ldmdacc	r1!, {r0, r2, r5, r6, r8, r9, ip, sp, lr}
     834:	4c4c5000 	marmi	acc0, r5, ip
     838:	47534331 	smmlarmi	r3, r1, r3, r4
     83c:	44460052 	strbmi	r0, [r6], #-82	; 0xffffffae
     840:	434e4143 	movtmi	r4, #57667	; 0xe143
     844:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
     848:	72730052 	rsbsvc	r0, r3, #82	; 0x52
     84c:	656b2f63 	strbvs	r2, [fp, #-3939]!	; 0xfffff09d
     850:	00632e79 	rsbeq	r2, r3, r9, ror lr
     854:	4d5f504d 	ldclmi	0, cr5, [pc, #-308]	; 728 <_start-0xc00078d8>
     858:	4248414c 	submi	r4, r8, #76, 2
     85c:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     860:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     864:	5f434d00 	svcpl	0x00434d00
     868:	32425041 	subcc	r5, r2, #65	; 0x41
     86c:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     870:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
     874:	48415f50 	stmdami	r1, {r4, r6, r8, r9, sl, fp, ip, lr}^
     878:	4e453642 	cdpmi	6, 4, cr3, cr5, cr2, {2}
     87c:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     880:	5f504d00 	svcpl	0x00504d00
     884:	32424841 	subcc	r4, r2, #4259840	; 0x410000
     888:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     88c:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     890:	49415300 	stmdbmi	r1, {r8, r9, ip, lr}^
     894:	534b4333 	movtpl	r4, #45875	; 0xb333
     898:	00524c45 	subseq	r4, r2, r5, asr #24
     89c:	4b43504d 	blmi	10d49d8 <_start-0xbef33628>
     8a0:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     8a4:	5f434d00 	svcpl	0x00434d00
     8a8:	48414c4d 	stmdami	r1, {r0, r2, r3, r6, sl, fp, lr}^
     8ac:	45504c42 	ldrbmi	r4, [r0, #-3138]	; 0xfffff3be
     8b0:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     8b4:	434d0052 	movtmi	r0, #53330	; 0xd052
     8b8:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     8bc:	434e4534 	movtmi	r4, #58676	; 0xe534
     8c0:	0052524c 	subseq	r5, r2, ip, asr #4
     8c4:	43495348 	movtmi	r5, #37704	; 0x9348
     8c8:	00524746 	subseq	r4, r2, r6, asr #14
     8cc:	32474e52 	subcc	r4, r7, #1312	; 0x520
     8d0:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     8d4:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
     8d8:	4c4d5f50 	mcrrmi	15, 5, r5, sp, cr0
     8dc:	45424841 	strbmi	r4, [r2, #-2113]	; 0xfffff7bf
     8e0:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     8e4:	48410052 	stmdami	r1, {r1, r4, r6}^
     8e8:	53523542 	cmppl	r2, #276824064	; 0x10800000
     8ec:	54455354 	strbpl	r5, [r5], #-852	; 0xfffffcac
     8f0:	50410052 	subpl	r0, r1, r2, asr r0
     8f4:	53523342 	cmppl	r2, #134217729	; 0x8000001
     8f8:	54455354 	strbpl	r5, [r5], #-852	; 0xfffffcac
     8fc:	434d0052 	movtmi	r0, #53330	; 0xd052
     900:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     904:	45504c35 	ldrbmi	r4, [r0, #-3125]	; 0xfffff3cb
     908:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     90c:	57500052 			; <UNDEFINED> instruction: 0x57500052
     910:	44504c52 	ldrbmi	r4, [r0], #-3154	; 0xfffff3ae
     914:	5243594c 	subpl	r5, r3, #76, 18	; 0x130000
     918:	42484100 	submi	r4, r8, #0, 2
     91c:	54535233 	ldrbpl	r5, [r3], #-563	; 0xfffffdcd
     920:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     924:	73657200 	cmnvc	r5, #0, 4
     928:	4d003632 	stcmi	6, cr3, [r0, #-200]	; 0xffffff38
     92c:	53525f43 	cmppl	r2, #268	; 0x10c
     930:	4c435354 	mcrrmi	3, 5, r5, r3, cr4
     934:	53005252 	movwpl	r5, #594	; 0x252
     938:	00524449 	subseq	r4, r2, r9, asr #8
     93c:	33433249 	movtcc	r3, #12873	; 0x3249
     940:	534b4335 	movtpl	r4, #45877	; 0xb335
     944:	00524c45 	subseq	r4, r2, r5, asr #24
     948:	475f504d 	ldrbmi	r5, [pc, -sp, asr #32]
     94c:	43545352 	cmpmi	r4, #1207959553	; 0x48000001
     950:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     954:	42504100 	subsmi	r4, r0, #0, 2
     958:	56494433 			; <UNDEFINED> instruction: 0x56494433
     95c:	504d0052 	subpl	r0, sp, r2, asr r0
     960:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     964:	45504c34 	ldrbmi	r4, [r0, #-3124]	; 0xfffff3cc
     968:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     96c:	32490052 	subcc	r0, r9, #82	; 0x52
     970:	43323143 	teqmi	r2, #-1073741808	; 0xc0000010
     974:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
     978:	434d0052 	movtmi	r0, #53330	; 0xd052
     97c:	414c4d5f 	cmpmi	ip, pc, asr sp
     980:	4e454248 	cdpmi	2, 4, cr4, cr5, cr8, {2}
     984:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     988:	5f434d00 	svcpl	0x00434d00
     98c:	33424841 	movtcc	r4, #10305	; 0x2841
     990:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     994:	50005254 	andpl	r5, r0, r4, asr r2
     998:	43314c4c 	teqmi	r1, #76, 24	; 0x4c00
     99c:	31524746 	cmpcc	r2, r6, asr #14
     9a0:	4c4c5000 	marmi	acc0, r5, ip
     9a4:	47464331 	smlaldxmi	r4, r6, r1, r3
     9a8:	4d003252 	sfmmi	f3, 4, [r0, #-328]	; 0xfffffeb8
     9ac:	50415f50 	subpl	r5, r1, r0, asr pc
     9b0:	4e453142 	dvfmism	f3, f5, f2
     9b4:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     9b8:	415a5400 	cmpmi	sl, r0, lsl #8
     9bc:	52364248 	eorspl	r4, r6, #72, 4	; 0x80000004
     9c0:	4c435453 	cfstrdmi	mvd5, [r3], {83}	; 0x53
     9c4:	41005252 	tstmi	r0, r2, asr r2
     9c8:	52334248 	eorspl	r4, r3, #72, 4	; 0x80000004
     9cc:	4c435453 	cfstrdmi	mvd5, [r3], {83}	; 0x53
     9d0:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
     9d4:	5a545f50 	bpl	151871c <_start-0xbeaef8e4>
     9d8:	36424841 	strbcc	r4, [r2], -r1, asr #16
     9dc:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     9e0:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     9e4:	5f434d00 	svcpl	0x00434d00
     9e8:	35424841 	strbcc	r4, [r2, #-2113]	; 0xfffff7bf
     9ec:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     9f0:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     9f4:	50415f50 	subpl	r5, r1, r0, asr pc
     9f8:	504c3342 	subpl	r3, ip, r2, asr #6
     9fc:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     a00:	64005254 	strvs	r5, [r0], #-596	; 0xfffffdac
     a04:	64657365 	strbtvs	r7, [r5], #-869	; 0xfffffc9b
     a08:	745f6567 	ldrbvc	r6, [pc], #-1383	; a10 <_start-0xc00075f0>
     a0c:	49505300 	ldmdbmi	r0, {r8, r9, ip, lr}^
     a10:	33325332 	teqcc	r2, #-939524096	; 0xc8000000
     a14:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     a18:	4f00524c 	svcmi	0x0000524c
     a1c:	434e4543 	movtmi	r4, #58691	; 0xe543
     a20:	0052524c 	subseq	r5, r2, ip, asr #4
     a24:	43474244 	movtmi	r4, #29252	; 0x7244
     a28:	00524746 	subseq	r4, r2, r6, asr #14
     a2c:	415f434d 	cmpmi	pc, sp, asr #6
     a30:	4c334250 	lfmmi	f4, 4, [r3], #-320	; 0xfffffec0
     a34:	534e4550 	movtpl	r4, #58704	; 0xe550
     a38:	00525445 	subseq	r5, r2, r5, asr #8
     a3c:	324f434d 	subcc	r4, pc, #872415233	; 0x34000001
     a40:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     a44:	5f504d00 	svcpl	0x00504d00
     a48:	47445749 	strbmi	r5, [r4, -r9, asr #14]
     a4c:	45535a46 	ldrbmi	r5, [r3, #-2630]	; 0xfffff5ba
     a50:	52005254 	andpl	r5, r0, #84, 4	; 0x40000005
     a54:	49444354 	stmdbmi	r4, {r2, r4, r6, r8, r9, lr}^
     a58:	53005256 	movwpl	r5, #598	; 0x256
     a5c:	4e454754 	mcrmi	7, 2, r4, cr5, cr4, {2}
     a60:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     a64:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
     a68:	50415f43 	subpl	r5, r1, r3, asr #30
     a6c:	504c3442 	subpl	r3, ip, r2, asr #8
     a70:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     a74:	55005254 	strpl	r5, [r0, #-596]	; 0xfffffdac
     a78:	33545241 	cmpcc	r4, #268435460	; 0x10000004
     a7c:	534b4335 	movtpl	r4, #45877	; 0xb335
     a80:	00524c45 	subseq	r4, r2, r5, asr #24
     a84:	415f504d 	cmpmi	pc, sp, asr #32
     a88:	45344250 	ldrmi	r4, [r4, #-592]!	; 0xfffffdb0
     a8c:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     a90:	434d0052 	movtmi	r0, #53330	; 0xd052
     a94:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     a98:	434e4533 	movtmi	r4, #58675	; 0xe533
     a9c:	0052524c 	subseq	r5, r2, ip, asr #4
     aa0:	474d4954 	smlsldmi	r4, sp, r4, r9
     aa4:	45525032 	ldrbmi	r5, [r2, #-50]	; 0xffffffce
     aa8:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
     aac:	5243334c 	subpl	r3, r3, #76, 6	; 0x30000001
     ab0:	5f504d00 	svcpl	0x00504d00
     ab4:	32425041 	subcc	r5, r2, #65	; 0x41
     ab8:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     abc:	50005254 	andpl	r5, r0, r4, asr r2
     ac0:	46344c4c 	ldrtmi	r4, [r4], -ip, asr #24
     ac4:	52434152 	subpl	r4, r3, #-2147483628	; 0x80000014
     ac8:	5f504d00 	svcpl	0x00504d00
     acc:	32425041 	subcc	r5, r2, #65	; 0x41
     ad0:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     ad4:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     ad8:	42504100 	subsmi	r4, r0, #0, 2
     adc:	54535231 	ldrbpl	r5, [r3], #-561	; 0xfffffdcf
     ae0:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     ae4:	5f434d00 	svcpl	0x00434d00
     ae8:	33424841 	movtcc	r4, #10305	; 0x2841
     aec:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     af0:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     af4:	5f434d00 	svcpl	0x00434d00
     af8:	36424841 	strbcc	r4, [r2], -r1, asr #16
     afc:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     b00:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     b04:	4c445200 	sfmmi	f5, 2, [r4], {-0}
     b08:	52434953 	subpl	r4, r3, #1359872	; 0x14c000
     b0c:	4c4c5000 	marmi	acc0, r5, ip
     b10:	00524334 	subseq	r4, r2, r4, lsr r3
     b14:	314b4350 	cmpcc	fp, r0, asr r3
     b18:	4c455332 	mcrrmi	3, 3, r5, r5, cr2
     b1c:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
     b20:	4643324c 	strbmi	r3, [r3], -ip, asr #4
     b24:	00325247 	eorseq	r5, r2, r7, asr #4
     b28:	344c4c50 	strbcc	r4, [ip], #-3152	; 0xfffff3b0
     b2c:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     b30:	65720031 	ldrbvs	r0, [r2, #-49]!	; 0xffffffcf
     b34:	00343273 	eorseq	r3, r4, r3, ror r2
     b38:	415f504d 	cmpmi	pc, sp, asr #32
     b3c:	4c354248 	lfmmi	f4, 4, [r5], #-288	; 0xfffffee0
     b40:	534e4550 	movtpl	r4, #58704	; 0xe550
     b44:	00525445 	subseq	r5, r2, r5, asr #8
     b48:	415f504d 	cmpmi	pc, sp, asr #32
     b4c:	45334248 	ldrmi	r4, [r3, #-584]!	; 0xfffffdb8
     b50:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     b54:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
     b58:	5343334c 	movtpl	r3, #13132	; 0x334c
     b5c:	4d005247 	sfmmi	f5, 4, [r0, #-284]	; 0xfffffee4
     b60:	52535f50 	subspl	r5, r3, #80, 30	; 0x140
     b64:	45535145 	ldrbmi	r5, [r3, #-325]	; 0xfffffebb
     b68:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     b6c:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     b70:	504c3242 	subpl	r3, ip, r2, asr #4
     b74:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     b78:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     b7c:	58415f50 	stmdapl	r1, {r4, r6, r8, r9, sl, fp, ip, lr}^
     b80:	504c4d49 	subpl	r4, ip, r9, asr #26
     b84:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     b88:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     b8c:	50415f43 	subpl	r5, r1, r3, asr #30
     b90:	504c3342 	subpl	r3, ip, r2, asr #6
     b94:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     b98:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
     b9c:	50415f43 	subpl	r5, r1, r3, asr #30
     ba0:	4e453142 	dvfmism	f3, f5, f2
     ba4:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     ba8:	43504d00 	cmpmi	r0, #0, 26
     bac:	5649444b 	strbpl	r4, [r9], -fp, asr #8
     bb0:	44440052 	strbmi	r0, [r4], #-82	; 0xffffffae
     bb4:	46544952 			; <UNDEFINED> instruction: 0x46544952
     bb8:	43005243 	movwmi	r5, #579	; 0x243
     bbc:	43524550 	cmpmi	r2, #80, 10	; 0x14000000
     bc0:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
     bc4:	45430052 	strbmi	r0, [r3, #-82]	; 0xffffffae
     bc8:	534b4343 	movtpl	r4, #45891	; 0xb343
     bcc:	00524c45 	subseq	r4, r2, r5, asr #24
     bd0:	435f504d 	cmpmi	pc, #77	; 0x4d
     bd4:	00524549 	subseq	r4, r2, r9, asr #10
     bd8:	43434441 	movtmi	r4, #13377	; 0x3441
     bdc:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
     be0:	434d0052 	movtmi	r0, #53330	; 0xd052
     be4:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     be8:	534e4533 	movtpl	r4, #58675	; 0xe533
     bec:	00525445 	subseq	r5, r2, r5, asr #8
     bf0:	36424841 	strbcc	r4, [r2], -r1, asr #16
     bf4:	53545352 	cmppl	r4, #1207959553	; 0x48000001
     bf8:	00525445 	subseq	r5, r2, r5, asr #8
     bfc:	415f504d 	cmpmi	pc, sp, asr #32
     c00:	54535250 	ldrbpl	r5, [r3], #-592	; 0xfffffdb0
     c04:	41005243 	tstmi	r0, r3, asr #4
     c08:	52354250 	eorspl	r4, r5, #80, 4
     c0c:	45535453 	ldrbmi	r5, [r3, #-1107]	; 0xfffffbad
     c10:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     c14:	58415f43 	stmdapl	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     c18:	504c4d49 	subpl	r4, ip, r9, asr #26
     c1c:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     c20:	52005252 	andpl	r5, r0, #536870917	; 0x20000005
     c24:	53334b43 	teqpl	r3, #68608	; 0x10c00
     c28:	00524c45 	subseq	r4, r2, r5, asr #24
     c2c:	52524556 	subspl	r4, r2, #360710144	; 0x15800000
     c30:	79656b00 	stmdbvc	r5!, {r8, r9, fp, sp, lr}^
     c34:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
     c38:	434d0074 	movtmi	r0, #53364	; 0xd074
     c3c:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     c40:	534e4535 	movtpl	r4, #58677	; 0xe535
     c44:	00525445 	subseq	r5, r2, r5, asr #8
     c48:	415f434d 	cmpmi	pc, sp, asr #6
     c4c:	45324248 	ldrmi	r4, [r2, #-584]!	; 0xfffffdb8
     c50:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     c54:	434d0052 	movtmi	r0, #53330	; 0xd052
     c58:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     c5c:	45504c35 	ldrbmi	r4, [r0, #-3125]	; 0xfffff3cb
     c60:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     c64:	434d0052 	movtmi	r0, #53330	; 0xd052
     c68:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     c6c:	434e4533 	movtmi	r4, #58675	; 0xe533
     c70:	0052524c 	subseq	r5, r2, ip, asr #4
     c74:	6f697067 	svcvs	0x00697067
     c78:	6f72675f 	svcvs	0x0072675f
     c7c:	4d007075 	stcmi	0, cr7, [r0, #-468]	; 0xfffffe2c
     c80:	49445543 	stmdbmi	r4, {r0, r1, r6, r8, sl, ip, lr}^
     c84:	4d005256 	sfmmi	f5, 4, [r0, #-344]	; 0xfffffea8
     c88:	50415f50 	subpl	r5, r1, r0, asr pc
     c8c:	4e453142 	dvfmism	f3, f5, f2
     c90:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     c94:	5f504d00 	svcpl	0x00504d00
     c98:	00524347 	subseq	r4, r2, r7, asr #6
     c9c:	32495053 	subcc	r5, r9, #83	; 0x53
     ca0:	4b433153 	blmi	10cd1f4 <_start-0xbef3ae0c>
     ca4:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     ca8:	42504100 	subsmi	r4, r0, #0, 2
     cac:	56494435 			; <UNDEFINED> instruction: 0x56494435
     cb0:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
     cb4:	4643334c 	strbmi	r3, [r3], -ip, asr #6
     cb8:	00325247 	eorseq	r5, r2, r7, asr #4
     cbc:	415f504d 	cmpmi	pc, sp, asr #32
     cc0:	4c334248 	lfmmi	f4, 4, [r3], #-288	; 0xfffffee0
     cc4:	434e4550 	movtmi	r4, #58704	; 0xe550
     cc8:	0052524c 	subseq	r5, r2, ip, asr #4
     ccc:	54524155 	ldrbpl	r4, [r2], #-341	; 0xfffffeab
     cd0:	534b4336 	movtpl	r4, #45878	; 0xb336
     cd4:	00524c45 	subseq	r4, r2, r5, asr #24
     cd8:	415f434d 	cmpmi	pc, sp, asr #6
     cdc:	45354248 	ldrmi	r4, [r5, #-584]!	; 0xfffffdb8
     ce0:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     ce4:	504d0052 	subpl	r0, sp, r2, asr r0
     ce8:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     cec:	45504c33 	ldrbmi	r4, [r0, #-3123]	; 0xfffff3cd
     cf0:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     cf4:	76650052 			; <UNDEFINED> instruction: 0x76650052
     cf8:	5f746e65 	svcpl	0x00746e65
     cfc:	4d006469 	cfstrsmi	mvf6, [r0, #-420]	; 0xfffffe5c
     d00:	5a545f50 	bpl	1518a48 <_start-0xbeaef5b8>
     d04:	36424841 	strbcc	r4, [r2], -r1, asr #16
     d08:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     d0c:	4400524c 	strmi	r5, [r0], #-588	; 0xfffffdb4
     d10:	42415349 	submi	r5, r1, #603979777	; 0x24000001
     d14:	0044454c 	subeq	r4, r4, ip, asr #10
     d18:	415f504d 	cmpmi	pc, sp, asr #32
     d1c:	45324250 	ldrmi	r4, [r2, #-592]!	; 0xfffffdb0
     d20:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     d24:	4c500052 	mrrcmi	0, 5, r0, r0, cr2	; <UNPREDICTABLE>
     d28:	5243324c 	subpl	r3, r3, #76, 4	; 0xc0000004
     d2c:	53534d00 	cmppl	r3, #0, 26
     d30:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     d34:	5300524c 	movwpl	r5, #588	; 0x24c
     d38:	46494450 			; <UNDEFINED> instruction: 0x46494450
     d3c:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     d40:	4c00524c 	sfmmi	f5, 4, [r0], {76}	; 0x4c
     d44:	4d495450 	cfstrdmi	mvd5, [r9, #-320]	; 0xfffffec0
     d48:	4b433332 	blmi	10cda18 <_start-0xbef3a5e8>
     d4c:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     d50:	5f504d00 	svcpl	0x00504d00
     d54:	36424841 	strbcc	r4, [r2], -r1, asr #16
     d58:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     d5c:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
     d60:	5f434d00 	svcpl	0x00434d00
     d64:	32425041 	subcc	r5, r2, #65	; 0x41
     d68:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     d6c:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     d70:	5f504d00 	svcpl	0x00504d00
     d74:	47445749 	strbmi	r5, [r4, -r9, asr #14]
     d78:	4c435a46 	mcrrmi	10, 4, r5, r3, cr6
     d7c:	4d005252 	sfmmi	f5, 4, [r0, #-328]	; 0xfffffeb8
     d80:	50415f50 	subpl	r5, r1, r0, asr pc
     d84:	53545352 	cmppl	r4, #1207959553	; 0x48000001
     d88:	434d0052 	movtmi	r0, #53330	; 0xd052
     d8c:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     d90:	45504c34 	ldrbmi	r4, [r0, #-3124]	; 0xfffff3cc
     d94:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     d98:	48410052 	stmdami	r1, {r1, r4, r6}^
     d9c:	53523442 	cmppl	r2, #1107296256	; 0x42000000
     da0:	54455354 	strbpl	r5, [r5], #-852	; 0xfffffcac
     da4:	48410052 	stmdami	r1, {r1, r4, r6}^
     da8:	53523242 	cmppl	r2, #536870916	; 0x20000004
     dac:	524c4354 	subpl	r4, ip, #84, 6	; 0x50000001
     db0:	504d0052 	subpl	r0, sp, r2, asr r0
     db4:	4649435f 			; <UNDEFINED> instruction: 0x4649435f
     db8:	504d0052 	subpl	r0, sp, r2, asr r0
     dbc:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     dc0:	534e4532 	movtpl	r4, #58674	; 0xe532
     dc4:	00525445 	subseq	r5, r2, r5, asr #8
     dc8:	415f504d 	cmpmi	pc, sp, asr #32
     dcc:	4c354250 	lfmmi	f4, 4, [r5], #-320	; 0xfffffec0
     dd0:	534e4550 	movtpl	r4, #58704	; 0xe550
     dd4:	00525445 	subseq	r5, r2, r5, asr #8
     dd8:	415f504d 	cmpmi	pc, sp, asr #32
     ddc:	45334250 	ldrmi	r4, [r3, #-592]!	; 0xfffffdb0
     de0:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     de4:	50410052 	subpl	r0, r1, r2, asr r0
     de8:	53523142 	cmppl	r2, #-2147483632	; 0x80000010
     dec:	524c4354 	subpl	r4, ip, #84, 6	; 0x50000001
     df0:	50410052 	subpl	r0, r1, r2, asr r0
     df4:	49443242 	stmdbmi	r4, {r1, r6, r9, ip, sp}^
     df8:	6f005256 	svcvs	0x00005256
     dfc:	65736666 	ldrbvs	r6, [r3, #-1638]!	; 0xfffff99a
     e00:	504d0074 	subpl	r0, sp, r4, ror r0
     e04:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     e08:	534e4535 	movtpl	r4, #58677	; 0xe535
     e0c:	00525445 	subseq	r5, r2, r5, asr #8
     e10:	344c4c50 	strbcc	r4, [ip], #-3152	; 0xfffff3b0
     e14:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     e18:	504d0032 	subpl	r0, sp, r2, lsr r0
     e1c:	4248415f 	submi	r4, r8, #-1073741801	; 0xc0000017
     e20:	45504c35 	ldrbmi	r4, [r0, #-3125]	; 0xfffff3cb
     e24:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     e28:	504d0052 	subpl	r0, sp, r2, asr r0
     e2c:	5453525f 	ldrbpl	r5, [r3], #-607	; 0xfffffda1
     e30:	4d005353 	stcmi	3, cr5, [r0, #-332]	; 0xfffffeb4
     e34:	48415f50 	stmdami	r1, {r4, r6, r8, r9, sl, fp, ip, lr}^
     e38:	4e453342 	cdpmi	3, 4, cr3, cr5, cr2, {2}
     e3c:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     e40:	42504100 	subsmi	r4, r0, #0, 2
     e44:	54535233 	ldrbpl	r5, [r3], #-563	; 0xfffffdcd
     e48:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     e4c:	49534300 	ldmdbmi	r3, {r8, r9, lr}^
     e50:	52474643 	subpl	r4, r7, #70254592	; 0x4300000
     e54:	414e4500 	cmpmi	lr, r0, lsl #10
     e58:	44454c42 	strbmi	r4, [r5], #-3138	; 0xfffff3be
     e5c:	5f504d00 	svcpl	0x00504d00
     e60:	51455253 	cmppl	r5, r3, asr r2
     e64:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     e68:	73656400 	cmnvc	r5, #0, 8
     e6c:	65676465 	strbvs	r6, [r7, #-1125]!	; 0xfffffb9b
     e70:	646f6d5f 	strbtvs	r6, [pc], #-3423	; e78 <_start-0xc0007188>
     e74:	434d0065 	movtmi	r0, #53349	; 0xd065
     e78:	4549435f 	strbmi	r4, [r9, #-863]	; 0xfffffca1
     e7c:	434d0052 	movtmi	r0, #53330	; 0xd052
     e80:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     e84:	434e4531 	movtmi	r4, #58673	; 0xe531
     e88:	0052524c 	subseq	r5, r2, ip, asr #4
     e8c:	415f504d 	cmpmi	pc, sp, asr #32
     e90:	45354248 	ldrmi	r4, [r5, #-584]!	; 0xfffffdb8
     e94:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     e98:	504d0052 	subpl	r0, sp, r2, asr r0
     e9c:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     ea0:	45504c34 	ldrbmi	r4, [r0, #-3124]	; 0xfffff3cc
     ea4:	5445534e 	strbpl	r5, [r5], #-846	; 0xfffffcb2
     ea8:	504d0052 	subpl	r0, sp, r2, asr r0
     eac:	4250415f 	subsmi	r4, r0, #-1073741801	; 0xc0000017
     eb0:	45504c34 	ldrbmi	r4, [r0, #-3124]	; 0xfffff3cc
     eb4:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     eb8:	41530052 	cmpmi	r3, r2, asr r0
     ebc:	4b433249 	blmi	10cd7e8 <_start-0xbef3a818>
     ec0:	524c4553 	subpl	r4, ip, #348127232	; 0x14c00000
     ec4:	4d445300 	stclmi	3, cr5, [r4, #-0]
     ec8:	3231434d 	eorscc	r4, r1, #872415233	; 0x34000001
     ecc:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     ed0:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
     ed4:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     ed8:	504c3242 	subpl	r3, ip, r2, asr #4
     edc:	4c434e45 	mcrrmi	14, 4, r4, r3, cr5
     ee0:	51005252 	tstpl	r0, r2, asr r2
     ee4:	43495053 	movtmi	r5, #36947	; 0x9053
     ee8:	4c45534b 	mcrrmi	3, 4, r5, r5, cr11
     eec:	434d0052 	movtmi	r0, #53330	; 0xd052
     ef0:	4958415f 	ldmdbmi	r8, {r0, r1, r2, r3, r4, r6, r8, lr}^
     ef4:	534e454d 	movtpl	r4, #58701	; 0xe54d
     ef8:	00525445 	subseq	r5, r2, r5, asr #8
     efc:	34495053 	strbcc	r5, [r9], #-83	; 0xffffffad
     f00:	534b4335 	movtpl	r4, #45877	; 0xb335
     f04:	00524c45 	subseq	r4, r2, r5, asr #24
     f08:	415f504d 	cmpmi	pc, sp, asr #32
     f0c:	4c314250 	lfmmi	f4, 4, [r1], #-320	; 0xfffffec0
     f10:	534e4550 	movtpl	r4, #58704	; 0xe550
     f14:	00525445 	subseq	r5, r2, r5, asr #8
     f18:	52434442 	subpl	r4, r3, #1107296256	; 0x42000000
     f1c:	42504100 	subsmi	r4, r0, #0, 2
     f20:	54535235 	ldrbpl	r5, [r3], #-565	; 0xfffffdcb
     f24:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     f28:	474e5200 	strbmi	r5, [lr, -r0, lsl #4]
     f2c:	534b4331 	movtpl	r4, #45873	; 0xb331
     f30:	00524c45 	subseq	r4, r2, r5, asr #24
     f34:	34494153 	strbcc	r4, [r9], #-339	; 0xfffffead
     f38:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     f3c:	4900524c 	stmdbmi	r0, {r2, r3, r6, r9, ip, lr}
     f40:	36344332 			; <UNDEFINED> instruction: 0x36344332
     f44:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     f48:	6800524c 	stmdavs	r0, {r2, r3, r6, r9, ip, lr}
     f4c:	675f6c61 	ldrbvs	r6, [pc, -r1, ror #24]
     f50:	695f6369 	ldmdbvs	pc, {r0, r3, r5, r6, r8, r9, sp, lr}^	; <UNPREDICTABLE>
     f54:	0074696e 	rsbseq	r6, r4, lr, ror #18
     f58:	415f434d 	cmpmi	pc, sp, asr #6
     f5c:	45354250 	ldrmi	r4, [r5, #-592]!	; 0xfffffdb0
     f60:	524c434e 	subpl	r4, ip, #939524097	; 0x38000001
     f64:	53550052 	cmppl	r5, #82	; 0x52
     f68:	534b4342 	movtpl	r4, #45890	; 0xb342
     f6c:	00524c45 	subseq	r4, r2, r5, asr #24
     f70:	415f434d 	cmpmi	pc, sp, asr #6
     f74:	4c354250 	lfmmi	f4, 4, [r5], #-320	; 0xfffffec0
     f78:	434e4550 	movtmi	r4, #58704	; 0xe550
     f7c:	0052524c 	subseq	r5, r2, ip, asr #4
     f80:	314c4c50 	cmpcc	ip, r0, asr ip
     f84:	54005243 	strpl	r5, [r0], #-579	; 0xfffffdbd
     f88:	31474d49 	cmpcc	r7, r9, asr #26
     f8c:	52455250 	subpl	r5, r5, #80, 4
     f90:	4c4c5000 	marmi	acc0, r5, ip
     f94:	41524633 	cmpmi	r2, r3, lsr r6
     f98:	50005243 	andpl	r5, r0, r3, asr #4
     f9c:	43334c4c 	teqmi	r3, #76, 24	; 0x4c00
     fa0:	31524746 	cmpcc	r2, r6, asr #14
     fa4:	435a5400 	cmpmi	sl, #0, 8
     fa8:	434f0052 	movtmi	r0, #61522	; 0xf052
     fac:	52594452 	subspl	r4, r9, #1375731712	; 0x52000000
     fb0:	5f504d00 	svcpl	0x00504d00
     fb4:	31425041 	cmpcc	r2, r1, asr #32
     fb8:	4e45504c 	cdpmi	0, 4, cr5, cr5, cr12, {2}
     fbc:	52524c43 	subspl	r4, r2, #17152	; 0x4300
     fc0:	53534100 	cmppl	r3, #0, 2
     fc4:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
     fc8:	4d00524c 	sfmmi	f5, 4, [r0, #-304]	; 0xfffffed0
     fcc:	50415f50 	subpl	r5, r1, r0, asr pc
     fd0:	504c3242 	subpl	r3, ip, r2, asr #4
     fd4:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     fd8:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     fdc:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     fe0:	504c3442 	subpl	r3, ip, r2, asr #8
     fe4:	45534e45 	ldrbmi	r4, [r3, #-3653]	; 0xfffff1bb
     fe8:	41005254 	tstmi	r0, r4, asr r2
     fec:	52344250 	eorspl	r4, r4, #80, 4
     ff0:	45535453 	ldrbmi	r5, [r3, #-1107]	; 0xfffffbad
     ff4:	4d005254 	sfmmi	f5, 4, [r0, #-336]	; 0xfffffeb0
     ff8:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
     ffc:	4e453442 	cdpmi	4, 4, cr3, cr5, cr2, {2}
    1000:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
    1004:	434d4600 	movtmi	r4, #54784	; 0xd600
    1008:	45534b43 	ldrbmi	r4, [r3, #-2883]	; 0xfffff4bd
    100c:	5000524c 	andpl	r5, r0, ip, asr #4
    1010:	43324c4c 	teqmi	r2, #76, 24	; 0x4c00
    1014:	00524753 	subseq	r4, r2, r3, asr r7
    1018:	415f504d 	cmpmi	pc, sp, asr #32
    101c:	4c364248 	lfmmi	f4, 4, [r6], #-288	; 0xfffffee0
    1020:	434e4550 	movtmi	r4, #58704	; 0xe550
    1024:	0052524c 	subseq	r5, r2, ip, asr #4
    1028:	435f434d 	cmpmi	pc, #872415233	; 0x34000001
    102c:	00524649 	subseq	r4, r2, r9, asr #12
    1030:	32736572 	rsbscc	r6, r3, #478150656	; 0x1c800000
    1034:	504d0032 	subpl	r0, sp, r2, lsr r0
    1038:	5453525f 	ldrbpl	r5, [r3], #-607	; 0xfffffda1
    103c:	4d005253 	sfmmi	f5, 4, [r0, #-332]	; 0xfffffeb4
    1040:	48415f43 	stmdami	r1, {r0, r1, r6, r8, r9, sl, fp, ip, lr}^
    1044:	4e453642 	cdpmi	6, 4, cr3, cr5, cr2, {2}
    1048:	52544553 	subspl	r4, r4, #348127232	; 0x14c00000
    104c:	64656c00 	strbtvs	r6, [r5], #-3072	; 0xfffff400
    1050:	0064695f 	rsbeq	r6, r4, pc, asr r9
    1054:	67676f74 			; <UNDEFINED> instruction: 0x67676f74
    1058:	6c5f656c 	cfldr64vs	mvdx6, [pc], {108}	; 0x6c
    105c:	73006465 	movwvc	r6, #1125	; 0x465
    1060:	6c2f6372 	stcvs	3, cr6, [pc], #-456	; ea0 <_start-0xc0007160>
    1064:	632e6465 			; <UNDEFINED> instruction: 0x632e6465
    1068:	64656c00 	strbtvs	r6, [r5], #-3072	; 0xfffff400
    106c:	696e695f 	stmdbvs	lr!, {r0, r1, r2, r3, r4, r6, r8, fp, sp, lr}^
    1070:	616d0074 	smcvs	53252	; 0xd004
    1074:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
    1078:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
    107c:	6564006e 	strbvs	r0, [r4, #-110]!	; 0xffffff92
    1080:	5f79616c 	svcpl	0x0079616c
    1084:	地址 0x00001084 越界。


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000001c 	andeq	r0, r0, ip, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	c000835c 	andgt	r8, r0, ip, asr r3
  1c:	00000050 	andeq	r0, r0, r0, asr r0
  20:	8b040e42 	blhi	103930 <_start-0xbff046d0>
  24:	0b0d4201 	bleq	350830 <_start-0xbfcb77d0>
  28:	420d0d60 	andmi	r0, sp, #96, 26	; 0x1800
  2c:	00000ecb 	andeq	r0, r0, fp, asr #29
  30:	0000001c 	andeq	r0, r0, ip, lsl r0
  34:	00000000 	andeq	r0, r0, r0
  38:	c00083ac 	andgt	r8, r0, ip, lsr #7
  3c:	000001b8 			; <UNDEFINED> instruction: 0x000001b8
  40:	8b080e42 	blhi	203950 <_start-0xbfe046b0>
  44:	42018e02 	andmi	r8, r1, #2, 28
  48:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
  4c:	080d0cd6 	stmdaeq	sp, {r1, r2, r4, r6, r7, sl, fp}
  50:	0000001c 	andeq	r0, r0, ip, lsl r0
  54:	00000000 	andeq	r0, r0, r0
  58:	c0008564 	andgt	r8, r0, r4, ror #10
  5c:	0000006c 	andeq	r0, r0, ip, rrx
  60:	8b080e42 	blhi	203970 <_start-0xbfe04690>
  64:	42018e02 	andmi	r8, r1, #2, 28
  68:	70040b0c 	andvc	r0, r4, ip, lsl #22
  6c:	00080d0c 	andeq	r0, r8, ip, lsl #26
  70:	0000001c 	andeq	r0, r0, ip, lsl r0
  74:	00000000 	andeq	r0, r0, r0
  78:	c00085d0 	ldrdgt	r8, [r0], -r0
  7c:	00000094 	muleq	r0, r4, r0
  80:	8b040e42 	blhi	103990 <_start-0xbff04670>
  84:	0b0d4201 	bleq	350890 <_start-0xbfcb7770>
  88:	0d0d4202 	sfmeq	f4, 4, [sp, #-8]
  8c:	000ecb42 	andeq	ip, lr, r2, asr #22
  90:	00000020 	andeq	r0, r0, r0, lsr #32
  94:	00000000 	andeq	r0, r0, r0
  98:	c0008664 	andgt	r8, r0, r4, ror #12
  9c:	000003e4 	andeq	r0, r0, r4, ror #7
  a0:	8b080e42 	blhi	2039b0 <_start-0xbfe04650>
  a4:	42018e02 	andmi	r8, r1, #2, 28
  a8:	03040b0c 	movweq	r0, #19212	; 0x4b0c
  ac:	0d0c01ec 	stfeqs	f0, [ip, #-944]	; 0xfffffc50
  b0:	00000008 	andeq	r0, r0, r8
  b4:	0000001c 	andeq	r0, r0, ip, lsl r0
  b8:	00000000 	andeq	r0, r0, r0
  bc:	c0008a48 	andgt	r8, r0, r8, asr #20
  c0:	0000006c 	andeq	r0, r0, ip, rrx
  c4:	8b040e42 	blhi	1039d4 <_start-0xbff0462c>
  c8:	0b0d4201 	bleq	3508d4 <_start-0xbfcb772c>
  cc:	420d0d6e 	andmi	r0, sp, #7040	; 0x1b80
  d0:	00000ecb 	andeq	r0, r0, fp, asr #29
  d4:	00000020 	andeq	r0, r0, r0, lsr #32
  d8:	00000000 	andeq	r0, r0, r0
  dc:	c0008ab4 			; <UNDEFINED> instruction: 0xc0008ab4
  e0:	000008c8 	andeq	r0, r0, r8, asr #17
  e4:	8b080e42 	blhi	2039f4 <_start-0xbfe0460c>
  e8:	42018e02 	andmi	r8, r1, #2, 28
  ec:	03040b0c 	movweq	r0, #19212	; 0x4b0c
  f0:	0d0c045e 	cfstrseq	mvf0, [ip, #-376]	; 0xfffffe88
  f4:	00000008 	andeq	r0, r0, r8
  f8:	00000030 	andeq	r0, r0, r0, lsr r0
  fc:	00000000 	andeq	r0, r0, r0
 100:	c000937c 	andgt	r9, r0, ip, ror r3
 104:	0000004c 	andeq	r0, r0, ip, asr #32
 108:	810c0e42 	tsthi	ip, r2, asr #28
 10c:	83028203 	movwhi	r8, #8707	; 0x2203
 110:	140e4201 	strne	r4, [lr], #-513	; 0xfffffdff
 114:	048e058b 	streq	r0, [lr], #1419	; 0x58b
 118:	100b0c42 	andne	r0, fp, r2, asr #24
 11c:	140d0c5a 	strne	r0, [sp], #-3162	; 0xfffff3a6
 120:	0ecbce42 	cdpeq	14, 12, cr12, cr11, cr2, {2}
 124:	c2c3420c 	sbcgt	r4, r3, #12, 4	; 0xc0000000
 128:	00000ec1 	andeq	r0, r0, r1, asr #29
 12c:	00000034 	andeq	r0, r0, r4, lsr r0
 130:	00000000 	andeq	r0, r0, r0
 134:	c00093c8 	andgt	r9, r0, r8, asr #7
 138:	0000004c 	andeq	r0, r0, ip, asr #32
 13c:	80100e42 	andshi	r0, r0, r2, asr #28
 140:	82038104 	andhi	r8, r3, #4, 2
 144:	42018302 	andmi	r8, r1, #134217728	; 0x8000000
 148:	068b180e 	streq	r1, [fp], lr, lsl #16
 14c:	0c42058e 	cfstr64eq	mvdx0, [r2], {142}	; 0x8e
 150:	0c5a140b 	cfldrdeq	mvd1, [sl], {11}
 154:	ce42180d 	cdpgt	8, 4, cr1, cr2, cr13, {0}
 158:	42100ecb 	andsmi	r0, r0, #3248	; 0xcb0
 15c:	c0c1c2c3 	sbcgt	ip, r1, r3, asr #5
 160:	0000000e 	andeq	r0, r0, lr
 164:	0000000c 	andeq	r0, r0, ip
 168:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 16c:	7c020001 	stcvc	0, cr0, [r2], {1}
 170:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 174:	0000001c 	andeq	r0, r0, ip, lsl r0
 178:	00000164 	andeq	r0, r0, r4, ror #2
 17c:	c0009414 	andgt	r9, r0, r4, lsl r4
 180:	000001e8 	andeq	r0, r0, r8, ror #3
 184:	8b040e42 	blhi	103a94 <_start-0xbff0456c>
 188:	0b0d4201 	bleq	350994 <_start-0xbfcb766c>
 18c:	0d0dec02 	stceq	12, cr14, [sp, #-8]
 190:	000ecb42 	andeq	ip, lr, r2, asr #22
 194:	0000001c 	andeq	r0, r0, ip, lsl r0
 198:	00000164 	andeq	r0, r0, r4, ror #2
 19c:	c00095fc 	strdgt	r9, [r0], -ip
 1a0:	00000060 	andeq	r0, r0, r0, rrx
 1a4:	8b080e42 	blhi	203ab4 <_start-0xbfe0454c>
 1a8:	42018e02 	andmi	r8, r1, #2, 28
 1ac:	6a040b0c 	bvs	102de4 <_start-0xbff0521c>
 1b0:	00080d0c 	andeq	r0, r8, ip, lsl #26
 1b4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1b8:	00000164 	andeq	r0, r0, r4, ror #2
 1bc:	c000965c 	andgt	r9, r0, ip, asr r6
 1c0:	00000048 	andeq	r0, r0, r8, asr #32
 1c4:	8b080e42 	blhi	203ad4 <_start-0xbfe0452c>
 1c8:	42018e02 	andmi	r8, r1, #2, 28
 1cc:	5e040b0c 	vmlapl.f64	d0, d4, d12
 1d0:	00080d0c 	andeq	r0, r8, ip, lsl #26
 1d4:	0000001c 	andeq	r0, r0, ip, lsl r0
 1d8:	00000164 	andeq	r0, r0, r4, ror #2
 1dc:	c00096a4 	andgt	r9, r0, r4, lsr #13
 1e0:	0000004c 	andeq	r0, r0, ip, asr #32
 1e4:	8b040e42 	blhi	103af4 <_start-0xbff0450c>
 1e8:	0b0d4201 	bleq	3509f4 <_start-0xbfcb760c>
 1ec:	420d0d5e 	andmi	r0, sp, #6016	; 0x1780
 1f0:	00000ecb 	andeq	r0, r0, fp, asr #29
 1f4:	0000000c 	andeq	r0, r0, ip
 1f8:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 1fc:	7c020001 	stcvc	0, cr0, [r2], {1}
 200:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 204:	0000001c 	andeq	r0, r0, ip, lsl r0
 208:	000001f4 	strdeq	r0, [r0], -r4
 20c:	c00096f0 	strdgt	r9, [r0], -r0
 210:	00000170 	andeq	r0, r0, r0, ror r1
 214:	8b080e42 	blhi	203b24 <_start-0xbfe044dc>
 218:	42018e02 	andmi	r8, r1, #2, 28
 21c:	02040b0c 	andeq	r0, r4, #12, 22	; 0x3000
 220:	080d0cb2 	stmdaeq	sp, {r1, r4, r5, r7, sl, fp}
 224:	0000000c 	andeq	r0, r0, ip
 228:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 22c:	7c020001 	stcvc	0, cr0, [r2], {1}
 230:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 234:	00000018 	andeq	r0, r0, r8, lsl r0
 238:	00000224 	andeq	r0, r0, r4, lsr #4
 23c:	c0009860 	andgt	r9, r0, r0, ror #16
 240:	000000cc 	andeq	r0, r0, ip, asr #1
 244:	8b080e42 	blhi	203b54 <_start-0xbfe044ac>
 248:	42018e02 	andmi	r8, r1, #2, 28
 24c:	00040b0c 	andeq	r0, r4, ip, lsl #22
 250:	00000020 	andeq	r0, r0, r0, lsr #32
 254:	00000224 	andeq	r0, r0, r4, lsr #4
 258:	c000992c 	andgt	r9, r0, ip, lsr #18
 25c:	0000022c 	andeq	r0, r0, ip, lsr #4
 260:	8b040e42 	blhi	103b70 <_start-0xbff04490>
 264:	0b0d4201 	bleq	350a70 <_start-0xbfcb7590>
 268:	0d010e03 	stceq	14, cr0, [r1, #-12]
 26c:	0ecb420d 	cdpeq	2, 12, cr4, cr11, cr13, {0}
 270:	00000000 	andeq	r0, r0, r0
 274:	00000020 	andeq	r0, r0, r0, lsr #32
 278:	00000224 	andeq	r0, r0, r4, lsr #4
 27c:	c0009b58 	andgt	r9, r0, r8, asr fp
 280:	00000218 	andeq	r0, r0, r8, lsl r2
 284:	8b040e42 	blhi	103b94 <_start-0xbff0446c>
 288:	0b0d4201 	bleq	350a94 <_start-0xbfcb756c>
 28c:	0d010403 	cfstrseq	mvf0, [r1, #-12]
 290:	0ecb420d 	cdpeq	2, 12, cr4, cr11, cr13, {0}
 294:	00000000 	andeq	r0, r0, r0
 298:	0000000c 	andeq	r0, r0, ip
 29c:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 2a0:	7c020001 	stcvc	0, cr0, [r2], {1}
 2a4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 2a8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2ac:	00000298 	muleq	r0, r8, r2
 2b0:	c0009d70 	andgt	r9, r0, r0, ror sp
 2b4:	000001d0 	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
 2b8:	8b040e42 	blhi	103bc8 <_start-0xbff04438>
 2bc:	0b0d4201 	bleq	350ac8 <_start-0xbfcb7538>
 2c0:	0d0de002 	stceq	0, cr14, [sp, #-8]
 2c4:	000ecb42 	andeq	ip, lr, r2, asr #22
 2c8:	0000001c 	andeq	r0, r0, ip, lsl r0
 2cc:	00000298 	muleq	r0, r8, r2
 2d0:	c0009f40 	andgt	r9, r0, r0, asr #30
 2d4:	000000a0 	andeq	r0, r0, r0, lsr #1
 2d8:	8b040e42 	blhi	103be8 <_start-0xbff04418>
 2dc:	0b0d4201 	bleq	350ae8 <_start-0xbfcb7518>
 2e0:	0d0d4802 	stceq	8, cr4, [sp, #-8]
 2e4:	000ecb42 	andeq	ip, lr, r2, asr #22
 2e8:	0000000c 	andeq	r0, r0, ip
 2ec:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 2f0:	7c020001 	stcvc	0, cr0, [r2], {1}
 2f4:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 2f8:	00000018 	andeq	r0, r0, r8, lsl r0
 2fc:	000002e8 	andeq	r0, r0, r8, ror #5
 300:	c0009fe0 	andgt	r9, r0, r0, ror #31
 304:	00000028 	andeq	r0, r0, r8, lsr #32
 308:	8b080e42 	blhi	203c18 <_start-0xbfe043e8>
 30c:	42018e02 	andmi	r8, r1, #2, 28
 310:	00040b0c 	andeq	r0, r4, ip, lsl #22
 314:	0000001c 	andeq	r0, r0, ip, lsl r0
 318:	000002e8 	andeq	r0, r0, r8, ror #5
 31c:	c000a008 	andgt	sl, r0, r8
 320:	00000070 	andeq	r0, r0, r0, ror r0
 324:	8b040e42 	blhi	103c34 <_start-0xbff043cc>
 328:	0b0d4201 	bleq	350b34 <_start-0xbfcb74cc>
 32c:	420d0d70 	andmi	r0, sp, #112, 26	; 0x1c00
 330:	00000ecb 	andeq	r0, r0, fp, asr #29
